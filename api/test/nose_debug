nose.config: INFO: Ignoring files matching ['^\\.', '^_', '^setup\\.py$']
nose.plugins.manager: DEBUG: Configuring plugins
nose.plugins.manager: DEBUG: Plugins enabled: [<nose.plugins.capture.Capture object at 0x7fdb2208a410>, <nose.plugins.logcapture.LogCapture object at 0x7fdb2209e810>, <nose.plugins.deprecated.Deprecated object at 0x7fdb2209ed10>, <nose.plugins.skip.Skip object at 0x7fdb2154fd50>]
nose.core: DEBUG: configured Config(addPaths=True, args=(), configSection='nosetests', debug='nose,nose.importer', debugLog='nose_debug', env={}, exclude=None, files=[], firstPackageWins=False, getTestCaseNamesCompat=False, ignoreFiles=[<_sre.SRE_Pattern object at 0x7fdb23cfaab0>, <_sre.SRE_Pattern object at 0x7fdb23ca1e30>, <_sre.SRE_Pattern object at 0x7fdb23d99ab0>], ignoreFilesDefaultStrings=['^\\.', '^_', '^setup\\.py$'], include=None, includeExe=False, logStream=<open file '<stderr>', mode 'w' at 0x7fdb23de11e0>, loggingConfig=None, options=<Values at 0x7fdb215705f0: {'xunit_file': 'nosetests.xml', 'enable_plugin_allmodules': None, 'multiprocess_restartworker': False, 'loggingConfig': None, 'doctestExtension': None, 'doctest_tests': None, 'enable_plugin_xunit': None, 'logcapture_clear': False, 'stopOnError': False, 'enable_plugin_id': None, 'testNames': None, 'doctestOptions': None, 'exclude': [], 'byteCompile': True, 'ignoreFiles': [], 'logcapture': True, 'addPaths': True, 'capture': True, 'xunit_testsuite_name': 'nosetests', 'logcapture_level': 'NOTSET', 'cover_xml': None, 'py3where': None, 'noSkip': False, 'enable_plugin_isolation': None, 'logcapture_filters': None, 'collect_only': None, 'failed': False, 'version': False, 'eval_attr': None, 'include': [], 'enable_plugin_profile': None, 'debugErrors': False, 'files': None, 'cover_tests': None, 'multiprocess_timeout': 10, 'testMatch': '(?:^|[\\b_\\./-])[Tt]est', 'traverseNamespace': False, 'firstPackageWins': False, 'cover_html_dir': 'cover', 'cover_branches': None, 'debugBoth': False, 'noDeprecated': False, 'cover_xml_file': 'coverage.xml', 'showPlugins': False, 'cover_erase': None, 'multiprocess_workers': 0, 'testIdFile': '.noseids', 'enable_plugin_coverage': None, 'attr': None, 'profile_sort': 'cumulative', 'doctestFixtures': None, 'logcapture_datefmt': None, 'cover_packages': None, 'verbosity': 1, 'enable_plugin_doctest': None, 'profile_stats_file': None, 'cover_inclusive': None, 'includeExe': False, 'logcapture_format': '%(name)s: %(levelname)s: %(message)s', 'debugFailures': False, 'detailedErrors': None, 'debugLog': 'nose_debug', 'doctest_result_var': None, 'cover_html': None, 'debug': 'nose,nose.importer', 'cover_min_percentage': None, 'where': None, 'profile_restrict': None}>, parser=<optparse.OptionParser instance at 0x7fdb22087f38>, parserClass=<class optparse.OptionParser at 0x7fdb22723f58>, plugins=<nose.plugins.manager.DefaultPluginManager object at 0x7fdb22082ed0>, py3where=(), runOnInit=True, srcDirs=('lib', 'src'), stopOnError=False, stream=<open file '<stderr>', mode 'w' at 0x7fdb23de11e0>, testMatch=<_sre.SRE_Pattern object at 0x7fdb2208d030>, testMatchPat='(?:^|[\\b_\\./-])[Tt]est', testNames=['navori.py'], traverseNamespace=False, verbosity=1, where=(), worker=False, workingDir='/home/damian/Malambo/api/test')
nose.importer: DEBUG: Add path /home/damian/Malambo/api/test
nose.importer: DEBUG: insert /home/damian/Malambo/api/test into sys.path
nose.core: DEBUG: test loader is <nose.loader.TestLoader object at 0x7fdb215740d0>
nose.core: DEBUG: defaultTest .
nose.core: DEBUG: Test names are ['navori.py']
nose.core: DEBUG: createTests called with None
nose.loader: DEBUG: load from navori.py (None)
nose.selector: DEBUG: Test name navori.py resolved to file navori.py, module None, call None
nose.selector: DEBUG: Final resolution of test name navori.py: file /home/damian/Malambo/api/test/navori.py module navori call None
nose.importer: DEBUG: Import navori from /home/damian/Malambo/api/test
nose.importer: DEBUG: Add path /home/damian/Malambo/api/test
nose.importer: DEBUG: find module part navori (navori) in ['/home/damian/Malambo/api/test']
nose.failure: DEBUG: A failure! <type 'exceptions.ImportError'> cannot import name navori ['  File "/usr/local/lib/python2.7/dist-packages/nose/loader.py", line 418, in loadTestsFromName\n    addr.filename, addr.module)\n', '  File "/usr/local/lib/python2.7/dist-packages/nose/importer.py", line 47, in importFromPath\n    return self.importFromDir(dir_path, fqname)\n', '  File "/usr/local/lib/python2.7/dist-packages/nose/importer.py", line 94, in importFromDir\n    mod = load_module(part_fqname, fh, filename, desc)\n', '  File "/home/damian/Malambo/api/test/navori.py", line 2, in <module>\n    from navori import navori\n']
nose.suite: DEBUG: Create suite for [<nose.failure.Failure testMethod=runTest>]
nose.suite: DEBUG: tests [<nose.failure.Failure testMethod=runTest>] context None
nose.suite: DEBUG: wrap [<nose.failure.Failure testMethod=runTest>]
nose.suite: DEBUG: wrapping Failure: ImportError (cannot import name navori)
nose.suite: DEBUG: Context suite for [Test(<nose.failure.Failure testMethod=runTest>)] (<class 'nose.failure.Failure'>) (140579128876048)
nose.suite: DEBUG: suite <nose.suite.ContextSuite context=Failure> has context Failure
nose.suite: DEBUG: get ancestry <class 'nose.failure.Failure'>
nose.suite: DEBUG:  <class 'nose.failure.Failure'> ancestors ['nose', 'failure']
nose: DEBUG: __import__ nose.failure
nose: DEBUG: resolve: ['failure'], nose.failure, <module 'nose' from '/usr/local/lib/python2.7/dist-packages/nose/__init__.pyc'>, <module 'nose' from '/usr/local/lib/python2.7/dist-packages/nose/__init__.pyc'>
nose.suite: DEBUG: suite <nose.suite.ContextSuite context=Failure> has ancestor nose.failure
nose.suite: DEBUG:  <class 'nose.failure.Failure'> ancestors ['nose']
nose: DEBUG: __import__ nose
nose: DEBUG: resolve: [], nose, <module 'nose' from '/usr/local/lib/python2.7/dist-packages/nose/__init__.pyc'>, <module 'nose' from '/usr/local/lib/python2.7/dist-packages/nose/__init__.pyc'>
nose.suite: DEBUG: suite <nose.suite.ContextSuite context=Failure> has ancestor nose
nose.suite: DEBUG: Create suite for [<nose.suite.ContextSuite context=Failure>]
nose.suite: DEBUG: tests [<nose.suite.ContextSuite context=Failure>] context None
nose.suite: DEBUG: wrap [<nose.suite.ContextSuite context=Failure>]
nose.suite: DEBUG: wrapping <nose.suite.ContextSuite context=Failure>
nose.suite: DEBUG: Context suite for [<nose.suite.ContextSuite context=Failure>] (<class 'nose.failure.Failure'>) (140579133932688)
nose.suite: DEBUG: suite <nose.suite.ContextSuite context=Failure> has context Failure
nose.suite: DEBUG: get ancestry <class 'nose.failure.Failure'>
nose.suite: DEBUG:  <class 'nose.failure.Failure'> ancestors ['nose', 'failure']
nose: DEBUG: __import__ nose.failure
nose: DEBUG: resolve: ['failure'], nose.failure, <module 'nose' from '/usr/local/lib/python2.7/dist-packages/nose/__init__.pyc'>, <module 'nose' from '/usr/local/lib/python2.7/dist-packages/nose/__init__.pyc'>
nose.suite: DEBUG: suite <nose.suite.ContextSuite context=Failure> has ancestor nose.failure
nose.suite: DEBUG:  <class 'nose.failure.Failure'> ancestors ['nose']
nose: DEBUG: __import__ nose
nose: DEBUG: resolve: [], nose, <module 'nose' from '/usr/local/lib/python2.7/dist-packages/nose/__init__.pyc'>, <module 'nose' from '/usr/local/lib/python2.7/dist-packages/nose/__init__.pyc'>
nose.suite: DEBUG: suite <nose.suite.ContextSuite context=Failure> has ancestor nose
nose.core: DEBUG: runTests called
nose.suite: DEBUG: suite 140579133932688 (<nose.suite.ContextSuite context=Failure>) run called, tests: <generator object _get_wrapped_tests at 0x7fdb210a6640>
nose.suite: DEBUG: suite 140579133932688 setUp called, tests: <generator object _get_wrapped_tests at 0x7fdb210a6820>
nose.suite: DEBUG: tests in 140579133932688?
nose.suite: DEBUG: ancestor <module 'nose' from '/usr/local/lib/python2.7/dist-packages/nose/__init__.pyc'> may need setup
nose.suite: DEBUG: ancestor <module 'nose' from '/usr/local/lib/python2.7/dist-packages/nose/__init__.pyc'> does need setup
nose.suite: DEBUG: <nose.suite.ContextSuite context=Failure> setup context <module 'nose' from '/usr/local/lib/python2.7/dist-packages/nose/__init__.pyc'>
nose.suite: DEBUG: ancestor <module 'nose.failure' from '/usr/local/lib/python2.7/dist-packages/nose/failure.pyc'> may need setup
nose.suite: DEBUG: ancestor <module 'nose.failure' from '/usr/local/lib/python2.7/dist-packages/nose/failure.pyc'> does need setup
nose.suite: DEBUG: <nose.suite.ContextSuite context=Failure> setup context <module 'nose.failure' from '/usr/local/lib/python2.7/dist-packages/nose/failure.pyc'>
nose.suite: DEBUG: ancestor <class 'nose.failure.Failure'> may need setup
nose.suite: DEBUG: ancestor <class 'nose.failure.Failure'> does need setup
nose.suite: DEBUG: <nose.suite.ContextSuite context=Failure> setup context <class 'nose.failure.Failure'>
nose: DEBUG: call fixture <class 'nose.failure.Failure'>.setUpClass
nose.suite: DEBUG: completed suite setup
nose.suite: DEBUG: precache is [<nose.suite.ContextSuite context=Failure>]
nose.suite: DEBUG: suite 140579128876048 (<nose.suite.ContextSuite context=Failure>) run called, tests: <generator object _get_wrapped_tests at 0x7fdb210a6910>
nose.suite: DEBUG: suite 140579128876048 setUp called, tests: <generator object _get_wrapped_tests at 0x7fdb210a6910>
nose.suite: DEBUG: tests in 140579128876048?
nose.suite: DEBUG: ancestor <module 'nose' from '/usr/local/lib/python2.7/dist-packages/nose/__init__.pyc'> may need setup
nose.suite: DEBUG: ancestor <module 'nose.failure' from '/usr/local/lib/python2.7/dist-packages/nose/failure.pyc'> may need setup
nose.suite: DEBUG: ancestor <class 'nose.failure.Failure'> may need setup
nose.suite: DEBUG: completed suite setup
nose.suite: DEBUG: precache is [Test(<nose.failure.Failure testMethod=runTest>)]
nose.suite: DEBUG: context teardown
nose.suite: DEBUG: ancestor <class 'nose.failure.Failure'> may need teardown
nose.suite: DEBUG: <nose.suite.ContextSuite context=Failure> setup ancestor <class 'nose.failure.Failure'>
nose.suite: DEBUG: ancestor <module 'nose.failure' from '/usr/local/lib/python2.7/dist-packages/nose/failure.pyc'> may need teardown
nose.suite: DEBUG: <nose.suite.ContextSuite context=Failure> setup ancestor <module 'nose.failure' from '/usr/local/lib/python2.7/dist-packages/nose/failure.pyc'>
nose.suite: DEBUG: ancestor <module 'nose' from '/usr/local/lib/python2.7/dist-packages/nose/__init__.pyc'> may need teardown
nose.suite: DEBUG: <nose.suite.ContextSuite context=Failure> setup ancestor <module 'nose' from '/usr/local/lib/python2.7/dist-packages/nose/__init__.pyc'>
nose.suite: DEBUG: ancestor <class 'nose.failure.Failure'> may need teardown
nose.suite: DEBUG: <nose.suite.ContextSuite context=Failure> setup ancestor <class 'nose.failure.Failure'>
nose.suite: DEBUG: context teardown
nose.suite: DEBUG: ancestor <class 'nose.failure.Failure'> may need teardown
nose.suite: DEBUG: <nose.suite.ContextSuite context=Failure> setup ancestor <class 'nose.failure.Failure'>
nose.suite: DEBUG: <nose.suite.ContextSuite context=Failure> teardown context <class 'nose.failure.Failure'>
nose: DEBUG: call fixture <class 'nose.failure.Failure'>.tearDownClass
nose.suite: DEBUG: ancestor <module 'nose.failure' from '/usr/local/lib/python2.7/dist-packages/nose/failure.pyc'> may need teardown
nose.suite: DEBUG: <nose.suite.ContextSuite context=Failure> setup ancestor <module 'nose.failure' from '/usr/local/lib/python2.7/dist-packages/nose/failure.pyc'>
nose.suite: DEBUG: <nose.suite.ContextSuite context=Failure> teardown context <module 'nose.failure' from '/usr/local/lib/python2.7/dist-packages/nose/failure.pyc'>
nose.suite: DEBUG: ancestor <module 'nose' from '/usr/local/lib/python2.7/dist-packages/nose/__init__.pyc'> may need teardown
nose.suite: DEBUG: <nose.suite.ContextSuite context=Failure> setup ancestor <module 'nose' from '/usr/local/lib/python2.7/dist-packages/nose/__init__.pyc'>
nose.suite: DEBUG: <nose.suite.ContextSuite context=Failure> teardown context <module 'nose' from '/usr/local/lib/python2.7/dist-packages/nose/__init__.pyc'>
nose.suite: DEBUG: ancestor <class 'nose.failure.Failure'> may need teardown
nose.suite: DEBUG: ancestor <class 'nose.failure.Failure'> already torn down
nose.config: INFO: Ignoring files matching ['^\\.', '^_', '^setup\\.py$']
nose.plugins.manager: DEBUG: Configuring plugins
nose.plugins.manager: DEBUG: Plugins enabled: [<nose.plugins.capture.Capture object at 0x7fdbb32be410>, <nose.plugins.logcapture.LogCapture object at 0x7fdbb32d2810>, <nose.plugins.deprecated.Deprecated object at 0x7fdbb32d2d10>, <nose.plugins.skip.Skip object at 0x7fdbb2783d50>]
nose.core: DEBUG: configured Config(addPaths=True, args=(), configSection='nosetests', debug='nose,nose.importer', debugLog='nose_debug', env={}, exclude=None, files=[], firstPackageWins=False, getTestCaseNamesCompat=False, ignoreFiles=[<_sre.SRE_Pattern object at 0x7fdbb4f2eab0>, <_sre.SRE_Pattern object at 0x7fdbb4ed5e30>, <_sre.SRE_Pattern object at 0x7fdbb4fcdab0>], ignoreFilesDefaultStrings=['^\\.', '^_', '^setup\\.py$'], include=None, includeExe=False, logStream=<open file '<stderr>', mode 'w' at 0x7fdbb50151e0>, loggingConfig=None, options=<Values at 0x7fdbb27a45f0: {'xunit_file': 'nosetests.xml', 'enable_plugin_allmodules': None, 'multiprocess_restartworker': False, 'loggingConfig': None, 'doctestExtension': None, 'doctest_tests': None, 'enable_plugin_xunit': None, 'logcapture_clear': False, 'stopOnError': False, 'enable_plugin_id': None, 'testNames': None, 'doctestOptions': None, 'exclude': [], 'byteCompile': True, 'ignoreFiles': [], 'logcapture': True, 'addPaths': True, 'capture': True, 'xunit_testsuite_name': 'nosetests', 'logcapture_level': 'NOTSET', 'cover_xml': None, 'py3where': None, 'noSkip': False, 'enable_plugin_isolation': None, 'logcapture_filters': None, 'collect_only': None, 'failed': False, 'version': False, 'eval_attr': None, 'include': [], 'enable_plugin_profile': None, 'debugErrors': False, 'files': None, 'cover_tests': None, 'multiprocess_timeout': 10, 'testMatch': '(?:^|[\\b_\\./-])[Tt]est', 'traverseNamespace': False, 'firstPackageWins': False, 'cover_html_dir': 'cover', 'cover_branches': None, 'debugBoth': False, 'noDeprecated': False, 'cover_xml_file': 'coverage.xml', 'showPlugins': False, 'cover_erase': None, 'multiprocess_workers': 0, 'testIdFile': '.noseids', 'enable_plugin_coverage': None, 'attr': None, 'profile_sort': 'cumulative', 'doctestFixtures': None, 'logcapture_datefmt': None, 'cover_packages': None, 'verbosity': 1, 'enable_plugin_doctest': None, 'profile_stats_file': None, 'cover_inclusive': None, 'includeExe': False, 'logcapture_format': '%(name)s: %(levelname)s: %(message)s', 'debugFailures': False, 'detailedErrors': None, 'debugLog': 'nose_debug', 'doctest_result_var': None, 'cover_html': None, 'debug': 'nose,nose.importer', 'cover_min_percentage': None, 'where': None, 'profile_restrict': None}>, parser=<optparse.OptionParser instance at 0x7fdbb32bbf38>, parserClass=<class optparse.OptionParser at 0x7fdbb3957f58>, plugins=<nose.plugins.manager.DefaultPluginManager object at 0x7fdbb32b6ed0>, py3where=(), runOnInit=True, srcDirs=('lib', 'src'), stopOnError=False, stream=<open file '<stderr>', mode 'w' at 0x7fdbb50151e0>, testMatch=<_sre.SRE_Pattern object at 0x7fdbb32c1030>, testMatchPat='(?:^|[\\b_\\./-])[Tt]est', testNames=['navori.py'], traverseNamespace=False, verbosity=1, where=(), worker=False, workingDir='/home/damian/Malambo/api/test')
nose.importer: DEBUG: Add path /home/damian/Malambo/api/test
nose.importer: DEBUG: insert /home/damian/Malambo/api/test into sys.path
nose.core: DEBUG: test loader is <nose.loader.TestLoader object at 0x7fdbb27a80d0>
nose.core: DEBUG: defaultTest .
nose.core: DEBUG: Test names are ['navori.py']
nose.core: DEBUG: createTests called with None
nose.loader: DEBUG: load from navori.py (None)
nose.selector: DEBUG: Test name navori.py resolved to file navori.py, module None, call None
nose.selector: DEBUG: Final resolution of test name navori.py: file /home/damian/Malambo/api/test/navori.py module navori call None
nose.importer: DEBUG: Import navori from /home/damian/Malambo/api/test
nose.importer: DEBUG: Add path /home/damian/Malambo/api/test
nose.importer: DEBUG: find module part navori (navori) in ['/home/damian/Malambo/api/test']
nose.loader: DEBUG: Load from module <module 'navori' from '/home/damian/Malambo/api/test/navori.py'>
nose.selector: DEBUG: wantClass <class 'navori.navoriTest'>? True
nose.selector: DEBUG: wantMethod <unbound method navoriTest.addCleanup>? None
nose.selector: DEBUG: wantMethod <unbound method navoriTest.addTypeEqualityFunc>? None
nose.selector: DEBUG: wantMethod <unbound method navoriTest.assertAlmostEqual>? None
nose.selector: DEBUG: wantMethod <unbound method navoriTest.assertAlmostEqual>? None
nose.selector: DEBUG: wantMethod <unbound method navoriTest.assertDictContainsSubset>? None
nose.selector: DEBUG: wantMethod <unbound method navoriTest.assertDictEqual>? None
nose.selector: DEBUG: wantMethod <unbound method navoriTest.assertEqual>? None
nose.selector: DEBUG: wantMethod <unbound method navoriTest.assertEqual>? None
nose.selector: DEBUG: wantMethod <unbound method navoriTest.assertFalse>? None
nose.selector: DEBUG: wantMethod <unbound method navoriTest.assertGreater>? None
nose.selector: DEBUG: wantMethod <unbound method navoriTest.assertGreaterEqual>? None
nose.selector: DEBUG: wantMethod <unbound method navoriTest.assertIn>? None
nose.selector: DEBUG: wantMethod <unbound method navoriTest.assertIs>? None
nose.selector: DEBUG: wantMethod <unbound method navoriTest.assertIsInstance>? None
nose.selector: DEBUG: wantMethod <unbound method navoriTest.assertIsNone>? None
nose.selector: DEBUG: wantMethod <unbound method navoriTest.assertIsNot>? None
nose.selector: DEBUG: wantMethod <unbound method navoriTest.assertIsNotNone>? None
nose.selector: DEBUG: wantMethod <unbound method navoriTest.assertItemsEqual>? None
nose.selector: DEBUG: wantMethod <unbound method navoriTest.assertLess>? None
nose.selector: DEBUG: wantMethod <unbound method navoriTest.assertLessEqual>? None
nose.selector: DEBUG: wantMethod <unbound method navoriTest.assertListEqual>? None
nose.selector: DEBUG: wantMethod <unbound method navoriTest.assertMultiLineEqual>? None
nose.selector: DEBUG: wantMethod <unbound method navoriTest.assertNotAlmostEqual>? None
nose.selector: DEBUG: wantMethod <unbound method navoriTest.assertNotAlmostEqual>? None
nose.selector: DEBUG: wantMethod <unbound method navoriTest.assertNotEqual>? None
nose.selector: DEBUG: wantMethod <unbound method navoriTest.assertNotEqual>? None
nose.selector: DEBUG: wantMethod <unbound method navoriTest.assertNotIn>? None
nose.selector: DEBUG: wantMethod <unbound method navoriTest.assertNotIsInstance>? None
nose.selector: DEBUG: wantMethod <unbound method navoriTest.assertNotRegexpMatches>? None
nose.selector: DEBUG: wantMethod <unbound method navoriTest.assertRaises>? None
nose.selector: DEBUG: wantMethod <unbound method navoriTest.assertRaisesRegexp>? None
nose.selector: DEBUG: wantMethod <unbound method navoriTest.assertRegexpMatches>? None
nose.selector: DEBUG: wantMethod <unbound method navoriTest.assertSequenceEqual>? None
nose.selector: DEBUG: wantMethod <unbound method navoriTest.assertSetEqual>? None
nose.selector: DEBUG: wantMethod <unbound method navoriTest.assertTrue>? None
nose.selector: DEBUG: wantMethod <unbound method navoriTest.assertTupleEqual>? None
nose.selector: DEBUG: wantMethod <unbound method navoriTest.assertTrue>? None
nose.selector: DEBUG: wantMethod <unbound method navoriTest.countTestCases>? None
nose.selector: DEBUG: wantMethod <unbound method navoriTest.debug>? None
nose.selector: DEBUG: wantMethod <unbound method navoriTest.defaultTestResult>? None
nose.selector: DEBUG: wantMethod <unbound method navoriTest.doCleanups>? None
nose.selector: DEBUG: wantMethod <unbound method navoriTest.fail>? None
nose.selector: DEBUG: wantMethod <unbound method navoriTest.deprecated_func>? None
nose.selector: DEBUG: wantMethod <unbound method navoriTest.deprecated_func>? None
nose.selector: DEBUG: wantMethod <unbound method navoriTest.deprecated_func>? None
nose.selector: DEBUG: wantMethod <unbound method navoriTest.deprecated_func>? None
nose.selector: DEBUG: wantMethod <unbound method navoriTest.deprecated_func>? None
nose.selector: DEBUG: wantMethod <unbound method navoriTest.deprecated_func>? None
nose.selector: DEBUG: wantMethod <unbound method navoriTest.deprecated_func>? None
nose.selector: DEBUG: wantMethod <unbound method navoriTest.id>? None
nose.selector: DEBUG: wantMethod <unbound method navoriTest.run>? None
nose.selector: DEBUG: wantMethod <unbound method navoriTest.setUp>? None
nose.selector: DEBUG: wantMethod <bound method type.setUpClass of <class 'navori.navoriTest'>>? None
nose.selector: DEBUG: wantMethod <unbound method navoriTest.shortDescription>? None
nose.selector: DEBUG: wantMethod <unbound method navoriTest.skipTest>? None
nose.selector: DEBUG: wantMethod <unbound method navoriTest.tearDown>? None
nose.selector: DEBUG: wantMethod <bound method type.tearDownClass of <class 'navori.navoriTest'>>? None
nose.selector: DEBUG: wantMethod <unbound method navoriTest.test_NavoriLogin>? True
nose.suite: DEBUG: Create suite for [<navori.navoriTest testMethod=test_NavoriLogin>]
nose.suite: DEBUG: tests [<navori.navoriTest testMethod=test_NavoriLogin>] context None
nose.suite: DEBUG: wrap [<navori.navoriTest testMethod=test_NavoriLogin>]
nose.suite: DEBUG: wrapping test_NavoriLogin (navori.navoriTest)
nose.suite: DEBUG: Context suite for [Test(<navori.navoriTest testMethod=test_NavoriLogin>)] (<class 'navori.navoriTest'>) (140581568939984)
nose.suite: DEBUG: suite <nose.suite.ContextSuite context=navoriTest> has context navoriTest
nose.suite: DEBUG: get ancestry <class 'navori.navoriTest'>
nose.suite: DEBUG:  <class 'navori.navoriTest'> ancestors ['navori']
nose: DEBUG: __import__ navori
nose: DEBUG: resolve: [], navori, <module 'navori' from '/home/damian/Malambo/api/test/navori.py'>, <module 'navori' from '/home/damian/Malambo/api/test/navori.py'>
nose.suite: DEBUG: suite <nose.suite.ContextSuite context=navoriTest> has ancestor navori
nose.suite: DEBUG: Create suite for <nose.suite.ContextList object at 0x7fdbb27a8950>
nose.suite: DEBUG: tests <nose.suite.ContextList object at 0x7fdbb27a8950> context <module 'navori' from '/home/damian/Malambo/api/test/navori.py'>
nose.suite: DEBUG: Context suite for <nose.suite.ContextList object at 0x7fdbb27a8950> (<module 'navori' from '/home/damian/Malambo/api/test/navori.py'>) (140581568938704)
nose.suite: DEBUG: suite <nose.suite.ContextSuite context=navori> has context navori
nose.suite: DEBUG: get ancestry <module 'navori' from '/home/damian/Malambo/api/test/navori.py'>
nose.suite: DEBUG: Create suite for [<nose.suite.ContextSuite context=navori>]
nose.suite: DEBUG: tests [<nose.suite.ContextSuite context=navori>] context None
nose.suite: DEBUG: wrap [<nose.suite.ContextSuite context=navori>]
nose.suite: DEBUG: wrapping <nose.suite.ContextSuite context=navori>
nose.suite: DEBUG: Context suite for [<nose.suite.ContextSuite context=navori>] (<module 'navori' from '/home/damian/Malambo/api/test/navori.py'>) (140581568939152)
nose.suite: DEBUG: suite <nose.suite.ContextSuite context=navori> has context navori
nose.suite: DEBUG: get ancestry <module 'navori' from '/home/damian/Malambo/api/test/navori.py'>
nose.core: DEBUG: runTests called
nose.suite: DEBUG: suite 140581568939152 (<nose.suite.ContextSuite context=navori>) run called, tests: <generator object _get_wrapped_tests at 0x7fdbb22cc500>
nose.suite: DEBUG: suite 140581568939152 setUp called, tests: <generator object _get_wrapped_tests at 0x7fdbb22cc6e0>
nose.suite: DEBUG: tests in 140581568939152?
nose.suite: DEBUG: ancestor <module 'navori' from '/home/damian/Malambo/api/test/navori.py'> may need setup
nose.suite: DEBUG: ancestor <module 'navori' from '/home/damian/Malambo/api/test/navori.py'> does need setup
nose.suite: DEBUG: <nose.suite.ContextSuite context=navori> setup context <module 'navori' from '/home/damian/Malambo/api/test/navori.py'>
nose.suite: DEBUG: completed suite setup
nose.suite: DEBUG: precache is [<nose.suite.ContextSuite context=navori>]
nose.suite: DEBUG: suite 140581568938704 (<nose.suite.ContextSuite context=navori>) run called, tests: <generator object _get_wrapped_tests at 0x7fdbb22cc7d0>
nose.suite: DEBUG: suite 140581568938704 setUp called, tests: <generator object _get_wrapped_tests at 0x7fdbb22cc7d0>
nose.suite: DEBUG: tests in 140581568938704?
nose.suite: DEBUG: ancestor <module 'navori' from '/home/damian/Malambo/api/test/navori.py'> may need setup
nose.suite: DEBUG: completed suite setup
nose.suite: DEBUG: precache is [<nose.suite.ContextSuite context=navoriTest>]
nose.suite: DEBUG: suite 140581568939984 (<nose.suite.ContextSuite context=navoriTest>) run called, tests: <generator object _get_wrapped_tests at 0x7fdbb22cc8c0>
nose.suite: DEBUG: suite 140581568939984 setUp called, tests: <generator object _get_wrapped_tests at 0x7fdbb22cc8c0>
nose.suite: DEBUG: tests in 140581568939984?
nose.suite: DEBUG: ancestor <module 'navori' from '/home/damian/Malambo/api/test/navori.py'> may need setup
nose.suite: DEBUG: ancestor <class 'navori.navoriTest'> may need setup
nose.suite: DEBUG: ancestor <class 'navori.navoriTest'> does need setup
nose.suite: DEBUG: <nose.suite.ContextSuite context=navoriTest> setup context <class 'navori.navoriTest'>
nose: DEBUG: call fixture <class 'navori.navoriTest'>.setUpClass
nose.suite: DEBUG: completed suite setup
nose.suite: DEBUG: precache is [Test(<navori.navoriTest testMethod=test_NavoriLogin>)]
nose.suite: DEBUG: context teardown
nose.suite: DEBUG: ancestor <class 'navori.navoriTest'> may need teardown
nose.suite: DEBUG: <nose.suite.ContextSuite context=navoriTest> setup ancestor <class 'navori.navoriTest'>
nose.suite: DEBUG: <nose.suite.ContextSuite context=navoriTest> teardown context <class 'navori.navoriTest'>
nose: DEBUG: call fixture <class 'navori.navoriTest'>.tearDownClass
nose.suite: DEBUG: ancestor <module 'navori' from '/home/damian/Malambo/api/test/navori.py'> may need teardown
nose.suite: DEBUG: <nose.suite.ContextSuite context=navori> setup ancestor <module 'navori' from '/home/damian/Malambo/api/test/navori.py'>
nose.suite: DEBUG: ancestor <class 'navori.navoriTest'> may need teardown
nose.suite: DEBUG: ancestor <class 'navori.navoriTest'> already torn down
nose.suite: DEBUG: context teardown
nose.suite: DEBUG: ancestor <module 'navori' from '/home/damian/Malambo/api/test/navori.py'> may need teardown
nose.suite: DEBUG: <nose.suite.ContextSuite context=navori> setup ancestor <module 'navori' from '/home/damian/Malambo/api/test/navori.py'>
nose.suite: DEBUG: ancestor <module 'navori' from '/home/damian/Malambo/api/test/navori.py'> may need teardown
nose.suite: DEBUG: <nose.suite.ContextSuite context=navori> setup ancestor <module 'navori' from '/home/damian/Malambo/api/test/navori.py'>
nose.suite: DEBUG: context teardown
nose.suite: DEBUG: ancestor <module 'navori' from '/home/damian/Malambo/api/test/navori.py'> may need teardown
nose.suite: DEBUG: <nose.suite.ContextSuite context=navori> setup ancestor <module 'navori' from '/home/damian/Malambo/api/test/navori.py'>
nose.suite: DEBUG: <nose.suite.ContextSuite context=navori> teardown context <module 'navori' from '/home/damian/Malambo/api/test/navori.py'>
nose.suite: DEBUG: ancestor <module 'navori' from '/home/damian/Malambo/api/test/navori.py'> may need teardown
nose.suite: DEBUG: ancestor <module 'navori' from '/home/damian/Malambo/api/test/navori.py'> already torn down
nose.config: INFO: Ignoring files matching ['^\\.', '^_', '^setup\\.py$']
nose.plugins.manager: DEBUG: Configuring plugins
nose.plugins.manager: DEBUG: Plugins enabled: [<nose.plugins.capture.Capture object at 0x7ff1eabf3410>, <nose.plugins.logcapture.LogCapture object at 0x7ff1eac07810>, <nose.plugins.deprecated.Deprecated object at 0x7ff1eac07d10>, <nose.plugins.skip.Skip object at 0x7ff1ea0b8d50>]
nose.core: DEBUG: configured Config(addPaths=True, args=(), configSection='nosetests', debug='nose,nose.importer', debugLog='nose_debug', env={}, exclude=None, files=[], firstPackageWins=False, getTestCaseNamesCompat=False, ignoreFiles=[<_sre.SRE_Pattern object at 0x7ff1ec863ab0>, <_sre.SRE_Pattern object at 0x7ff1ec80ae30>, <_sre.SRE_Pattern object at 0x7ff1ec902ab0>], ignoreFilesDefaultStrings=['^\\.', '^_', '^setup\\.py$'], include=None, includeExe=False, logStream=<open file '<stderr>', mode 'w' at 0x7ff1ec94a1e0>, loggingConfig=None, options=<Values at 0x7ff1ea0d95f0: {'xunit_file': 'nosetests.xml', 'enable_plugin_allmodules': None, 'multiprocess_restartworker': False, 'loggingConfig': None, 'doctestExtension': None, 'doctest_tests': None, 'enable_plugin_xunit': None, 'logcapture_clear': False, 'stopOnError': False, 'enable_plugin_id': None, 'testNames': None, 'doctestOptions': None, 'exclude': [], 'byteCompile': True, 'ignoreFiles': [], 'logcapture': True, 'addPaths': True, 'capture': True, 'xunit_testsuite_name': 'nosetests', 'logcapture_level': 'NOTSET', 'cover_xml': None, 'py3where': None, 'noSkip': False, 'enable_plugin_isolation': None, 'logcapture_filters': None, 'collect_only': None, 'failed': False, 'version': False, 'eval_attr': None, 'include': [], 'enable_plugin_profile': None, 'debugErrors': False, 'files': None, 'cover_tests': None, 'multiprocess_timeout': 10, 'testMatch': '(?:^|[\\b_\\./-])[Tt]est', 'traverseNamespace': False, 'firstPackageWins': False, 'cover_html_dir': 'cover', 'cover_branches': None, 'debugBoth': False, 'noDeprecated': False, 'cover_xml_file': 'coverage.xml', 'showPlugins': False, 'cover_erase': None, 'multiprocess_workers': 0, 'testIdFile': '.noseids', 'enable_plugin_coverage': None, 'attr': None, 'profile_sort': 'cumulative', 'doctestFixtures': None, 'logcapture_datefmt': None, 'cover_packages': None, 'verbosity': 1, 'enable_plugin_doctest': None, 'profile_stats_file': None, 'cover_inclusive': None, 'includeExe': False, 'logcapture_format': '%(name)s: %(levelname)s: %(message)s', 'debugFailures': False, 'detailedErrors': None, 'debugLog': 'nose_debug', 'doctest_result_var': None, 'cover_html': None, 'debug': 'nose,nose.importer', 'cover_min_percentage': None, 'where': None, 'profile_restrict': None}>, parser=<optparse.OptionParser instance at 0x7ff1eabf0f38>, parserClass=<class optparse.OptionParser at 0x7ff1eb28cf58>, plugins=<nose.plugins.manager.DefaultPluginManager object at 0x7ff1eabebed0>, py3where=(), runOnInit=True, srcDirs=('lib', 'src'), stopOnError=False, stream=<open file '<stderr>', mode 'w' at 0x7ff1ec94a1e0>, testMatch=<_sre.SRE_Pattern object at 0x7ff1eabf6030>, testMatchPat='(?:^|[\\b_\\./-])[Tt]est', testNames=['navori.py'], traverseNamespace=False, verbosity=1, where=(), worker=False, workingDir='/home/damian/Malambo/api/test')
nose.importer: DEBUG: Add path /home/damian/Malambo/api/test
nose.importer: DEBUG: insert /home/damian/Malambo/api/test into sys.path
nose.core: DEBUG: test loader is <nose.loader.TestLoader object at 0x7ff1ea0dd0d0>
nose.core: DEBUG: defaultTest .
nose.core: DEBUG: Test names are ['navori.py']
nose.core: DEBUG: createTests called with None
nose.loader: DEBUG: load from navori.py (None)
nose.selector: DEBUG: Test name navori.py resolved to file navori.py, module None, call None
nose.selector: DEBUG: Final resolution of test name navori.py: file /home/damian/Malambo/api/test/navori.py module navori call None
nose.importer: DEBUG: Import navori from /home/damian/Malambo/api/test
nose.importer: DEBUG: Add path /home/damian/Malambo/api/test
nose.importer: DEBUG: find module part navori (navori) in ['/home/damian/Malambo/api/test']
nose.loader: DEBUG: Load from module <module 'navori' from '/home/damian/Malambo/api/test/navori.py'>
nose.selector: DEBUG: wantClass <class 'navori.navoriTest'>? True
nose.selector: DEBUG: wantMethod <unbound method navoriTest.addCleanup>? None
nose.selector: DEBUG: wantMethod <unbound method navoriTest.addTypeEqualityFunc>? None
nose.selector: DEBUG: wantMethod <unbound method navoriTest.assertAlmostEqual>? None
nose.selector: DEBUG: wantMethod <unbound method navoriTest.assertAlmostEqual>? None
nose.selector: DEBUG: wantMethod <unbound method navoriTest.assertDictContainsSubset>? None
nose.selector: DEBUG: wantMethod <unbound method navoriTest.assertDictEqual>? None
nose.selector: DEBUG: wantMethod <unbound method navoriTest.assertEqual>? None
nose.selector: DEBUG: wantMethod <unbound method navoriTest.assertEqual>? None
nose.selector: DEBUG: wantMethod <unbound method navoriTest.assertFalse>? None
nose.selector: DEBUG: wantMethod <unbound method navoriTest.assertGreater>? None
nose.selector: DEBUG: wantMethod <unbound method navoriTest.assertGreaterEqual>? None
nose.selector: DEBUG: wantMethod <unbound method navoriTest.assertIn>? None
nose.selector: DEBUG: wantMethod <unbound method navoriTest.assertIs>? None
nose.selector: DEBUG: wantMethod <unbound method navoriTest.assertIsInstance>? None
nose.selector: DEBUG: wantMethod <unbound method navoriTest.assertIsNone>? None
nose.selector: DEBUG: wantMethod <unbound method navoriTest.assertIsNot>? None
nose.selector: DEBUG: wantMethod <unbound method navoriTest.assertIsNotNone>? None
nose.selector: DEBUG: wantMethod <unbound method navoriTest.assertItemsEqual>? None
nose.selector: DEBUG: wantMethod <unbound method navoriTest.assertLess>? None
nose.selector: DEBUG: wantMethod <unbound method navoriTest.assertLessEqual>? None
nose.selector: DEBUG: wantMethod <unbound method navoriTest.assertListEqual>? None
nose.selector: DEBUG: wantMethod <unbound method navoriTest.assertMultiLineEqual>? None
nose.selector: DEBUG: wantMethod <unbound method navoriTest.assertNotAlmostEqual>? None
nose.selector: DEBUG: wantMethod <unbound method navoriTest.assertNotAlmostEqual>? None
nose.selector: DEBUG: wantMethod <unbound method navoriTest.assertNotEqual>? None
nose.selector: DEBUG: wantMethod <unbound method navoriTest.assertNotEqual>? None
nose.selector: DEBUG: wantMethod <unbound method navoriTest.assertNotIn>? None
nose.selector: DEBUG: wantMethod <unbound method navoriTest.assertNotIsInstance>? None
nose.selector: DEBUG: wantMethod <unbound method navoriTest.assertNotRegexpMatches>? None
nose.selector: DEBUG: wantMethod <unbound method navoriTest.assertRaises>? None
nose.selector: DEBUG: wantMethod <unbound method navoriTest.assertRaisesRegexp>? None
nose.selector: DEBUG: wantMethod <unbound method navoriTest.assertRegexpMatches>? None
nose.selector: DEBUG: wantMethod <unbound method navoriTest.assertSequenceEqual>? None
nose.selector: DEBUG: wantMethod <unbound method navoriTest.assertSetEqual>? None
nose.selector: DEBUG: wantMethod <unbound method navoriTest.assertTrue>? None
nose.selector: DEBUG: wantMethod <unbound method navoriTest.assertTupleEqual>? None
nose.selector: DEBUG: wantMethod <unbound method navoriTest.assertTrue>? None
nose.selector: DEBUG: wantMethod <unbound method navoriTest.countTestCases>? None
nose.selector: DEBUG: wantMethod <unbound method navoriTest.debug>? None
nose.selector: DEBUG: wantMethod <unbound method navoriTest.defaultTestResult>? None
nose.selector: DEBUG: wantMethod <unbound method navoriTest.doCleanups>? None
nose.selector: DEBUG: wantMethod <unbound method navoriTest.fail>? None
nose.selector: DEBUG: wantMethod <unbound method navoriTest.deprecated_func>? None
nose.selector: DEBUG: wantMethod <unbound method navoriTest.deprecated_func>? None
nose.selector: DEBUG: wantMethod <unbound method navoriTest.deprecated_func>? None
nose.selector: DEBUG: wantMethod <unbound method navoriTest.deprecated_func>? None
nose.selector: DEBUG: wantMethod <unbound method navoriTest.deprecated_func>? None
nose.selector: DEBUG: wantMethod <unbound method navoriTest.deprecated_func>? None
nose.selector: DEBUG: wantMethod <unbound method navoriTest.deprecated_func>? None
nose.selector: DEBUG: wantMethod <unbound method navoriTest.id>? None
nose.selector: DEBUG: wantMethod <unbound method navoriTest.run>? None
nose.selector: DEBUG: wantMethod <unbound method navoriTest.setUp>? None
nose.selector: DEBUG: wantMethod <bound method type.setUpClass of <class 'navori.navoriTest'>>? None
nose.selector: DEBUG: wantMethod <unbound method navoriTest.shortDescription>? None
nose.selector: DEBUG: wantMethod <unbound method navoriTest.skipTest>? None
nose.selector: DEBUG: wantMethod <unbound method navoriTest.tearDown>? None
nose.selector: DEBUG: wantMethod <bound method type.tearDownClass of <class 'navori.navoriTest'>>? None
nose.selector: DEBUG: wantMethod <unbound method navoriTest.test_NavoriLogin>? True
nose.suite: DEBUG: Create suite for [<navori.navoriTest testMethod=test_NavoriLogin>]
nose.suite: DEBUG: tests [<navori.navoriTest testMethod=test_NavoriLogin>] context None
nose.suite: DEBUG: wrap [<navori.navoriTest testMethod=test_NavoriLogin>]
nose.suite: DEBUG: wrapping test_NavoriLogin (navori.navoriTest)
nose.suite: DEBUG: Context suite for [Test(<navori.navoriTest testMethod=test_NavoriLogin>)] (<class 'navori.navoriTest'>) (140676990621648)
nose.suite: DEBUG: suite <nose.suite.ContextSuite context=navoriTest> has context navoriTest
nose.suite: DEBUG: get ancestry <class 'navori.navoriTest'>
nose.suite: DEBUG:  <class 'navori.navoriTest'> ancestors ['navori']
nose: DEBUG: __import__ navori
nose: DEBUG: resolve: [], navori, <module 'navori' from '/home/damian/Malambo/api/test/navori.py'>, <module 'navori' from '/home/damian/Malambo/api/test/navori.py'>
nose.suite: DEBUG: suite <nose.suite.ContextSuite context=navoriTest> has ancestor navori
nose.suite: DEBUG: Create suite for <nose.suite.ContextList object at 0x7ff1ea0dd950>
nose.suite: DEBUG: tests <nose.suite.ContextList object at 0x7ff1ea0dd950> context <module 'navori' from '/home/damian/Malambo/api/test/navori.py'>
nose.suite: DEBUG: Context suite for <nose.suite.ContextList object at 0x7ff1ea0dd950> (<module 'navori' from '/home/damian/Malambo/api/test/navori.py'>) (140676990620368)
nose.suite: DEBUG: suite <nose.suite.ContextSuite context=navori> has context navori
nose.suite: DEBUG: get ancestry <module 'navori' from '/home/damian/Malambo/api/test/navori.py'>
nose.suite: DEBUG: Create suite for [<nose.suite.ContextSuite context=navori>]
nose.suite: DEBUG: tests [<nose.suite.ContextSuite context=navori>] context None
nose.suite: DEBUG: wrap [<nose.suite.ContextSuite context=navori>]
nose.suite: DEBUG: wrapping <nose.suite.ContextSuite context=navori>
nose.suite: DEBUG: Context suite for [<nose.suite.ContextSuite context=navori>] (<module 'navori' from '/home/damian/Malambo/api/test/navori.py'>) (140676990620816)
nose.suite: DEBUG: suite <nose.suite.ContextSuite context=navori> has context navori
nose.suite: DEBUG: get ancestry <module 'navori' from '/home/damian/Malambo/api/test/navori.py'>
nose.core: DEBUG: runTests called
nose.suite: DEBUG: suite 140676990620816 (<nose.suite.ContextSuite context=navori>) run called, tests: <generator object _get_wrapped_tests at 0x7ff1e9c01500>
nose.suite: DEBUG: suite 140676990620816 setUp called, tests: <generator object _get_wrapped_tests at 0x7ff1e9c016e0>
nose.suite: DEBUG: tests in 140676990620816?
nose.suite: DEBUG: ancestor <module 'navori' from '/home/damian/Malambo/api/test/navori.py'> may need setup
nose.suite: DEBUG: ancestor <module 'navori' from '/home/damian/Malambo/api/test/navori.py'> does need setup
nose.suite: DEBUG: <nose.suite.ContextSuite context=navori> setup context <module 'navori' from '/home/damian/Malambo/api/test/navori.py'>
nose.suite: DEBUG: completed suite setup
nose.suite: DEBUG: precache is [<nose.suite.ContextSuite context=navori>]
nose.suite: DEBUG: suite 140676990620368 (<nose.suite.ContextSuite context=navori>) run called, tests: <generator object _get_wrapped_tests at 0x7ff1e9c017d0>
nose.suite: DEBUG: suite 140676990620368 setUp called, tests: <generator object _get_wrapped_tests at 0x7ff1e9c017d0>
nose.suite: DEBUG: tests in 140676990620368?
nose.suite: DEBUG: ancestor <module 'navori' from '/home/damian/Malambo/api/test/navori.py'> may need setup
nose.suite: DEBUG: completed suite setup
nose.suite: DEBUG: precache is [<nose.suite.ContextSuite context=navoriTest>]
nose.suite: DEBUG: suite 140676990621648 (<nose.suite.ContextSuite context=navoriTest>) run called, tests: <generator object _get_wrapped_tests at 0x7ff1e9c018c0>
nose.suite: DEBUG: suite 140676990621648 setUp called, tests: <generator object _get_wrapped_tests at 0x7ff1e9c018c0>
nose.suite: DEBUG: tests in 140676990621648?
nose.suite: DEBUG: ancestor <module 'navori' from '/home/damian/Malambo/api/test/navori.py'> may need setup
nose.suite: DEBUG: ancestor <class 'navori.navoriTest'> may need setup
nose.suite: DEBUG: ancestor <class 'navori.navoriTest'> does need setup
nose.suite: DEBUG: <nose.suite.ContextSuite context=navoriTest> setup context <class 'navori.navoriTest'>
nose: DEBUG: call fixture <class 'navori.navoriTest'>.setUpClass
nose.suite: DEBUG: completed suite setup
nose.suite: DEBUG: precache is [Test(<navori.navoriTest testMethod=test_NavoriLogin>)]
nose.suite: DEBUG: context teardown
nose.suite: DEBUG: ancestor <class 'navori.navoriTest'> may need teardown
nose.suite: DEBUG: <nose.suite.ContextSuite context=navoriTest> setup ancestor <class 'navori.navoriTest'>
nose.suite: DEBUG: <nose.suite.ContextSuite context=navoriTest> teardown context <class 'navori.navoriTest'>
nose: DEBUG: call fixture <class 'navori.navoriTest'>.tearDownClass
nose.suite: DEBUG: ancestor <module 'navori' from '/home/damian/Malambo/api/test/navori.py'> may need teardown
nose.suite: DEBUG: <nose.suite.ContextSuite context=navori> setup ancestor <module 'navori' from '/home/damian/Malambo/api/test/navori.py'>
nose.suite: DEBUG: ancestor <class 'navori.navoriTest'> may need teardown
nose.suite: DEBUG: ancestor <class 'navori.navoriTest'> already torn down
nose.suite: DEBUG: context teardown
nose.suite: DEBUG: ancestor <module 'navori' from '/home/damian/Malambo/api/test/navori.py'> may need teardown
nose.suite: DEBUG: <nose.suite.ContextSuite context=navori> setup ancestor <module 'navori' from '/home/damian/Malambo/api/test/navori.py'>
nose.suite: DEBUG: ancestor <module 'navori' from '/home/damian/Malambo/api/test/navori.py'> may need teardown
nose.suite: DEBUG: <nose.suite.ContextSuite context=navori> setup ancestor <module 'navori' from '/home/damian/Malambo/api/test/navori.py'>
nose.suite: DEBUG: context teardown
nose.suite: DEBUG: ancestor <module 'navori' from '/home/damian/Malambo/api/test/navori.py'> may need teardown
nose.suite: DEBUG: <nose.suite.ContextSuite context=navori> setup ancestor <module 'navori' from '/home/damian/Malambo/api/test/navori.py'>
nose.suite: DEBUG: <nose.suite.ContextSuite context=navori> teardown context <module 'navori' from '/home/damian/Malambo/api/test/navori.py'>
nose.suite: DEBUG: ancestor <module 'navori' from '/home/damian/Malambo/api/test/navori.py'> may need teardown
nose.suite: DEBUG: ancestor <module 'navori' from '/home/damian/Malambo/api/test/navori.py'> already torn down
nose.config: INFO: Ignoring files matching ['^\\.', '^_', '^setup\\.py$']
nose.plugins.manager: DEBUG: Configuring plugins
nose.plugins.manager: DEBUG: Plugins enabled: [<nose.plugins.capture.Capture object at 0x7fab23ee4410>, <nose.plugins.logcapture.LogCapture object at 0x7fab23ef8810>, <nose.plugins.deprecated.Deprecated object at 0x7fab23ef8d10>, <nose.plugins.skip.Skip object at 0x7fab233a9d50>]
nose.core: DEBUG: configured Config(addPaths=True, args=(), configSection='nosetests', debug='nose,nose.importer', debugLog='nose_debug', env={}, exclude=None, files=[], firstPackageWins=False, getTestCaseNamesCompat=False, ignoreFiles=[<_sre.SRE_Pattern object at 0x7fab25b54ab0>, <_sre.SRE_Pattern object at 0x7fab25afbe30>, <_sre.SRE_Pattern object at 0x7fab25bf3ab0>], ignoreFilesDefaultStrings=['^\\.', '^_', '^setup\\.py$'], include=None, includeExe=False, logStream=<open file '<stderr>', mode 'w' at 0x7fab25c3b1e0>, loggingConfig=None, options=<Values at 0x7fab233ca5f0: {'xunit_file': 'nosetests.xml', 'enable_plugin_allmodules': None, 'multiprocess_restartworker': False, 'loggingConfig': None, 'doctestExtension': None, 'doctest_tests': None, 'enable_plugin_xunit': None, 'logcapture_clear': False, 'stopOnError': False, 'enable_plugin_id': None, 'testNames': None, 'doctestOptions': None, 'exclude': [], 'byteCompile': True, 'ignoreFiles': [], 'logcapture': True, 'addPaths': True, 'capture': True, 'xunit_testsuite_name': 'nosetests', 'logcapture_level': 'NOTSET', 'cover_xml': None, 'py3where': None, 'noSkip': False, 'enable_plugin_isolation': None, 'logcapture_filters': None, 'collect_only': None, 'failed': False, 'version': False, 'eval_attr': None, 'include': [], 'enable_plugin_profile': None, 'debugErrors': False, 'files': None, 'cover_tests': None, 'multiprocess_timeout': 10, 'testMatch': '(?:^|[\\b_\\./-])[Tt]est', 'traverseNamespace': False, 'firstPackageWins': False, 'cover_html_dir': 'cover', 'cover_branches': None, 'debugBoth': False, 'noDeprecated': False, 'cover_xml_file': 'coverage.xml', 'showPlugins': False, 'cover_erase': None, 'multiprocess_workers': 0, 'testIdFile': '.noseids', 'enable_plugin_coverage': None, 'attr': None, 'profile_sort': 'cumulative', 'doctestFixtures': None, 'logcapture_datefmt': None, 'cover_packages': None, 'verbosity': 1, 'enable_plugin_doctest': None, 'profile_stats_file': None, 'cover_inclusive': None, 'includeExe': False, 'logcapture_format': '%(name)s: %(levelname)s: %(message)s', 'debugFailures': False, 'detailedErrors': None, 'debugLog': 'nose_debug', 'doctest_result_var': None, 'cover_html': None, 'debug': 'nose,nose.importer', 'cover_min_percentage': None, 'where': None, 'profile_restrict': None}>, parser=<optparse.OptionParser instance at 0x7fab23ee1f38>, parserClass=<class optparse.OptionParser at 0x7fab2457df58>, plugins=<nose.plugins.manager.DefaultPluginManager object at 0x7fab23edced0>, py3where=(), runOnInit=True, srcDirs=('lib', 'src'), stopOnError=False, stream=<open file '<stderr>', mode 'w' at 0x7fab25c3b1e0>, testMatch=<_sre.SRE_Pattern object at 0x7fab23ee7030>, testMatchPat='(?:^|[\\b_\\./-])[Tt]est', testNames=['navori.py'], traverseNamespace=False, verbosity=1, where=(), worker=False, workingDir='/home/damian/Malambo/api/test')
nose.importer: DEBUG: Add path /home/damian/Malambo/api/test
nose.importer: DEBUG: insert /home/damian/Malambo/api/test into sys.path
nose.core: DEBUG: test loader is <nose.loader.TestLoader object at 0x7fab233ce0d0>
nose.core: DEBUG: defaultTest .
nose.core: DEBUG: Test names are ['navori.py']
nose.core: DEBUG: createTests called with None
nose.loader: DEBUG: load from navori.py (None)
nose.selector: DEBUG: Test name navori.py resolved to file navori.py, module None, call None
nose.selector: DEBUG: Final resolution of test name navori.py: file /home/damian/Malambo/api/test/navori.py module navori call None
nose.importer: DEBUG: Import navori from /home/damian/Malambo/api/test
nose.importer: DEBUG: Add path /home/damian/Malambo/api/test
nose.importer: DEBUG: find module part navori (navori) in ['/home/damian/Malambo/api/test']
nose.failure: DEBUG: A failure! <type 'exceptions.ImportError'> cannot import name navori ['  File "/usr/local/lib/python2.7/dist-packages/nose/loader.py", line 418, in loadTestsFromName\n    addr.filename, addr.module)\n', '  File "/usr/local/lib/python2.7/dist-packages/nose/importer.py", line 47, in importFromPath\n    return self.importFromDir(dir_path, fqname)\n', '  File "/usr/local/lib/python2.7/dist-packages/nose/importer.py", line 94, in importFromDir\n    mod = load_module(part_fqname, fh, filename, desc)\n', '  File "/home/damian/Malambo/api/test/navori.py", line 2, in <module>\n    from navori import navori\n']
nose.suite: DEBUG: Create suite for [<nose.failure.Failure testMethod=runTest>]
nose.suite: DEBUG: tests [<nose.failure.Failure testMethod=runTest>] context None
nose.suite: DEBUG: wrap [<nose.failure.Failure testMethod=runTest>]
nose.suite: DEBUG: wrapping Failure: ImportError (cannot import name navori)
nose.suite: DEBUG: Context suite for [Test(<nose.failure.Failure testMethod=runTest>)] (<class 'nose.failure.Failure'>) (140373002279952)
nose.suite: DEBUG: suite <nose.suite.ContextSuite context=Failure> has context Failure
nose.suite: DEBUG: get ancestry <class 'nose.failure.Failure'>
nose.suite: DEBUG:  <class 'nose.failure.Failure'> ancestors ['nose', 'failure']
nose: DEBUG: __import__ nose.failure
nose: DEBUG: resolve: ['failure'], nose.failure, <module 'nose' from '/usr/local/lib/python2.7/dist-packages/nose/__init__.pyc'>, <module 'nose' from '/usr/local/lib/python2.7/dist-packages/nose/__init__.pyc'>
nose.suite: DEBUG: suite <nose.suite.ContextSuite context=Failure> has ancestor nose.failure
nose.suite: DEBUG:  <class 'nose.failure.Failure'> ancestors ['nose']
nose: DEBUG: __import__ nose
nose: DEBUG: resolve: [], nose, <module 'nose' from '/usr/local/lib/python2.7/dist-packages/nose/__init__.pyc'>, <module 'nose' from '/usr/local/lib/python2.7/dist-packages/nose/__init__.pyc'>
nose.suite: DEBUG: suite <nose.suite.ContextSuite context=Failure> has ancestor nose
nose.suite: DEBUG: Create suite for [<nose.suite.ContextSuite context=Failure>]
nose.suite: DEBUG: tests [<nose.suite.ContextSuite context=Failure>] context None
nose.suite: DEBUG: wrap [<nose.suite.ContextSuite context=Failure>]
nose.suite: DEBUG: wrapping <nose.suite.ContextSuite context=Failure>
nose.suite: DEBUG: Context suite for [<nose.suite.ContextSuite context=Failure>] (<class 'nose.failure.Failure'>) (140373007328400)
nose.suite: DEBUG: suite <nose.suite.ContextSuite context=Failure> has context Failure
nose.suite: DEBUG: get ancestry <class 'nose.failure.Failure'>
nose.suite: DEBUG:  <class 'nose.failure.Failure'> ancestors ['nose', 'failure']
nose: DEBUG: __import__ nose.failure
nose: DEBUG: resolve: ['failure'], nose.failure, <module 'nose' from '/usr/local/lib/python2.7/dist-packages/nose/__init__.pyc'>, <module 'nose' from '/usr/local/lib/python2.7/dist-packages/nose/__init__.pyc'>
nose.suite: DEBUG: suite <nose.suite.ContextSuite context=Failure> has ancestor nose.failure
nose.suite: DEBUG:  <class 'nose.failure.Failure'> ancestors ['nose']
nose: DEBUG: __import__ nose
nose: DEBUG: resolve: [], nose, <module 'nose' from '/usr/local/lib/python2.7/dist-packages/nose/__init__.pyc'>, <module 'nose' from '/usr/local/lib/python2.7/dist-packages/nose/__init__.pyc'>
nose.suite: DEBUG: suite <nose.suite.ContextSuite context=Failure> has ancestor nose
nose.core: DEBUG: runTests called
nose.suite: DEBUG: suite 140373007328400 (<nose.suite.ContextSuite context=Failure>) run called, tests: <generator object _get_wrapped_tests at 0x7fab22f02640>
nose.suite: DEBUG: suite 140373007328400 setUp called, tests: <generator object _get_wrapped_tests at 0x7fab22f02820>
nose.suite: DEBUG: tests in 140373007328400?
nose.suite: DEBUG: ancestor <module 'nose' from '/usr/local/lib/python2.7/dist-packages/nose/__init__.pyc'> may need setup
nose.suite: DEBUG: ancestor <module 'nose' from '/usr/local/lib/python2.7/dist-packages/nose/__init__.pyc'> does need setup
nose.suite: DEBUG: <nose.suite.ContextSuite context=Failure> setup context <module 'nose' from '/usr/local/lib/python2.7/dist-packages/nose/__init__.pyc'>
nose.suite: DEBUG: ancestor <module 'nose.failure' from '/usr/local/lib/python2.7/dist-packages/nose/failure.pyc'> may need setup
nose.suite: DEBUG: ancestor <module 'nose.failure' from '/usr/local/lib/python2.7/dist-packages/nose/failure.pyc'> does need setup
nose.suite: DEBUG: <nose.suite.ContextSuite context=Failure> setup context <module 'nose.failure' from '/usr/local/lib/python2.7/dist-packages/nose/failure.pyc'>
nose.suite: DEBUG: ancestor <class 'nose.failure.Failure'> may need setup
nose.suite: DEBUG: ancestor <class 'nose.failure.Failure'> does need setup
nose.suite: DEBUG: <nose.suite.ContextSuite context=Failure> setup context <class 'nose.failure.Failure'>
nose: DEBUG: call fixture <class 'nose.failure.Failure'>.setUpClass
nose.suite: DEBUG: completed suite setup
nose.suite: DEBUG: precache is [<nose.suite.ContextSuite context=Failure>]
nose.suite: DEBUG: suite 140373002279952 (<nose.suite.ContextSuite context=Failure>) run called, tests: <generator object _get_wrapped_tests at 0x7fab22f02910>
nose.suite: DEBUG: suite 140373002279952 setUp called, tests: <generator object _get_wrapped_tests at 0x7fab22f02910>
nose.suite: DEBUG: tests in 140373002279952?
nose.suite: DEBUG: ancestor <module 'nose' from '/usr/local/lib/python2.7/dist-packages/nose/__init__.pyc'> may need setup
nose.suite: DEBUG: ancestor <module 'nose.failure' from '/usr/local/lib/python2.7/dist-packages/nose/failure.pyc'> may need setup
nose.suite: DEBUG: ancestor <class 'nose.failure.Failure'> may need setup
nose.suite: DEBUG: completed suite setup
nose.suite: DEBUG: precache is [Test(<nose.failure.Failure testMethod=runTest>)]
nose.suite: DEBUG: context teardown
nose.suite: DEBUG: ancestor <class 'nose.failure.Failure'> may need teardown
nose.suite: DEBUG: <nose.suite.ContextSuite context=Failure> setup ancestor <class 'nose.failure.Failure'>
nose.suite: DEBUG: ancestor <module 'nose.failure' from '/usr/local/lib/python2.7/dist-packages/nose/failure.pyc'> may need teardown
nose.suite: DEBUG: <nose.suite.ContextSuite context=Failure> setup ancestor <module 'nose.failure' from '/usr/local/lib/python2.7/dist-packages/nose/failure.pyc'>
nose.suite: DEBUG: ancestor <module 'nose' from '/usr/local/lib/python2.7/dist-packages/nose/__init__.pyc'> may need teardown
nose.suite: DEBUG: <nose.suite.ContextSuite context=Failure> setup ancestor <module 'nose' from '/usr/local/lib/python2.7/dist-packages/nose/__init__.pyc'>
nose.suite: DEBUG: ancestor <class 'nose.failure.Failure'> may need teardown
nose.suite: DEBUG: <nose.suite.ContextSuite context=Failure> setup ancestor <class 'nose.failure.Failure'>
nose.suite: DEBUG: context teardown
nose.suite: DEBUG: ancestor <class 'nose.failure.Failure'> may need teardown
nose.suite: DEBUG: <nose.suite.ContextSuite context=Failure> setup ancestor <class 'nose.failure.Failure'>
nose.suite: DEBUG: <nose.suite.ContextSuite context=Failure> teardown context <class 'nose.failure.Failure'>
nose: DEBUG: call fixture <class 'nose.failure.Failure'>.tearDownClass
nose.suite: DEBUG: ancestor <module 'nose.failure' from '/usr/local/lib/python2.7/dist-packages/nose/failure.pyc'> may need teardown
nose.suite: DEBUG: <nose.suite.ContextSuite context=Failure> setup ancestor <module 'nose.failure' from '/usr/local/lib/python2.7/dist-packages/nose/failure.pyc'>
nose.suite: DEBUG: <nose.suite.ContextSuite context=Failure> teardown context <module 'nose.failure' from '/usr/local/lib/python2.7/dist-packages/nose/failure.pyc'>
nose.suite: DEBUG: ancestor <module 'nose' from '/usr/local/lib/python2.7/dist-packages/nose/__init__.pyc'> may need teardown
nose.suite: DEBUG: <nose.suite.ContextSuite context=Failure> setup ancestor <module 'nose' from '/usr/local/lib/python2.7/dist-packages/nose/__init__.pyc'>
nose.suite: DEBUG: <nose.suite.ContextSuite context=Failure> teardown context <module 'nose' from '/usr/local/lib/python2.7/dist-packages/nose/__init__.pyc'>
nose.suite: DEBUG: ancestor <class 'nose.failure.Failure'> may need teardown
nose.suite: DEBUG: ancestor <class 'nose.failure.Failure'> already torn down
nose.config: INFO: Ignoring files matching ['^\\.', '^_', '^setup\\.py$']
nose.plugins.manager: DEBUG: Configuring plugins
nose.plugins.manager: DEBUG: Plugins enabled: [<nose.plugins.capture.Capture object at 0x7f5a57031410>, <nose.plugins.logcapture.LogCapture object at 0x7f5a57045810>, <nose.plugins.deprecated.Deprecated object at 0x7f5a57045d10>, <nose.plugins.skip.Skip object at 0x7f5a564f6d50>]
nose.core: DEBUG: configured Config(addPaths=True, args=(), configSection='nosetests', debug='nose,nose.importer', debugLog='nose_debug', env={}, exclude=None, files=[], firstPackageWins=False, getTestCaseNamesCompat=False, ignoreFiles=[<_sre.SRE_Pattern object at 0x7f5a58ca1ab0>, <_sre.SRE_Pattern object at 0x7f5a58c48e30>, <_sre.SRE_Pattern object at 0x7f5a58d40ab0>], ignoreFilesDefaultStrings=['^\\.', '^_', '^setup\\.py$'], include=None, includeExe=False, logStream=<open file '<stderr>', mode 'w' at 0x7f5a58d881e0>, loggingConfig=None, options=<Values at 0x7f5a565175f0: {'xunit_file': 'nosetests.xml', 'enable_plugin_allmodules': None, 'multiprocess_restartworker': False, 'loggingConfig': None, 'doctestExtension': None, 'doctest_tests': None, 'enable_plugin_xunit': None, 'logcapture_clear': False, 'stopOnError': False, 'enable_plugin_id': None, 'testNames': None, 'doctestOptions': None, 'exclude': [], 'byteCompile': True, 'ignoreFiles': [], 'logcapture': True, 'addPaths': True, 'capture': True, 'xunit_testsuite_name': 'nosetests', 'logcapture_level': 'NOTSET', 'cover_xml': None, 'py3where': None, 'noSkip': False, 'enable_plugin_isolation': None, 'logcapture_filters': None, 'collect_only': None, 'failed': False, 'version': False, 'eval_attr': None, 'include': [], 'enable_plugin_profile': None, 'debugErrors': False, 'files': None, 'cover_tests': None, 'multiprocess_timeout': 10, 'testMatch': '(?:^|[\\b_\\./-])[Tt]est', 'traverseNamespace': False, 'firstPackageWins': False, 'cover_html_dir': 'cover', 'cover_branches': None, 'debugBoth': False, 'noDeprecated': False, 'cover_xml_file': 'coverage.xml', 'showPlugins': False, 'cover_erase': None, 'multiprocess_workers': 0, 'testIdFile': '.noseids', 'enable_plugin_coverage': None, 'attr': None, 'profile_sort': 'cumulative', 'doctestFixtures': None, 'logcapture_datefmt': None, 'cover_packages': None, 'verbosity': 1, 'enable_plugin_doctest': None, 'profile_stats_file': None, 'cover_inclusive': None, 'includeExe': False, 'logcapture_format': '%(name)s: %(levelname)s: %(message)s', 'debugFailures': False, 'detailedErrors': None, 'debugLog': 'nose_debug', 'doctest_result_var': None, 'cover_html': None, 'debug': 'nose,nose.importer', 'cover_min_percentage': None, 'where': None, 'profile_restrict': None}>, parser=<optparse.OptionParser instance at 0x7f5a5702ef38>, parserClass=<class optparse.OptionParser at 0x7f5a576caf58>, plugins=<nose.plugins.manager.DefaultPluginManager object at 0x7f5a57029ed0>, py3where=(), runOnInit=True, srcDirs=('lib', 'src'), stopOnError=False, stream=<open file '<stderr>', mode 'w' at 0x7f5a58d881e0>, testMatch=<_sre.SRE_Pattern object at 0x7f5a57034030>, testMatchPat='(?:^|[\\b_\\./-])[Tt]est', testNames=['navori.py'], traverseNamespace=False, verbosity=1, where=(), worker=False, workingDir='/home/damian/Malambo/api/test')
nose.importer: DEBUG: Add path /home/damian/Malambo/api/test
nose.importer: DEBUG: insert /home/damian/Malambo/api/test into sys.path
nose.core: DEBUG: test loader is <nose.loader.TestLoader object at 0x7f5a5651b0d0>
nose.core: DEBUG: defaultTest .
nose.core: DEBUG: Test names are ['navori.py']
nose.core: DEBUG: createTests called with None
nose.loader: DEBUG: load from navori.py (None)
nose.selector: DEBUG: Test name navori.py resolved to file navori.py, module None, call None
nose.selector: DEBUG: Final resolution of test name navori.py: file /home/damian/Malambo/api/test/navori.py module navori call None
nose.importer: DEBUG: Import navori from /home/damian/Malambo/api/test
nose.importer: DEBUG: Add path /home/damian/Malambo/api/test
nose.importer: DEBUG: find module part navori (navori) in ['/home/damian/Malambo/api/test']
nose.failure: DEBUG: A failure! <type 'exceptions.ImportError'> No module named navori ['  File "/usr/local/lib/python2.7/dist-packages/nose/loader.py", line 418, in loadTestsFromName\n    addr.filename, addr.module)\n', '  File "/usr/local/lib/python2.7/dist-packages/nose/importer.py", line 47, in importFromPath\n    return self.importFromDir(dir_path, fqname)\n', '  File "/usr/local/lib/python2.7/dist-packages/nose/importer.py", line 94, in importFromDir\n    mod = load_module(part_fqname, fh, filename, desc)\n', '  File "/home/damian/Malambo/api/test/navori.py", line 2, in <module>\n    import navori.navori\n']
nose.suite: DEBUG: Create suite for [<nose.failure.Failure testMethod=runTest>]
nose.suite: DEBUG: tests [<nose.failure.Failure testMethod=runTest>] context None
nose.suite: DEBUG: wrap [<nose.failure.Failure testMethod=runTest>]
nose.suite: DEBUG: wrapping Failure: ImportError (No module named navori)
nose.suite: DEBUG: Context suite for [Test(<nose.failure.Failure testMethod=runTest>)] (<class 'nose.failure.Failure'>) (140025966929488)
nose.suite: DEBUG: suite <nose.suite.ContextSuite context=Failure> has context Failure
nose.suite: DEBUG: get ancestry <class 'nose.failure.Failure'>
nose.suite: DEBUG:  <class 'nose.failure.Failure'> ancestors ['nose', 'failure']
nose: DEBUG: __import__ nose.failure
nose: DEBUG: resolve: ['failure'], nose.failure, <module 'nose' from '/usr/local/lib/python2.7/dist-packages/nose/__init__.pyc'>, <module 'nose' from '/usr/local/lib/python2.7/dist-packages/nose/__init__.pyc'>
nose.suite: DEBUG: suite <nose.suite.ContextSuite context=Failure> has ancestor nose.failure
nose.suite: DEBUG:  <class 'nose.failure.Failure'> ancestors ['nose']
nose: DEBUG: __import__ nose
nose: DEBUG: resolve: [], nose, <module 'nose' from '/usr/local/lib/python2.7/dist-packages/nose/__init__.pyc'>, <module 'nose' from '/usr/local/lib/python2.7/dist-packages/nose/__init__.pyc'>
nose.suite: DEBUG: suite <nose.suite.ContextSuite context=Failure> has ancestor nose
nose.suite: DEBUG: Create suite for [<nose.suite.ContextSuite context=Failure>]
nose.suite: DEBUG: tests [<nose.suite.ContextSuite context=Failure>] context None
nose.suite: DEBUG: wrap [<nose.suite.ContextSuite context=Failure>]
nose.suite: DEBUG: wrapping <nose.suite.ContextSuite context=Failure>
nose.suite: DEBUG: Context suite for [<nose.suite.ContextSuite context=Failure>] (<class 'nose.failure.Failure'>) (140025971979408)
nose.suite: DEBUG: suite <nose.suite.ContextSuite context=Failure> has context Failure
nose.suite: DEBUG: get ancestry <class 'nose.failure.Failure'>
nose.suite: DEBUG:  <class 'nose.failure.Failure'> ancestors ['nose', 'failure']
nose: DEBUG: __import__ nose.failure
nose: DEBUG: resolve: ['failure'], nose.failure, <module 'nose' from '/usr/local/lib/python2.7/dist-packages/nose/__init__.pyc'>, <module 'nose' from '/usr/local/lib/python2.7/dist-packages/nose/__init__.pyc'>
nose.suite: DEBUG: suite <nose.suite.ContextSuite context=Failure> has ancestor nose.failure
nose.suite: DEBUG:  <class 'nose.failure.Failure'> ancestors ['nose']
nose: DEBUG: __import__ nose
nose: DEBUG: resolve: [], nose, <module 'nose' from '/usr/local/lib/python2.7/dist-packages/nose/__init__.pyc'>, <module 'nose' from '/usr/local/lib/python2.7/dist-packages/nose/__init__.pyc'>
nose.suite: DEBUG: suite <nose.suite.ContextSuite context=Failure> has ancestor nose
nose.core: DEBUG: runTests called
nose.suite: DEBUG: suite 140025971979408 (<nose.suite.ContextSuite context=Failure>) run called, tests: <generator object _get_wrapped_tests at 0x7f5a5604f640>
nose.suite: DEBUG: suite 140025971979408 setUp called, tests: <generator object _get_wrapped_tests at 0x7f5a5604f820>
nose.suite: DEBUG: tests in 140025971979408?
nose.suite: DEBUG: ancestor <module 'nose' from '/usr/local/lib/python2.7/dist-packages/nose/__init__.pyc'> may need setup
nose.suite: DEBUG: ancestor <module 'nose' from '/usr/local/lib/python2.7/dist-packages/nose/__init__.pyc'> does need setup
nose.suite: DEBUG: <nose.suite.ContextSuite context=Failure> setup context <module 'nose' from '/usr/local/lib/python2.7/dist-packages/nose/__init__.pyc'>
nose.suite: DEBUG: ancestor <module 'nose.failure' from '/usr/local/lib/python2.7/dist-packages/nose/failure.pyc'> may need setup
nose.suite: DEBUG: ancestor <module 'nose.failure' from '/usr/local/lib/python2.7/dist-packages/nose/failure.pyc'> does need setup
nose.suite: DEBUG: <nose.suite.ContextSuite context=Failure> setup context <module 'nose.failure' from '/usr/local/lib/python2.7/dist-packages/nose/failure.pyc'>
nose.suite: DEBUG: ancestor <class 'nose.failure.Failure'> may need setup
nose.suite: DEBUG: ancestor <class 'nose.failure.Failure'> does need setup
nose.suite: DEBUG: <nose.suite.ContextSuite context=Failure> setup context <class 'nose.failure.Failure'>
nose: DEBUG: call fixture <class 'nose.failure.Failure'>.setUpClass
nose.suite: DEBUG: completed suite setup
nose.suite: DEBUG: precache is [<nose.suite.ContextSuite context=Failure>]
nose.suite: DEBUG: suite 140025966929488 (<nose.suite.ContextSuite context=Failure>) run called, tests: <generator object _get_wrapped_tests at 0x7f5a5604f910>
nose.suite: DEBUG: suite 140025966929488 setUp called, tests: <generator object _get_wrapped_tests at 0x7f5a5604f910>
nose.suite: DEBUG: tests in 140025966929488?
nose.suite: DEBUG: ancestor <module 'nose' from '/usr/local/lib/python2.7/dist-packages/nose/__init__.pyc'> may need setup
nose.suite: DEBUG: ancestor <module 'nose.failure' from '/usr/local/lib/python2.7/dist-packages/nose/failure.pyc'> may need setup
nose.suite: DEBUG: ancestor <class 'nose.failure.Failure'> may need setup
nose.suite: DEBUG: completed suite setup
nose.suite: DEBUG: precache is [Test(<nose.failure.Failure testMethod=runTest>)]
nose.suite: DEBUG: context teardown
nose.suite: DEBUG: ancestor <class 'nose.failure.Failure'> may need teardown
nose.suite: DEBUG: <nose.suite.ContextSuite context=Failure> setup ancestor <class 'nose.failure.Failure'>
nose.suite: DEBUG: ancestor <module 'nose.failure' from '/usr/local/lib/python2.7/dist-packages/nose/failure.pyc'> may need teardown
nose.suite: DEBUG: <nose.suite.ContextSuite context=Failure> setup ancestor <module 'nose.failure' from '/usr/local/lib/python2.7/dist-packages/nose/failure.pyc'>
nose.suite: DEBUG: ancestor <module 'nose' from '/usr/local/lib/python2.7/dist-packages/nose/__init__.pyc'> may need teardown
nose.suite: DEBUG: <nose.suite.ContextSuite context=Failure> setup ancestor <module 'nose' from '/usr/local/lib/python2.7/dist-packages/nose/__init__.pyc'>
nose.suite: DEBUG: ancestor <class 'nose.failure.Failure'> may need teardown
nose.suite: DEBUG: <nose.suite.ContextSuite context=Failure> setup ancestor <class 'nose.failure.Failure'>
nose.suite: DEBUG: context teardown
nose.suite: DEBUG: ancestor <class 'nose.failure.Failure'> may need teardown
nose.suite: DEBUG: <nose.suite.ContextSuite context=Failure> setup ancestor <class 'nose.failure.Failure'>
nose.suite: DEBUG: <nose.suite.ContextSuite context=Failure> teardown context <class 'nose.failure.Failure'>
nose: DEBUG: call fixture <class 'nose.failure.Failure'>.tearDownClass
nose.suite: DEBUG: ancestor <module 'nose.failure' from '/usr/local/lib/python2.7/dist-packages/nose/failure.pyc'> may need teardown
nose.suite: DEBUG: <nose.suite.ContextSuite context=Failure> setup ancestor <module 'nose.failure' from '/usr/local/lib/python2.7/dist-packages/nose/failure.pyc'>
nose.suite: DEBUG: <nose.suite.ContextSuite context=Failure> teardown context <module 'nose.failure' from '/usr/local/lib/python2.7/dist-packages/nose/failure.pyc'>
nose.suite: DEBUG: ancestor <module 'nose' from '/usr/local/lib/python2.7/dist-packages/nose/__init__.pyc'> may need teardown
nose.suite: DEBUG: <nose.suite.ContextSuite context=Failure> setup ancestor <module 'nose' from '/usr/local/lib/python2.7/dist-packages/nose/__init__.pyc'>
nose.suite: DEBUG: <nose.suite.ContextSuite context=Failure> teardown context <module 'nose' from '/usr/local/lib/python2.7/dist-packages/nose/__init__.pyc'>
nose.suite: DEBUG: ancestor <class 'nose.failure.Failure'> may need teardown
nose.suite: DEBUG: ancestor <class 'nose.failure.Failure'> already torn down
nose.config: INFO: Ignoring files matching ['^\\.', '^_', '^setup\\.py$']
nose.plugins.manager: DEBUG: Configuring plugins
nose.plugins.manager: DEBUG: Plugins enabled: [<nose.plugins.capture.Capture object at 0x7fbeb1f20410>, <nose.plugins.logcapture.LogCapture object at 0x7fbeb1f34810>, <nose.plugins.deprecated.Deprecated object at 0x7fbeb1f34d10>, <nose.plugins.skip.Skip object at 0x7fbeb13e5d50>]
nose.core: DEBUG: configured Config(addPaths=True, args=(), configSection='nosetests', debug='nose,nose.importer', debugLog='nose_debug', env={}, exclude=None, files=[], firstPackageWins=False, getTestCaseNamesCompat=False, ignoreFiles=[<_sre.SRE_Pattern object at 0x7fbeb3b90ab0>, <_sre.SRE_Pattern object at 0x7fbeb3b37e30>, <_sre.SRE_Pattern object at 0x7fbeb3c2fab0>], ignoreFilesDefaultStrings=['^\\.', '^_', '^setup\\.py$'], include=None, includeExe=False, logStream=<open file '<stderr>', mode 'w' at 0x7fbeb3c771e0>, loggingConfig=None, options=<Values at 0x7fbeb14065f0: {'xunit_file': 'nosetests.xml', 'enable_plugin_allmodules': None, 'multiprocess_restartworker': False, 'loggingConfig': None, 'doctestExtension': None, 'doctest_tests': None, 'enable_plugin_xunit': None, 'logcapture_clear': False, 'stopOnError': False, 'enable_plugin_id': None, 'testNames': None, 'doctestOptions': None, 'exclude': [], 'byteCompile': True, 'ignoreFiles': [], 'logcapture': True, 'addPaths': True, 'capture': True, 'xunit_testsuite_name': 'nosetests', 'logcapture_level': 'NOTSET', 'cover_xml': None, 'py3where': None, 'noSkip': False, 'enable_plugin_isolation': None, 'logcapture_filters': None, 'collect_only': None, 'failed': False, 'version': False, 'eval_attr': None, 'include': [], 'enable_plugin_profile': None, 'debugErrors': False, 'files': None, 'cover_tests': None, 'multiprocess_timeout': 10, 'testMatch': '(?:^|[\\b_\\./-])[Tt]est', 'traverseNamespace': False, 'firstPackageWins': False, 'cover_html_dir': 'cover', 'cover_branches': None, 'debugBoth': False, 'noDeprecated': False, 'cover_xml_file': 'coverage.xml', 'showPlugins': False, 'cover_erase': None, 'multiprocess_workers': 0, 'testIdFile': '.noseids', 'enable_plugin_coverage': None, 'attr': None, 'profile_sort': 'cumulative', 'doctestFixtures': None, 'logcapture_datefmt': None, 'cover_packages': None, 'verbosity': 1, 'enable_plugin_doctest': None, 'profile_stats_file': None, 'cover_inclusive': None, 'includeExe': False, 'logcapture_format': '%(name)s: %(levelname)s: %(message)s', 'debugFailures': False, 'detailedErrors': None, 'debugLog': 'nose_debug', 'doctest_result_var': None, 'cover_html': None, 'debug': 'nose,nose.importer', 'cover_min_percentage': None, 'where': None, 'profile_restrict': None}>, parser=<optparse.OptionParser instance at 0x7fbeb1f1df38>, parserClass=<class optparse.OptionParser at 0x7fbeb25b9f58>, plugins=<nose.plugins.manager.DefaultPluginManager object at 0x7fbeb1f18ed0>, py3where=(), runOnInit=True, srcDirs=('lib', 'src'), stopOnError=False, stream=<open file '<stderr>', mode 'w' at 0x7fbeb3c771e0>, testMatch=<_sre.SRE_Pattern object at 0x7fbeb1f23030>, testMatchPat='(?:^|[\\b_\\./-])[Tt]est', testNames=['navori.py'], traverseNamespace=False, verbosity=1, where=(), worker=False, workingDir='/home/damian/Malambo/api/test')
nose.importer: DEBUG: Add path /home/damian/Malambo/api/test
nose.importer: DEBUG: insert /home/damian/Malambo/api/test into sys.path
nose.core: DEBUG: test loader is <nose.loader.TestLoader object at 0x7fbeb140a0d0>
nose.core: DEBUG: defaultTest .
nose.core: DEBUG: Test names are ['navori.py']
nose.core: DEBUG: createTests called with None
nose.loader: DEBUG: load from navori.py (None)
nose.selector: DEBUG: Test name navori.py resolved to file navori.py, module None, call None
nose.selector: DEBUG: Final resolution of test name navori.py: file /home/damian/Malambo/api/test/navori.py module navori call None
nose.importer: DEBUG: Import navori from /home/damian/Malambo/api/test
nose.importer: DEBUG: Add path /home/damian/Malambo/api/test
nose.importer: DEBUG: find module part navori (navori) in ['/home/damian/Malambo/api/test']
nose.failure: DEBUG: A failure! <type 'exceptions.ImportError'> No module named Navori ['  File "/usr/local/lib/python2.7/dist-packages/nose/loader.py", line 418, in loadTestsFromName\n    addr.filename, addr.module)\n', '  File "/usr/local/lib/python2.7/dist-packages/nose/importer.py", line 47, in importFromPath\n    return self.importFromDir(dir_path, fqname)\n', '  File "/usr/local/lib/python2.7/dist-packages/nose/importer.py", line 94, in importFromDir\n    mod = load_module(part_fqname, fh, filename, desc)\n', '  File "/home/damian/Malambo/api/test/navori.py", line 2, in <module>\n    import navori.Navori\n']
nose.suite: DEBUG: Create suite for [<nose.failure.Failure testMethod=runTest>]
nose.suite: DEBUG: tests [<nose.failure.Failure testMethod=runTest>] context None
nose.suite: DEBUG: wrap [<nose.failure.Failure testMethod=runTest>]
nose.suite: DEBUG: wrapping Failure: ImportError (No module named Navori)
nose.suite: DEBUG: Context suite for [Test(<nose.failure.Failure testMethod=runTest>)] (<class 'nose.failure.Failure'>) (140456989267536)
nose.suite: DEBUG: suite <nose.suite.ContextSuite context=Failure> has context Failure
nose.suite: DEBUG: get ancestry <class 'nose.failure.Failure'>
nose.suite: DEBUG:  <class 'nose.failure.Failure'> ancestors ['nose', 'failure']
nose: DEBUG: __import__ nose.failure
nose: DEBUG: resolve: ['failure'], nose.failure, <module 'nose' from '/usr/local/lib/python2.7/dist-packages/nose/__init__.pyc'>, <module 'nose' from '/usr/local/lib/python2.7/dist-packages/nose/__init__.pyc'>
nose.suite: DEBUG: suite <nose.suite.ContextSuite context=Failure> has ancestor nose.failure
nose.suite: DEBUG:  <class 'nose.failure.Failure'> ancestors ['nose']
nose: DEBUG: __import__ nose
nose: DEBUG: resolve: [], nose, <module 'nose' from '/usr/local/lib/python2.7/dist-packages/nose/__init__.pyc'>, <module 'nose' from '/usr/local/lib/python2.7/dist-packages/nose/__init__.pyc'>
nose.suite: DEBUG: suite <nose.suite.ContextSuite context=Failure> has ancestor nose
nose.suite: DEBUG: Create suite for [<nose.suite.ContextSuite context=Failure>]
nose.suite: DEBUG: tests [<nose.suite.ContextSuite context=Failure>] context None
nose.suite: DEBUG: wrap [<nose.suite.ContextSuite context=Failure>]
nose.suite: DEBUG: wrapping <nose.suite.ContextSuite context=Failure>
nose.suite: DEBUG: Context suite for [<nose.suite.ContextSuite context=Failure>] (<class 'nose.failure.Failure'>) (140456994317456)
nose.suite: DEBUG: suite <nose.suite.ContextSuite context=Failure> has context Failure
nose.suite: DEBUG: get ancestry <class 'nose.failure.Failure'>
nose.suite: DEBUG:  <class 'nose.failure.Failure'> ancestors ['nose', 'failure']
nose: DEBUG: __import__ nose.failure
nose: DEBUG: resolve: ['failure'], nose.failure, <module 'nose' from '/usr/local/lib/python2.7/dist-packages/nose/__init__.pyc'>, <module 'nose' from '/usr/local/lib/python2.7/dist-packages/nose/__init__.pyc'>
nose.suite: DEBUG: suite <nose.suite.ContextSuite context=Failure> has ancestor nose.failure
nose.suite: DEBUG:  <class 'nose.failure.Failure'> ancestors ['nose']
nose: DEBUG: __import__ nose
nose: DEBUG: resolve: [], nose, <module 'nose' from '/usr/local/lib/python2.7/dist-packages/nose/__init__.pyc'>, <module 'nose' from '/usr/local/lib/python2.7/dist-packages/nose/__init__.pyc'>
nose.suite: DEBUG: suite <nose.suite.ContextSuite context=Failure> has ancestor nose
nose.core: DEBUG: runTests called
nose.suite: DEBUG: suite 140456994317456 (<nose.suite.ContextSuite context=Failure>) run called, tests: <generator object _get_wrapped_tests at 0x7fbeb0f3e640>
nose.suite: DEBUG: suite 140456994317456 setUp called, tests: <generator object _get_wrapped_tests at 0x7fbeb0f3e820>
nose.suite: DEBUG: tests in 140456994317456?
nose.suite: DEBUG: ancestor <module 'nose' from '/usr/local/lib/python2.7/dist-packages/nose/__init__.pyc'> may need setup
nose.suite: DEBUG: ancestor <module 'nose' from '/usr/local/lib/python2.7/dist-packages/nose/__init__.pyc'> does need setup
nose.suite: DEBUG: <nose.suite.ContextSuite context=Failure> setup context <module 'nose' from '/usr/local/lib/python2.7/dist-packages/nose/__init__.pyc'>
nose.suite: DEBUG: ancestor <module 'nose.failure' from '/usr/local/lib/python2.7/dist-packages/nose/failure.pyc'> may need setup
nose.suite: DEBUG: ancestor <module 'nose.failure' from '/usr/local/lib/python2.7/dist-packages/nose/failure.pyc'> does need setup
nose.suite: DEBUG: <nose.suite.ContextSuite context=Failure> setup context <module 'nose.failure' from '/usr/local/lib/python2.7/dist-packages/nose/failure.pyc'>
nose.suite: DEBUG: ancestor <class 'nose.failure.Failure'> may need setup
nose.suite: DEBUG: ancestor <class 'nose.failure.Failure'> does need setup
nose.suite: DEBUG: <nose.suite.ContextSuite context=Failure> setup context <class 'nose.failure.Failure'>
nose: DEBUG: call fixture <class 'nose.failure.Failure'>.setUpClass
nose.suite: DEBUG: completed suite setup
nose.suite: DEBUG: precache is [<nose.suite.ContextSuite context=Failure>]
nose.suite: DEBUG: suite 140456989267536 (<nose.suite.ContextSuite context=Failure>) run called, tests: <generator object _get_wrapped_tests at 0x7fbeb0f3e910>
nose.suite: DEBUG: suite 140456989267536 setUp called, tests: <generator object _get_wrapped_tests at 0x7fbeb0f3e910>
nose.suite: DEBUG: tests in 140456989267536?
nose.suite: DEBUG: ancestor <module 'nose' from '/usr/local/lib/python2.7/dist-packages/nose/__init__.pyc'> may need setup
nose.suite: DEBUG: ancestor <module 'nose.failure' from '/usr/local/lib/python2.7/dist-packages/nose/failure.pyc'> may need setup
nose.suite: DEBUG: ancestor <class 'nose.failure.Failure'> may need setup
nose.suite: DEBUG: completed suite setup
nose.suite: DEBUG: precache is [Test(<nose.failure.Failure testMethod=runTest>)]
nose.suite: DEBUG: context teardown
nose.suite: DEBUG: ancestor <class 'nose.failure.Failure'> may need teardown
nose.suite: DEBUG: <nose.suite.ContextSuite context=Failure> setup ancestor <class 'nose.failure.Failure'>
nose.suite: DEBUG: ancestor <module 'nose.failure' from '/usr/local/lib/python2.7/dist-packages/nose/failure.pyc'> may need teardown
nose.suite: DEBUG: <nose.suite.ContextSuite context=Failure> setup ancestor <module 'nose.failure' from '/usr/local/lib/python2.7/dist-packages/nose/failure.pyc'>
nose.suite: DEBUG: ancestor <module 'nose' from '/usr/local/lib/python2.7/dist-packages/nose/__init__.pyc'> may need teardown
nose.suite: DEBUG: <nose.suite.ContextSuite context=Failure> setup ancestor <module 'nose' from '/usr/local/lib/python2.7/dist-packages/nose/__init__.pyc'>
nose.suite: DEBUG: ancestor <class 'nose.failure.Failure'> may need teardown
nose.suite: DEBUG: <nose.suite.ContextSuite context=Failure> setup ancestor <class 'nose.failure.Failure'>
nose.suite: DEBUG: context teardown
nose.suite: DEBUG: ancestor <class 'nose.failure.Failure'> may need teardown
nose.suite: DEBUG: <nose.suite.ContextSuite context=Failure> setup ancestor <class 'nose.failure.Failure'>
nose.suite: DEBUG: <nose.suite.ContextSuite context=Failure> teardown context <class 'nose.failure.Failure'>
nose: DEBUG: call fixture <class 'nose.failure.Failure'>.tearDownClass
nose.suite: DEBUG: ancestor <module 'nose.failure' from '/usr/local/lib/python2.7/dist-packages/nose/failure.pyc'> may need teardown
nose.suite: DEBUG: <nose.suite.ContextSuite context=Failure> setup ancestor <module 'nose.failure' from '/usr/local/lib/python2.7/dist-packages/nose/failure.pyc'>
nose.suite: DEBUG: <nose.suite.ContextSuite context=Failure> teardown context <module 'nose.failure' from '/usr/local/lib/python2.7/dist-packages/nose/failure.pyc'>
nose.suite: DEBUG: ancestor <module 'nose' from '/usr/local/lib/python2.7/dist-packages/nose/__init__.pyc'> may need teardown
nose.suite: DEBUG: <nose.suite.ContextSuite context=Failure> setup ancestor <module 'nose' from '/usr/local/lib/python2.7/dist-packages/nose/__init__.pyc'>
nose.suite: DEBUG: <nose.suite.ContextSuite context=Failure> teardown context <module 'nose' from '/usr/local/lib/python2.7/dist-packages/nose/__init__.pyc'>
nose.suite: DEBUG: ancestor <class 'nose.failure.Failure'> may need teardown
nose.suite: DEBUG: ancestor <class 'nose.failure.Failure'> already torn down
nose.config: INFO: Ignoring files matching ['^\\.', '^_', '^setup\\.py$']
nose.plugins.manager: DEBUG: Configuring plugins
nose.plugins.manager: DEBUG: Plugins enabled: [<nose.plugins.capture.Capture object at 0x7fa4a7eb0410>, <nose.plugins.logcapture.LogCapture object at 0x7fa4a7ec4810>, <nose.plugins.deprecated.Deprecated object at 0x7fa4a7ec4d10>, <nose.plugins.skip.Skip object at 0x7fa4a7375d50>]
nose.core: DEBUG: configured Config(addPaths=True, args=(), configSection='nosetests', debug='nose,nose.importer', debugLog='nose_debug', env={}, exclude=None, files=[], firstPackageWins=False, getTestCaseNamesCompat=False, ignoreFiles=[<_sre.SRE_Pattern object at 0x7fa4a9b20ab0>, <_sre.SRE_Pattern object at 0x7fa4a9ac7e30>, <_sre.SRE_Pattern object at 0x7fa4a9bbfab0>], ignoreFilesDefaultStrings=['^\\.', '^_', '^setup\\.py$'], include=None, includeExe=False, logStream=<open file '<stderr>', mode 'w' at 0x7fa4a9c071e0>, loggingConfig=None, options=<Values at 0x7fa4a73965f0: {'xunit_file': 'nosetests.xml', 'enable_plugin_allmodules': None, 'multiprocess_restartworker': False, 'loggingConfig': None, 'doctestExtension': None, 'doctest_tests': None, 'enable_plugin_xunit': None, 'logcapture_clear': False, 'stopOnError': False, 'enable_plugin_id': None, 'testNames': None, 'doctestOptions': None, 'exclude': [], 'byteCompile': True, 'ignoreFiles': [], 'logcapture': True, 'addPaths': True, 'capture': True, 'xunit_testsuite_name': 'nosetests', 'logcapture_level': 'NOTSET', 'cover_xml': None, 'py3where': None, 'noSkip': False, 'enable_plugin_isolation': None, 'logcapture_filters': None, 'collect_only': None, 'failed': False, 'version': False, 'eval_attr': None, 'include': [], 'enable_plugin_profile': None, 'debugErrors': False, 'files': None, 'cover_tests': None, 'multiprocess_timeout': 10, 'testMatch': '(?:^|[\\b_\\./-])[Tt]est', 'traverseNamespace': False, 'firstPackageWins': False, 'cover_html_dir': 'cover', 'cover_branches': None, 'debugBoth': False, 'noDeprecated': False, 'cover_xml_file': 'coverage.xml', 'showPlugins': False, 'cover_erase': None, 'multiprocess_workers': 0, 'testIdFile': '.noseids', 'enable_plugin_coverage': None, 'attr': None, 'profile_sort': 'cumulative', 'doctestFixtures': None, 'logcapture_datefmt': None, 'cover_packages': None, 'verbosity': 1, 'enable_plugin_doctest': None, 'profile_stats_file': None, 'cover_inclusive': None, 'includeExe': False, 'logcapture_format': '%(name)s: %(levelname)s: %(message)s', 'debugFailures': False, 'detailedErrors': None, 'debugLog': 'nose_debug', 'doctest_result_var': None, 'cover_html': None, 'debug': 'nose,nose.importer', 'cover_min_percentage': None, 'where': None, 'profile_restrict': None}>, parser=<optparse.OptionParser instance at 0x7fa4a7eadf38>, parserClass=<class optparse.OptionParser at 0x7fa4a8549f58>, plugins=<nose.plugins.manager.DefaultPluginManager object at 0x7fa4a7ea8ed0>, py3where=(), runOnInit=True, srcDirs=('lib', 'src'), stopOnError=False, stream=<open file '<stderr>', mode 'w' at 0x7fa4a9c071e0>, testMatch=<_sre.SRE_Pattern object at 0x7fa4a7eb3030>, testMatchPat='(?:^|[\\b_\\./-])[Tt]est', testNames=['navori.py'], traverseNamespace=False, verbosity=1, where=(), worker=False, workingDir='/home/damian/Malambo/api/test')
nose.importer: DEBUG: Add path /home/damian/Malambo/api/test
nose.importer: DEBUG: insert /home/damian/Malambo/api/test into sys.path
nose.core: DEBUG: test loader is <nose.loader.TestLoader object at 0x7fa4a739a0d0>
nose.core: DEBUG: defaultTest .
nose.core: DEBUG: Test names are ['navori.py']
nose.core: DEBUG: createTests called with None
nose.loader: DEBUG: load from navori.py (None)
nose.selector: DEBUG: Test name navori.py resolved to file navori.py, module None, call None
nose.selector: DEBUG: Final resolution of test name navori.py: file /home/damian/Malambo/api/test/navori.py module navori call None
nose.importer: DEBUG: Import navori from /home/damian/Malambo/api/test
nose.importer: DEBUG: Add path /home/damian/Malambo/api/test
nose.importer: DEBUG: find module part navori (navori) in ['/home/damian/Malambo/api/test']
nose.failure: DEBUG: A failure! <type 'exceptions.ImportError'> cannot import name Navori ['  File "/usr/local/lib/python2.7/dist-packages/nose/loader.py", line 418, in loadTestsFromName\n    addr.filename, addr.module)\n', '  File "/usr/local/lib/python2.7/dist-packages/nose/importer.py", line 47, in importFromPath\n    return self.importFromDir(dir_path, fqname)\n', '  File "/usr/local/lib/python2.7/dist-packages/nose/importer.py", line 94, in importFromDir\n    mod = load_module(part_fqname, fh, filename, desc)\n', '  File "/home/damian/Malambo/api/test/navori.py", line 2, in <module>\n    import Navori\n', '  File "/home/damian/Malambo/api/test/Navori.py", line 2, in <module>\n']
nose.suite: DEBUG: Create suite for [<nose.failure.Failure testMethod=runTest>]
nose.suite: DEBUG: tests [<nose.failure.Failure testMethod=runTest>] context None
nose.suite: DEBUG: wrap [<nose.failure.Failure testMethod=runTest>]
nose.suite: DEBUG: wrapping Failure: ImportError (cannot import name Navori)
nose.suite: DEBUG: Context suite for [Test(<nose.failure.Failure testMethod=runTest>)] (<class 'nose.failure.Failure'>) (140345151888400)
nose.suite: DEBUG: suite <nose.suite.ContextSuite context=Failure> has context Failure
nose.suite: DEBUG: get ancestry <class 'nose.failure.Failure'>
nose.suite: DEBUG:  <class 'nose.failure.Failure'> ancestors ['nose', 'failure']
nose: DEBUG: __import__ nose.failure
nose: DEBUG: resolve: ['failure'], nose.failure, <module 'nose' from '/usr/local/lib/python2.7/dist-packages/nose/__init__.pyc'>, <module 'nose' from '/usr/local/lib/python2.7/dist-packages/nose/__init__.pyc'>
nose.suite: DEBUG: suite <nose.suite.ContextSuite context=Failure> has ancestor nose.failure
nose.suite: DEBUG:  <class 'nose.failure.Failure'> ancestors ['nose']
nose: DEBUG: __import__ nose
nose: DEBUG: resolve: [], nose, <module 'nose' from '/usr/local/lib/python2.7/dist-packages/nose/__init__.pyc'>, <module 'nose' from '/usr/local/lib/python2.7/dist-packages/nose/__init__.pyc'>
nose.suite: DEBUG: suite <nose.suite.ContextSuite context=Failure> has ancestor nose
nose.suite: DEBUG: Create suite for [<nose.suite.ContextSuite context=Failure>]
nose.suite: DEBUG: tests [<nose.suite.ContextSuite context=Failure>] context None
nose.suite: DEBUG: wrap [<nose.suite.ContextSuite context=Failure>]
nose.suite: DEBUG: wrapping <nose.suite.ContextSuite context=Failure>
nose.suite: DEBUG: Context suite for [<nose.suite.ContextSuite context=Failure>] (<class 'nose.failure.Failure'>) (140345156936848)
nose.suite: DEBUG: suite <nose.suite.ContextSuite context=Failure> has context Failure
nose.suite: DEBUG: get ancestry <class 'nose.failure.Failure'>
nose.suite: DEBUG:  <class 'nose.failure.Failure'> ancestors ['nose', 'failure']
nose: DEBUG: __import__ nose.failure
nose: DEBUG: resolve: ['failure'], nose.failure, <module 'nose' from '/usr/local/lib/python2.7/dist-packages/nose/__init__.pyc'>, <module 'nose' from '/usr/local/lib/python2.7/dist-packages/nose/__init__.pyc'>
nose.suite: DEBUG: suite <nose.suite.ContextSuite context=Failure> has ancestor nose.failure
nose.suite: DEBUG:  <class 'nose.failure.Failure'> ancestors ['nose']
nose: DEBUG: __import__ nose
nose: DEBUG: resolve: [], nose, <module 'nose' from '/usr/local/lib/python2.7/dist-packages/nose/__init__.pyc'>, <module 'nose' from '/usr/local/lib/python2.7/dist-packages/nose/__init__.pyc'>
nose.suite: DEBUG: suite <nose.suite.ContextSuite context=Failure> has ancestor nose
nose.core: DEBUG: runTests called
nose.suite: DEBUG: suite 140345156936848 (<nose.suite.ContextSuite context=Failure>) run called, tests: <generator object _get_wrapped_tests at 0x7fa4a6ece7d0>
nose.suite: DEBUG: suite 140345156936848 setUp called, tests: <generator object _get_wrapped_tests at 0x7fa4a6ece9b0>
nose.suite: DEBUG: tests in 140345156936848?
nose.suite: DEBUG: ancestor <module 'nose' from '/usr/local/lib/python2.7/dist-packages/nose/__init__.pyc'> may need setup
nose.suite: DEBUG: ancestor <module 'nose' from '/usr/local/lib/python2.7/dist-packages/nose/__init__.pyc'> does need setup
nose.suite: DEBUG: <nose.suite.ContextSuite context=Failure> setup context <module 'nose' from '/usr/local/lib/python2.7/dist-packages/nose/__init__.pyc'>
nose.suite: DEBUG: ancestor <module 'nose.failure' from '/usr/local/lib/python2.7/dist-packages/nose/failure.pyc'> may need setup
nose.suite: DEBUG: ancestor <module 'nose.failure' from '/usr/local/lib/python2.7/dist-packages/nose/failure.pyc'> does need setup
nose.suite: DEBUG: <nose.suite.ContextSuite context=Failure> setup context <module 'nose.failure' from '/usr/local/lib/python2.7/dist-packages/nose/failure.pyc'>
nose.suite: DEBUG: ancestor <class 'nose.failure.Failure'> may need setup
nose.suite: DEBUG: ancestor <class 'nose.failure.Failure'> does need setup
nose.suite: DEBUG: <nose.suite.ContextSuite context=Failure> setup context <class 'nose.failure.Failure'>
nose: DEBUG: call fixture <class 'nose.failure.Failure'>.setUpClass
nose.suite: DEBUG: completed suite setup
nose.suite: DEBUG: precache is [<nose.suite.ContextSuite context=Failure>]
nose.suite: DEBUG: suite 140345151888400 (<nose.suite.ContextSuite context=Failure>) run called, tests: <generator object _get_wrapped_tests at 0x7fa4a6eceaa0>
nose.suite: DEBUG: suite 140345151888400 setUp called, tests: <generator object _get_wrapped_tests at 0x7fa4a6eceaa0>
nose.suite: DEBUG: tests in 140345151888400?
nose.suite: DEBUG: ancestor <module 'nose' from '/usr/local/lib/python2.7/dist-packages/nose/__init__.pyc'> may need setup
nose.suite: DEBUG: ancestor <module 'nose.failure' from '/usr/local/lib/python2.7/dist-packages/nose/failure.pyc'> may need setup
nose.suite: DEBUG: ancestor <class 'nose.failure.Failure'> may need setup
nose.suite: DEBUG: completed suite setup
nose.suite: DEBUG: precache is [Test(<nose.failure.Failure testMethod=runTest>)]
nose.suite: DEBUG: context teardown
nose.suite: DEBUG: ancestor <class 'nose.failure.Failure'> may need teardown
nose.suite: DEBUG: <nose.suite.ContextSuite context=Failure> setup ancestor <class 'nose.failure.Failure'>
nose.suite: DEBUG: ancestor <module 'nose.failure' from '/usr/local/lib/python2.7/dist-packages/nose/failure.pyc'> may need teardown
nose.suite: DEBUG: <nose.suite.ContextSuite context=Failure> setup ancestor <module 'nose.failure' from '/usr/local/lib/python2.7/dist-packages/nose/failure.pyc'>
nose.suite: DEBUG: ancestor <module 'nose' from '/usr/local/lib/python2.7/dist-packages/nose/__init__.pyc'> may need teardown
nose.suite: DEBUG: <nose.suite.ContextSuite context=Failure> setup ancestor <module 'nose' from '/usr/local/lib/python2.7/dist-packages/nose/__init__.pyc'>
nose.suite: DEBUG: ancestor <class 'nose.failure.Failure'> may need teardown
nose.suite: DEBUG: <nose.suite.ContextSuite context=Failure> setup ancestor <class 'nose.failure.Failure'>
nose.suite: DEBUG: context teardown
nose.suite: DEBUG: ancestor <class 'nose.failure.Failure'> may need teardown
nose.suite: DEBUG: <nose.suite.ContextSuite context=Failure> setup ancestor <class 'nose.failure.Failure'>
nose.suite: DEBUG: <nose.suite.ContextSuite context=Failure> teardown context <class 'nose.failure.Failure'>
nose: DEBUG: call fixture <class 'nose.failure.Failure'>.tearDownClass
nose.suite: DEBUG: ancestor <module 'nose.failure' from '/usr/local/lib/python2.7/dist-packages/nose/failure.pyc'> may need teardown
nose.suite: DEBUG: <nose.suite.ContextSuite context=Failure> setup ancestor <module 'nose.failure' from '/usr/local/lib/python2.7/dist-packages/nose/failure.pyc'>
nose.suite: DEBUG: <nose.suite.ContextSuite context=Failure> teardown context <module 'nose.failure' from '/usr/local/lib/python2.7/dist-packages/nose/failure.pyc'>
nose.suite: DEBUG: ancestor <module 'nose' from '/usr/local/lib/python2.7/dist-packages/nose/__init__.pyc'> may need teardown
nose.suite: DEBUG: <nose.suite.ContextSuite context=Failure> setup ancestor <module 'nose' from '/usr/local/lib/python2.7/dist-packages/nose/__init__.pyc'>
nose.suite: DEBUG: <nose.suite.ContextSuite context=Failure> teardown context <module 'nose' from '/usr/local/lib/python2.7/dist-packages/nose/__init__.pyc'>
nose.suite: DEBUG: ancestor <class 'nose.failure.Failure'> may need teardown
nose.suite: DEBUG: ancestor <class 'nose.failure.Failure'> already torn down
nose.config: INFO: Ignoring files matching ['^\\.', '^_', '^setup\\.py$']
nose.plugins.manager: DEBUG: Configuring plugins
nose.plugins.manager: DEBUG: Plugins enabled: [<nose.plugins.capture.Capture object at 0x7fdbadec5410>, <nose.plugins.logcapture.LogCapture object at 0x7fdbaded9810>, <nose.plugins.deprecated.Deprecated object at 0x7fdbaded9d10>, <nose.plugins.skip.Skip object at 0x7fdbad38ad50>]
nose.core: DEBUG: configured Config(addPaths=True, args=(), configSection='nosetests', debug='nose,nose.importer', debugLog='nose_debug', env={}, exclude=None, files=[], firstPackageWins=False, getTestCaseNamesCompat=False, ignoreFiles=[<_sre.SRE_Pattern object at 0x7fdbafb35ab0>, <_sre.SRE_Pattern object at 0x7fdbafadce30>, <_sre.SRE_Pattern object at 0x7fdbafbd4ab0>], ignoreFilesDefaultStrings=['^\\.', '^_', '^setup\\.py$'], include=None, includeExe=False, logStream=<open file '<stderr>', mode 'w' at 0x7fdbafc1c1e0>, loggingConfig=None, options=<Values at 0x7fdbad3ab5f0: {'xunit_file': 'nosetests.xml', 'enable_plugin_allmodules': None, 'multiprocess_restartworker': False, 'loggingConfig': None, 'doctestExtension': None, 'doctest_tests': None, 'enable_plugin_xunit': None, 'logcapture_clear': False, 'stopOnError': False, 'enable_plugin_id': None, 'testNames': None, 'doctestOptions': None, 'exclude': [], 'byteCompile': True, 'ignoreFiles': [], 'logcapture': True, 'addPaths': True, 'capture': True, 'xunit_testsuite_name': 'nosetests', 'logcapture_level': 'NOTSET', 'cover_xml': None, 'py3where': None, 'noSkip': False, 'enable_plugin_isolation': None, 'logcapture_filters': None, 'collect_only': None, 'failed': False, 'version': False, 'eval_attr': None, 'include': [], 'enable_plugin_profile': None, 'debugErrors': False, 'files': None, 'cover_tests': None, 'multiprocess_timeout': 10, 'testMatch': '(?:^|[\\b_\\./-])[Tt]est', 'traverseNamespace': False, 'firstPackageWins': False, 'cover_html_dir': 'cover', 'cover_branches': None, 'debugBoth': False, 'noDeprecated': False, 'cover_xml_file': 'coverage.xml', 'showPlugins': False, 'cover_erase': None, 'multiprocess_workers': 0, 'testIdFile': '.noseids', 'enable_plugin_coverage': None, 'attr': None, 'profile_sort': 'cumulative', 'doctestFixtures': None, 'logcapture_datefmt': None, 'cover_packages': None, 'verbosity': 1, 'enable_plugin_doctest': None, 'profile_stats_file': None, 'cover_inclusive': None, 'includeExe': False, 'logcapture_format': '%(name)s: %(levelname)s: %(message)s', 'debugFailures': False, 'detailedErrors': None, 'debugLog': 'nose_debug', 'doctest_result_var': None, 'cover_html': None, 'debug': 'nose,nose.importer', 'cover_min_percentage': None, 'where': None, 'profile_restrict': None}>, parser=<optparse.OptionParser instance at 0x7fdbadec2f38>, parserClass=<class optparse.OptionParser at 0x7fdbae55ef58>, plugins=<nose.plugins.manager.DefaultPluginManager object at 0x7fdbadebded0>, py3where=(), runOnInit=True, srcDirs=('lib', 'src'), stopOnError=False, stream=<open file '<stderr>', mode 'w' at 0x7fdbafc1c1e0>, testMatch=<_sre.SRE_Pattern object at 0x7fdbadec8030>, testMatchPat='(?:^|[\\b_\\./-])[Tt]est', testNames=['navori.py'], traverseNamespace=False, verbosity=1, where=(), worker=False, workingDir='/home/damian/Malambo/api/test')
nose.importer: DEBUG: Add path /home/damian/Malambo/api/test
nose.importer: DEBUG: insert /home/damian/Malambo/api/test into sys.path
nose.core: DEBUG: test loader is <nose.loader.TestLoader object at 0x7fdbad3af0d0>
nose.core: DEBUG: defaultTest .
nose.core: DEBUG: Test names are ['navori.py']
nose.core: DEBUG: createTests called with None
nose.loader: DEBUG: load from navori.py (None)
nose.selector: DEBUG: Test name navori.py resolved to file navori.py, module None, call None
nose.selector: DEBUG: Final resolution of test name navori.py: file /home/damian/Malambo/api/test/navori.py module navori call None
nose.importer: DEBUG: Import navori from /home/damian/Malambo/api/test
nose.importer: DEBUG: Add path /home/damian/Malambo/api/test
nose.importer: DEBUG: find module part navori (navori) in ['/home/damian/Malambo/api/test']
nose.loader: DEBUG: Load from module <module 'navori' from '/home/damian/Malambo/api/test/navori.py'>
nose.selector: DEBUG: wantClass <class 'navori.navoriTest'>? True
nose.selector: DEBUG: wantMethod <unbound method navoriTest.addCleanup>? None
nose.selector: DEBUG: wantMethod <unbound method navoriTest.addTypeEqualityFunc>? None
nose.selector: DEBUG: wantMethod <unbound method navoriTest.assertAlmostEqual>? None
nose.selector: DEBUG: wantMethod <unbound method navoriTest.assertAlmostEqual>? None
nose.selector: DEBUG: wantMethod <unbound method navoriTest.assertDictContainsSubset>? None
nose.selector: DEBUG: wantMethod <unbound method navoriTest.assertDictEqual>? None
nose.selector: DEBUG: wantMethod <unbound method navoriTest.assertEqual>? None
nose.selector: DEBUG: wantMethod <unbound method navoriTest.assertEqual>? None
nose.selector: DEBUG: wantMethod <unbound method navoriTest.assertFalse>? None
nose.selector: DEBUG: wantMethod <unbound method navoriTest.assertGreater>? None
nose.selector: DEBUG: wantMethod <unbound method navoriTest.assertGreaterEqual>? None
nose.selector: DEBUG: wantMethod <unbound method navoriTest.assertIn>? None
nose.selector: DEBUG: wantMethod <unbound method navoriTest.assertIs>? None
nose.selector: DEBUG: wantMethod <unbound method navoriTest.assertIsInstance>? None
nose.selector: DEBUG: wantMethod <unbound method navoriTest.assertIsNone>? None
nose.selector: DEBUG: wantMethod <unbound method navoriTest.assertIsNot>? None
nose.selector: DEBUG: wantMethod <unbound method navoriTest.assertIsNotNone>? None
nose.selector: DEBUG: wantMethod <unbound method navoriTest.assertItemsEqual>? None
nose.selector: DEBUG: wantMethod <unbound method navoriTest.assertLess>? None
nose.selector: DEBUG: wantMethod <unbound method navoriTest.assertLessEqual>? None
nose.selector: DEBUG: wantMethod <unbound method navoriTest.assertListEqual>? None
nose.selector: DEBUG: wantMethod <unbound method navoriTest.assertMultiLineEqual>? None
nose.selector: DEBUG: wantMethod <unbound method navoriTest.assertNotAlmostEqual>? None
nose.selector: DEBUG: wantMethod <unbound method navoriTest.assertNotAlmostEqual>? None
nose.selector: DEBUG: wantMethod <unbound method navoriTest.assertNotEqual>? None
nose.selector: DEBUG: wantMethod <unbound method navoriTest.assertNotEqual>? None
nose.selector: DEBUG: wantMethod <unbound method navoriTest.assertNotIn>? None
nose.selector: DEBUG: wantMethod <unbound method navoriTest.assertNotIsInstance>? None
nose.selector: DEBUG: wantMethod <unbound method navoriTest.assertNotRegexpMatches>? None
nose.selector: DEBUG: wantMethod <unbound method navoriTest.assertRaises>? None
nose.selector: DEBUG: wantMethod <unbound method navoriTest.assertRaisesRegexp>? None
nose.selector: DEBUG: wantMethod <unbound method navoriTest.assertRegexpMatches>? None
nose.selector: DEBUG: wantMethod <unbound method navoriTest.assertSequenceEqual>? None
nose.selector: DEBUG: wantMethod <unbound method navoriTest.assertSetEqual>? None
nose.selector: DEBUG: wantMethod <unbound method navoriTest.assertTrue>? None
nose.selector: DEBUG: wantMethod <unbound method navoriTest.assertTupleEqual>? None
nose.selector: DEBUG: wantMethod <unbound method navoriTest.assertTrue>? None
nose.selector: DEBUG: wantMethod <unbound method navoriTest.countTestCases>? None
nose.selector: DEBUG: wantMethod <unbound method navoriTest.debug>? None
nose.selector: DEBUG: wantMethod <unbound method navoriTest.defaultTestResult>? None
nose.selector: DEBUG: wantMethod <unbound method navoriTest.doCleanups>? None
nose.selector: DEBUG: wantMethod <unbound method navoriTest.fail>? None
nose.selector: DEBUG: wantMethod <unbound method navoriTest.deprecated_func>? None
nose.selector: DEBUG: wantMethod <unbound method navoriTest.deprecated_func>? None
nose.selector: DEBUG: wantMethod <unbound method navoriTest.deprecated_func>? None
nose.selector: DEBUG: wantMethod <unbound method navoriTest.deprecated_func>? None
nose.selector: DEBUG: wantMethod <unbound method navoriTest.deprecated_func>? None
nose.selector: DEBUG: wantMethod <unbound method navoriTest.deprecated_func>? None
nose.selector: DEBUG: wantMethod <unbound method navoriTest.deprecated_func>? None
nose.selector: DEBUG: wantMethod <unbound method navoriTest.id>? None
nose.selector: DEBUG: wantMethod <unbound method navoriTest.run>? None
nose.selector: DEBUG: wantMethod <unbound method navoriTest.setUp>? None
nose.selector: DEBUG: wantMethod <bound method type.setUpClass of <class 'navori.navoriTest'>>? None
nose.selector: DEBUG: wantMethod <unbound method navoriTest.shortDescription>? None
nose.selector: DEBUG: wantMethod <unbound method navoriTest.skipTest>? None
nose.selector: DEBUG: wantMethod <unbound method navoriTest.tearDown>? None
nose.selector: DEBUG: wantMethod <bound method type.tearDownClass of <class 'navori.navoriTest'>>? None
nose.selector: DEBUG: wantMethod <unbound method navoriTest.test_NavoriLogin>? True
nose.suite: DEBUG: Create suite for [<navori.navoriTest testMethod=test_NavoriLogin>]
nose.suite: DEBUG: tests [<navori.navoriTest testMethod=test_NavoriLogin>] context None
nose.suite: DEBUG: wrap [<navori.navoriTest testMethod=test_NavoriLogin>]
nose.suite: DEBUG: wrapping test_NavoriLogin (navori.navoriTest)
nose.suite: DEBUG: Context suite for [Test(<navori.navoriTest testMethod=test_NavoriLogin>)] (<class 'navori.navoriTest'>) (140581480888272)
nose.suite: DEBUG: suite <nose.suite.ContextSuite context=navoriTest> has context navoriTest
nose.suite: DEBUG: get ancestry <class 'navori.navoriTest'>
nose.suite: DEBUG:  <class 'navori.navoriTest'> ancestors ['navori']
nose: DEBUG: __import__ navori
nose: DEBUG: resolve: [], navori, <module 'navori' from '/home/damian/Malambo/api/test/navori.py'>, <module 'navori' from '/home/damian/Malambo/api/test/navori.py'>
nose.suite: DEBUG: suite <nose.suite.ContextSuite context=navoriTest> has ancestor navori
nose.suite: DEBUG: Create suite for <nose.suite.ContextList object at 0x7fdbad3af950>
nose.suite: DEBUG: tests <nose.suite.ContextList object at 0x7fdbad3af950> context <module 'navori' from '/home/damian/Malambo/api/test/navori.py'>
nose.suite: DEBUG: Context suite for <nose.suite.ContextList object at 0x7fdbad3af950> (<module 'navori' from '/home/damian/Malambo/api/test/navori.py'>) (140581480886992)
nose.suite: DEBUG: suite <nose.suite.ContextSuite context=navori> has context navori
nose.suite: DEBUG: get ancestry <module 'navori' from '/home/damian/Malambo/api/test/navori.py'>
nose.suite: DEBUG: Create suite for [<nose.suite.ContextSuite context=navori>]
nose.suite: DEBUG: tests [<nose.suite.ContextSuite context=navori>] context None
nose.suite: DEBUG: wrap [<nose.suite.ContextSuite context=navori>]
nose.suite: DEBUG: wrapping <nose.suite.ContextSuite context=navori>
nose.suite: DEBUG: Context suite for [<nose.suite.ContextSuite context=navori>] (<module 'navori' from '/home/damian/Malambo/api/test/navori.py'>) (140581480887440)
nose.suite: DEBUG: suite <nose.suite.ContextSuite context=navori> has context navori
nose.suite: DEBUG: get ancestry <module 'navori' from '/home/damian/Malambo/api/test/navori.py'>
nose.core: DEBUG: runTests called
nose.suite: DEBUG: suite 140581480887440 (<nose.suite.ContextSuite context=navori>) run called, tests: <generator object _get_wrapped_tests at 0x7fdbaced3500>
nose.suite: DEBUG: suite 140581480887440 setUp called, tests: <generator object _get_wrapped_tests at 0x7fdbaced36e0>
nose.suite: DEBUG: tests in 140581480887440?
nose.suite: DEBUG: ancestor <module 'navori' from '/home/damian/Malambo/api/test/navori.py'> may need setup
nose.suite: DEBUG: ancestor <module 'navori' from '/home/damian/Malambo/api/test/navori.py'> does need setup
nose.suite: DEBUG: <nose.suite.ContextSuite context=navori> setup context <module 'navori' from '/home/damian/Malambo/api/test/navori.py'>
nose.suite: DEBUG: completed suite setup
nose.suite: DEBUG: precache is [<nose.suite.ContextSuite context=navori>]
nose.suite: DEBUG: suite 140581480886992 (<nose.suite.ContextSuite context=navori>) run called, tests: <generator object _get_wrapped_tests at 0x7fdbaced37d0>
nose.suite: DEBUG: suite 140581480886992 setUp called, tests: <generator object _get_wrapped_tests at 0x7fdbaced37d0>
nose.suite: DEBUG: tests in 140581480886992?
nose.suite: DEBUG: ancestor <module 'navori' from '/home/damian/Malambo/api/test/navori.py'> may need setup
nose.suite: DEBUG: completed suite setup
nose.suite: DEBUG: precache is [<nose.suite.ContextSuite context=navoriTest>]
nose.suite: DEBUG: suite 140581480888272 (<nose.suite.ContextSuite context=navoriTest>) run called, tests: <generator object _get_wrapped_tests at 0x7fdbaced38c0>
nose.suite: DEBUG: suite 140581480888272 setUp called, tests: <generator object _get_wrapped_tests at 0x7fdbaced38c0>
nose.suite: DEBUG: tests in 140581480888272?
nose.suite: DEBUG: ancestor <module 'navori' from '/home/damian/Malambo/api/test/navori.py'> may need setup
nose.suite: DEBUG: ancestor <class 'navori.navoriTest'> may need setup
nose.suite: DEBUG: ancestor <class 'navori.navoriTest'> does need setup
nose.suite: DEBUG: <nose.suite.ContextSuite context=navoriTest> setup context <class 'navori.navoriTest'>
nose: DEBUG: call fixture <class 'navori.navoriTest'>.setUpClass
nose.suite: DEBUG: completed suite setup
nose.suite: DEBUG: precache is [Test(<navori.navoriTest testMethod=test_NavoriLogin>)]
nose.suite: DEBUG: context teardown
nose.suite: DEBUG: ancestor <class 'navori.navoriTest'> may need teardown
nose.suite: DEBUG: <nose.suite.ContextSuite context=navoriTest> setup ancestor <class 'navori.navoriTest'>
nose.suite: DEBUG: <nose.suite.ContextSuite context=navoriTest> teardown context <class 'navori.navoriTest'>
nose: DEBUG: call fixture <class 'navori.navoriTest'>.tearDownClass
nose.suite: DEBUG: ancestor <module 'navori' from '/home/damian/Malambo/api/test/navori.py'> may need teardown
nose.suite: DEBUG: <nose.suite.ContextSuite context=navori> setup ancestor <module 'navori' from '/home/damian/Malambo/api/test/navori.py'>
nose.suite: DEBUG: ancestor <class 'navori.navoriTest'> may need teardown
nose.suite: DEBUG: ancestor <class 'navori.navoriTest'> already torn down
nose.suite: DEBUG: context teardown
nose.suite: DEBUG: ancestor <module 'navori' from '/home/damian/Malambo/api/test/navori.py'> may need teardown
nose.suite: DEBUG: <nose.suite.ContextSuite context=navori> setup ancestor <module 'navori' from '/home/damian/Malambo/api/test/navori.py'>
nose.suite: DEBUG: ancestor <module 'navori' from '/home/damian/Malambo/api/test/navori.py'> may need teardown
nose.suite: DEBUG: <nose.suite.ContextSuite context=navori> setup ancestor <module 'navori' from '/home/damian/Malambo/api/test/navori.py'>
nose.suite: DEBUG: context teardown
nose.suite: DEBUG: ancestor <module 'navori' from '/home/damian/Malambo/api/test/navori.py'> may need teardown
nose.suite: DEBUG: <nose.suite.ContextSuite context=navori> setup ancestor <module 'navori' from '/home/damian/Malambo/api/test/navori.py'>
nose.suite: DEBUG: <nose.suite.ContextSuite context=navori> teardown context <module 'navori' from '/home/damian/Malambo/api/test/navori.py'>
nose.suite: DEBUG: ancestor <module 'navori' from '/home/damian/Malambo/api/test/navori.py'> may need teardown
nose.suite: DEBUG: ancestor <module 'navori' from '/home/damian/Malambo/api/test/navori.py'> already torn down
nose.config: INFO: Ignoring files matching ['^\\.', '^_', '^setup\\.py$']
nose.plugins.manager: DEBUG: Configuring plugins
nose.plugins.manager: DEBUG: Plugins enabled: [<nose.plugins.capture.Capture object at 0x7f89e7290410>, <nose.plugins.logcapture.LogCapture object at 0x7f89e72a4810>, <nose.plugins.deprecated.Deprecated object at 0x7f89e72a4d10>, <nose.plugins.skip.Skip object at 0x7f89e6755d50>]
nose.core: DEBUG: configured Config(addPaths=True, args=(), configSection='nosetests', debug='nose,nose.importer', debugLog='nose_debug', env={}, exclude=None, files=[], firstPackageWins=False, getTestCaseNamesCompat=False, ignoreFiles=[<_sre.SRE_Pattern object at 0x7f89e8f00ab0>, <_sre.SRE_Pattern object at 0x7f89e8ea7e30>, <_sre.SRE_Pattern object at 0x7f89e8f9fab0>], ignoreFilesDefaultStrings=['^\\.', '^_', '^setup\\.py$'], include=None, includeExe=False, logStream=<open file '<stderr>', mode 'w' at 0x7f89e8fe71e0>, loggingConfig=None, options=<Values at 0x7f89e67765f0: {'xunit_file': 'nosetests.xml', 'enable_plugin_allmodules': None, 'multiprocess_restartworker': False, 'loggingConfig': None, 'doctestExtension': None, 'doctest_tests': None, 'enable_plugin_xunit': None, 'logcapture_clear': False, 'stopOnError': False, 'enable_plugin_id': None, 'testNames': None, 'doctestOptions': None, 'exclude': [], 'byteCompile': True, 'ignoreFiles': [], 'logcapture': True, 'addPaths': True, 'capture': True, 'xunit_testsuite_name': 'nosetests', 'logcapture_level': 'NOTSET', 'cover_xml': None, 'py3where': None, 'noSkip': False, 'enable_plugin_isolation': None, 'logcapture_filters': None, 'collect_only': None, 'failed': False, 'version': False, 'eval_attr': None, 'include': [], 'enable_plugin_profile': None, 'debugErrors': False, 'files': None, 'cover_tests': None, 'multiprocess_timeout': 10, 'testMatch': '(?:^|[\\b_\\./-])[Tt]est', 'traverseNamespace': False, 'firstPackageWins': False, 'cover_html_dir': 'cover', 'cover_branches': None, 'debugBoth': False, 'noDeprecated': False, 'cover_xml_file': 'coverage.xml', 'showPlugins': False, 'cover_erase': None, 'multiprocess_workers': 0, 'testIdFile': '.noseids', 'enable_plugin_coverage': None, 'attr': None, 'profile_sort': 'cumulative', 'doctestFixtures': None, 'logcapture_datefmt': None, 'cover_packages': None, 'verbosity': 1, 'enable_plugin_doctest': None, 'profile_stats_file': None, 'cover_inclusive': None, 'includeExe': False, 'logcapture_format': '%(name)s: %(levelname)s: %(message)s', 'debugFailures': False, 'detailedErrors': None, 'debugLog': 'nose_debug', 'doctest_result_var': None, 'cover_html': None, 'debug': 'nose,nose.importer', 'cover_min_percentage': None, 'where': None, 'profile_restrict': None}>, parser=<optparse.OptionParser instance at 0x7f89e728df38>, parserClass=<class optparse.OptionParser at 0x7f89e7929f58>, plugins=<nose.plugins.manager.DefaultPluginManager object at 0x7f89e7288ed0>, py3where=(), runOnInit=True, srcDirs=('lib', 'src'), stopOnError=False, stream=<open file '<stderr>', mode 'w' at 0x7f89e8fe71e0>, testMatch=<_sre.SRE_Pattern object at 0x7f89e7293030>, testMatchPat='(?:^|[\\b_\\./-])[Tt]est', testNames=['test/testNavori.py'], traverseNamespace=False, verbosity=1, where=(), worker=False, workingDir='/home/damian/Malambo/api/test')
nose.importer: DEBUG: Add path /home/damian/Malambo/api/test
nose.importer: DEBUG: insert /home/damian/Malambo/api/test into sys.path
nose.core: DEBUG: test loader is <nose.loader.TestLoader object at 0x7f89e677a0d0>
nose.core: DEBUG: defaultTest .
nose.core: DEBUG: Test names are ['test/testNavori.py']
nose.core: DEBUG: createTests called with None
nose.loader: DEBUG: load from test/testNavori.py (None)
nose.selector: DEBUG: Test name test/testNavori.py resolved to file test/testNavori.py, module None, call None
nose.selector: DEBUG: Final resolution of test name test/testNavori.py: file /home/damian/Malambo/api/test/test/testNavori.py module testNavori call None
nose.importer: DEBUG: Import testNavori from /home/damian/Malambo/api/test/test
nose.importer: DEBUG: Add path /home/damian/Malambo/api/test/test
nose.importer: DEBUG: insert /home/damian/Malambo/api/test/test into sys.path
nose.importer: DEBUG: find module part testNavori (testNavori) in ['/home/damian/Malambo/api/test/test']
nose.failure: DEBUG: A failure! <type 'exceptions.ImportError'> No module named testNavori ['  File "/usr/local/lib/python2.7/dist-packages/nose/loader.py", line 418, in loadTestsFromName\n    addr.filename, addr.module)\n', '  File "/usr/local/lib/python2.7/dist-packages/nose/importer.py", line 47, in importFromPath\n    return self.importFromDir(dir_path, fqname)\n', '  File "/usr/local/lib/python2.7/dist-packages/nose/importer.py", line 79, in importFromDir\n    fh, filename, desc = find_module(part, path)\n']
nose.suite: DEBUG: Create suite for [<nose.failure.Failure testMethod=runTest>]
nose.suite: DEBUG: tests [<nose.failure.Failure testMethod=runTest>] context None
nose.suite: DEBUG: wrap [<nose.failure.Failure testMethod=runTest>]
nose.suite: DEBUG: wrapping Failure: ImportError (No module named testNavori)
nose.suite: DEBUG: Context suite for [Test(<nose.failure.Failure testMethod=runTest>)] (<class 'nose.failure.Failure'>) (140230248781392)
nose.suite: DEBUG: suite <nose.suite.ContextSuite context=Failure> has context Failure
nose.suite: DEBUG: get ancestry <class 'nose.failure.Failure'>
nose.suite: DEBUG:  <class 'nose.failure.Failure'> ancestors ['nose', 'failure']
nose: DEBUG: __import__ nose.failure
nose: DEBUG: resolve: ['failure'], nose.failure, <module 'nose' from '/usr/local/lib/python2.7/dist-packages/nose/__init__.pyc'>, <module 'nose' from '/usr/local/lib/python2.7/dist-packages/nose/__init__.pyc'>
nose.suite: DEBUG: suite <nose.suite.ContextSuite context=Failure> has ancestor nose.failure
nose.suite: DEBUG:  <class 'nose.failure.Failure'> ancestors ['nose']
nose: DEBUG: __import__ nose
nose: DEBUG: resolve: [], nose, <module 'nose' from '/usr/local/lib/python2.7/dist-packages/nose/__init__.pyc'>, <module 'nose' from '/usr/local/lib/python2.7/dist-packages/nose/__init__.pyc'>
nose.suite: DEBUG: suite <nose.suite.ContextSuite context=Failure> has ancestor nose
nose.suite: DEBUG: Create suite for [<nose.suite.ContextSuite context=Failure>]
nose.suite: DEBUG: tests [<nose.suite.ContextSuite context=Failure>] context None
nose.suite: DEBUG: wrap [<nose.suite.ContextSuite context=Failure>]
nose.suite: DEBUG: wrapping <nose.suite.ContextSuite context=Failure>
nose.suite: DEBUG: Context suite for [<nose.suite.ContextSuite context=Failure>] (<class 'nose.failure.Failure'>) (140230253847696)
nose.suite: DEBUG: suite <nose.suite.ContextSuite context=Failure> has context Failure
nose.suite: DEBUG: get ancestry <class 'nose.failure.Failure'>
nose.suite: DEBUG:  <class 'nose.failure.Failure'> ancestors ['nose', 'failure']
nose: DEBUG: __import__ nose.failure
nose: DEBUG: resolve: ['failure'], nose.failure, <module 'nose' from '/usr/local/lib/python2.7/dist-packages/nose/__init__.pyc'>, <module 'nose' from '/usr/local/lib/python2.7/dist-packages/nose/__init__.pyc'>
nose.suite: DEBUG: suite <nose.suite.ContextSuite context=Failure> has ancestor nose.failure
nose.suite: DEBUG:  <class 'nose.failure.Failure'> ancestors ['nose']
nose: DEBUG: __import__ nose
nose: DEBUG: resolve: [], nose, <module 'nose' from '/usr/local/lib/python2.7/dist-packages/nose/__init__.pyc'>, <module 'nose' from '/usr/local/lib/python2.7/dist-packages/nose/__init__.pyc'>
nose.suite: DEBUG: suite <nose.suite.ContextSuite context=Failure> has ancestor nose
nose.core: DEBUG: runTests called
nose.suite: DEBUG: suite 140230253847696 (<nose.suite.ContextSuite context=Failure>) run called, tests: <generator object _get_wrapped_tests at 0x7f89e62ad320>
nose.suite: DEBUG: suite 140230253847696 setUp called, tests: <generator object _get_wrapped_tests at 0x7f89e62ad500>
nose.suite: DEBUG: tests in 140230253847696?
nose.suite: DEBUG: ancestor <module 'nose' from '/usr/local/lib/python2.7/dist-packages/nose/__init__.pyc'> may need setup
nose.suite: DEBUG: ancestor <module 'nose' from '/usr/local/lib/python2.7/dist-packages/nose/__init__.pyc'> does need setup
nose.suite: DEBUG: <nose.suite.ContextSuite context=Failure> setup context <module 'nose' from '/usr/local/lib/python2.7/dist-packages/nose/__init__.pyc'>
nose.suite: DEBUG: ancestor <module 'nose.failure' from '/usr/local/lib/python2.7/dist-packages/nose/failure.pyc'> may need setup
nose.suite: DEBUG: ancestor <module 'nose.failure' from '/usr/local/lib/python2.7/dist-packages/nose/failure.pyc'> does need setup
nose.suite: DEBUG: <nose.suite.ContextSuite context=Failure> setup context <module 'nose.failure' from '/usr/local/lib/python2.7/dist-packages/nose/failure.pyc'>
nose.suite: DEBUG: ancestor <class 'nose.failure.Failure'> may need setup
nose.suite: DEBUG: ancestor <class 'nose.failure.Failure'> does need setup
nose.suite: DEBUG: <nose.suite.ContextSuite context=Failure> setup context <class 'nose.failure.Failure'>
nose: DEBUG: call fixture <class 'nose.failure.Failure'>.setUpClass
nose.suite: DEBUG: completed suite setup
nose.suite: DEBUG: precache is [<nose.suite.ContextSuite context=Failure>]
nose.suite: DEBUG: suite 140230248781392 (<nose.suite.ContextSuite context=Failure>) run called, tests: <generator object _get_wrapped_tests at 0x7f89e62ad5f0>
nose.suite: DEBUG: suite 140230248781392 setUp called, tests: <generator object _get_wrapped_tests at 0x7f89e62ad5f0>
nose.suite: DEBUG: tests in 140230248781392?
nose.suite: DEBUG: ancestor <module 'nose' from '/usr/local/lib/python2.7/dist-packages/nose/__init__.pyc'> may need setup
nose.suite: DEBUG: ancestor <module 'nose.failure' from '/usr/local/lib/python2.7/dist-packages/nose/failure.pyc'> may need setup
nose.suite: DEBUG: ancestor <class 'nose.failure.Failure'> may need setup
nose.suite: DEBUG: completed suite setup
nose.suite: DEBUG: precache is [Test(<nose.failure.Failure testMethod=runTest>)]
nose.suite: DEBUG: context teardown
nose.suite: DEBUG: ancestor <class 'nose.failure.Failure'> may need teardown
nose.suite: DEBUG: <nose.suite.ContextSuite context=Failure> setup ancestor <class 'nose.failure.Failure'>
nose.suite: DEBUG: ancestor <module 'nose.failure' from '/usr/local/lib/python2.7/dist-packages/nose/failure.pyc'> may need teardown
nose.suite: DEBUG: <nose.suite.ContextSuite context=Failure> setup ancestor <module 'nose.failure' from '/usr/local/lib/python2.7/dist-packages/nose/failure.pyc'>
nose.suite: DEBUG: ancestor <module 'nose' from '/usr/local/lib/python2.7/dist-packages/nose/__init__.pyc'> may need teardown
nose.suite: DEBUG: <nose.suite.ContextSuite context=Failure> setup ancestor <module 'nose' from '/usr/local/lib/python2.7/dist-packages/nose/__init__.pyc'>
nose.suite: DEBUG: ancestor <class 'nose.failure.Failure'> may need teardown
nose.suite: DEBUG: <nose.suite.ContextSuite context=Failure> setup ancestor <class 'nose.failure.Failure'>
nose.suite: DEBUG: context teardown
nose.suite: DEBUG: ancestor <class 'nose.failure.Failure'> may need teardown
nose.suite: DEBUG: <nose.suite.ContextSuite context=Failure> setup ancestor <class 'nose.failure.Failure'>
nose.suite: DEBUG: <nose.suite.ContextSuite context=Failure> teardown context <class 'nose.failure.Failure'>
nose: DEBUG: call fixture <class 'nose.failure.Failure'>.tearDownClass
nose.suite: DEBUG: ancestor <module 'nose.failure' from '/usr/local/lib/python2.7/dist-packages/nose/failure.pyc'> may need teardown
nose.suite: DEBUG: <nose.suite.ContextSuite context=Failure> setup ancestor <module 'nose.failure' from '/usr/local/lib/python2.7/dist-packages/nose/failure.pyc'>
nose.suite: DEBUG: <nose.suite.ContextSuite context=Failure> teardown context <module 'nose.failure' from '/usr/local/lib/python2.7/dist-packages/nose/failure.pyc'>
nose.suite: DEBUG: ancestor <module 'nose' from '/usr/local/lib/python2.7/dist-packages/nose/__init__.pyc'> may need teardown
nose.suite: DEBUG: <nose.suite.ContextSuite context=Failure> setup ancestor <module 'nose' from '/usr/local/lib/python2.7/dist-packages/nose/__init__.pyc'>
nose.suite: DEBUG: <nose.suite.ContextSuite context=Failure> teardown context <module 'nose' from '/usr/local/lib/python2.7/dist-packages/nose/__init__.pyc'>
nose.suite: DEBUG: ancestor <class 'nose.failure.Failure'> may need teardown
nose.suite: DEBUG: ancestor <class 'nose.failure.Failure'> already torn down
nose.config: INFO: Ignoring files matching ['^\\.', '^_', '^setup\\.py$']
nose.plugins.manager: DEBUG: Configuring plugins
nose.plugins.manager: DEBUG: Plugins enabled: [<nose.plugins.capture.Capture object at 0x7fc6b5c65410>, <nose.plugins.logcapture.LogCapture object at 0x7fc6b5c79810>, <nose.plugins.deprecated.Deprecated object at 0x7fc6b5c79d10>, <nose.plugins.skip.Skip object at 0x7fc6b512ad50>]
nose.core: DEBUG: configured Config(addPaths=True, args=(), configSection='nosetests', debug='nose,nose.importer', debugLog='nose_debug', env={}, exclude=None, files=[], firstPackageWins=False, getTestCaseNamesCompat=False, ignoreFiles=[<_sre.SRE_Pattern object at 0x7fc6b78d5ab0>, <_sre.SRE_Pattern object at 0x7fc6b787ce30>, <_sre.SRE_Pattern object at 0x7fc6b7974ab0>], ignoreFilesDefaultStrings=['^\\.', '^_', '^setup\\.py$'], include=None, includeExe=False, logStream=<open file '<stderr>', mode 'w' at 0x7fc6b79bc1e0>, loggingConfig=None, options=<Values at 0x7fc6b514b5f0: {'xunit_file': 'nosetests.xml', 'enable_plugin_allmodules': None, 'multiprocess_restartworker': False, 'loggingConfig': None, 'doctestExtension': None, 'doctest_tests': None, 'enable_plugin_xunit': None, 'logcapture_clear': False, 'stopOnError': False, 'enable_plugin_id': None, 'testNames': None, 'doctestOptions': None, 'exclude': [], 'byteCompile': True, 'ignoreFiles': [], 'logcapture': True, 'addPaths': True, 'capture': True, 'xunit_testsuite_name': 'nosetests', 'logcapture_level': 'NOTSET', 'cover_xml': None, 'py3where': None, 'noSkip': False, 'enable_plugin_isolation': None, 'logcapture_filters': None, 'collect_only': None, 'failed': False, 'version': False, 'eval_attr': None, 'include': [], 'enable_plugin_profile': None, 'debugErrors': False, 'files': None, 'cover_tests': None, 'multiprocess_timeout': 10, 'testMatch': '(?:^|[\\b_\\./-])[Tt]est', 'traverseNamespace': False, 'firstPackageWins': False, 'cover_html_dir': 'cover', 'cover_branches': None, 'debugBoth': False, 'noDeprecated': False, 'cover_xml_file': 'coverage.xml', 'showPlugins': False, 'cover_erase': None, 'multiprocess_workers': 0, 'testIdFile': '.noseids', 'enable_plugin_coverage': None, 'attr': None, 'profile_sort': 'cumulative', 'doctestFixtures': None, 'logcapture_datefmt': None, 'cover_packages': None, 'verbosity': 1, 'enable_plugin_doctest': None, 'profile_stats_file': None, 'cover_inclusive': None, 'includeExe': False, 'logcapture_format': '%(name)s: %(levelname)s: %(message)s', 'debugFailures': False, 'detailedErrors': None, 'debugLog': 'nose_debug', 'doctest_result_var': None, 'cover_html': None, 'debug': 'nose,nose.importer', 'cover_min_percentage': None, 'where': None, 'profile_restrict': None}>, parser=<optparse.OptionParser instance at 0x7fc6b5c62f38>, parserClass=<class optparse.OptionParser at 0x7fc6b62fef58>, plugins=<nose.plugins.manager.DefaultPluginManager object at 0x7fc6b5c5ded0>, py3where=(), runOnInit=True, srcDirs=('lib', 'src'), stopOnError=False, stream=<open file '<stderr>', mode 'w' at 0x7fc6b79bc1e0>, testMatch=<_sre.SRE_Pattern object at 0x7fc6b5c68030>, testMatchPat='(?:^|[\\b_\\./-])[Tt]est', testNames=['test_navori.py'], traverseNamespace=False, verbosity=1, where=(), worker=False, workingDir='/home/damian/Malambo/api/test')
nose.importer: DEBUG: Add path /home/damian/Malambo/api/test
nose.importer: DEBUG: insert /home/damian/Malambo/api/test into sys.path
nose.core: DEBUG: test loader is <nose.loader.TestLoader object at 0x7fc6b514f0d0>
nose.core: DEBUG: defaultTest .
nose.core: DEBUG: Test names are ['test_navori.py']
nose.core: DEBUG: createTests called with None
nose.loader: DEBUG: load from test_navori.py (None)
nose.selector: DEBUG: Test name test_navori.py resolved to file test_navori.py, module None, call None
nose.selector: DEBUG: Final resolution of test name test_navori.py: file /home/damian/Malambo/api/test/test_navori.py module test_navori call None
nose.importer: DEBUG: Import test_navori from /home/damian/Malambo/api/test
nose.importer: DEBUG: Add path /home/damian/Malambo/api/test
nose.importer: DEBUG: find module part test_navori (test_navori) in ['/home/damian/Malambo/api/test']
nose.failure: DEBUG: A failure! <type 'exceptions.ImportError'> No module named navori ['  File "/usr/local/lib/python2.7/dist-packages/nose/loader.py", line 418, in loadTestsFromName\n    addr.filename, addr.module)\n', '  File "/usr/local/lib/python2.7/dist-packages/nose/importer.py", line 47, in importFromPath\n    return self.importFromDir(dir_path, fqname)\n', '  File "/usr/local/lib/python2.7/dist-packages/nose/importer.py", line 94, in importFromDir\n    mod = load_module(part_fqname, fh, filename, desc)\n', '  File "/home/damian/Malambo/api/test/test_navori.py", line 2, in <module>\n    import navori\n']
nose.suite: DEBUG: Create suite for [<nose.failure.Failure testMethod=runTest>]
nose.suite: DEBUG: tests [<nose.failure.Failure testMethod=runTest>] context None
nose.suite: DEBUG: wrap [<nose.failure.Failure testMethod=runTest>]
nose.suite: DEBUG: wrapping Failure: ImportError (No module named navori)
nose.suite: DEBUG: Context suite for [Test(<nose.failure.Failure testMethod=runTest>)] (<class 'nose.failure.Failure'>) (140491413247568)
nose.suite: DEBUG: suite <nose.suite.ContextSuite context=Failure> has context Failure
nose.suite: DEBUG: get ancestry <class 'nose.failure.Failure'>
nose.suite: DEBUG:  <class 'nose.failure.Failure'> ancestors ['nose', 'failure']
nose: DEBUG: __import__ nose.failure
nose: DEBUG: resolve: ['failure'], nose.failure, <module 'nose' from '/usr/local/lib/python2.7/dist-packages/nose/__init__.pyc'>, <module 'nose' from '/usr/local/lib/python2.7/dist-packages/nose/__init__.pyc'>
nose.suite: DEBUG: suite <nose.suite.ContextSuite context=Failure> has ancestor nose.failure
nose.suite: DEBUG:  <class 'nose.failure.Failure'> ancestors ['nose']
nose: DEBUG: __import__ nose
nose: DEBUG: resolve: [], nose, <module 'nose' from '/usr/local/lib/python2.7/dist-packages/nose/__init__.pyc'>, <module 'nose' from '/usr/local/lib/python2.7/dist-packages/nose/__init__.pyc'>
nose.suite: DEBUG: suite <nose.suite.ContextSuite context=Failure> has ancestor nose
nose.suite: DEBUG: Create suite for [<nose.suite.ContextSuite context=Failure>]
nose.suite: DEBUG: tests [<nose.suite.ContextSuite context=Failure>] context None
nose.suite: DEBUG: wrap [<nose.suite.ContextSuite context=Failure>]
nose.suite: DEBUG: wrapping <nose.suite.ContextSuite context=Failure>
nose.suite: DEBUG: Context suite for [<nose.suite.ContextSuite context=Failure>] (<class 'nose.failure.Failure'>) (140491418301584)
nose.suite: DEBUG: suite <nose.suite.ContextSuite context=Failure> has context Failure
nose.suite: DEBUG: get ancestry <class 'nose.failure.Failure'>
nose.suite: DEBUG:  <class 'nose.failure.Failure'> ancestors ['nose', 'failure']
nose: DEBUG: __import__ nose.failure
nose: DEBUG: resolve: ['failure'], nose.failure, <module 'nose' from '/usr/local/lib/python2.7/dist-packages/nose/__init__.pyc'>, <module 'nose' from '/usr/local/lib/python2.7/dist-packages/nose/__init__.pyc'>
nose.suite: DEBUG: suite <nose.suite.ContextSuite context=Failure> has ancestor nose.failure
nose.suite: DEBUG:  <class 'nose.failure.Failure'> ancestors ['nose']
nose: DEBUG: __import__ nose
nose: DEBUG: resolve: [], nose, <module 'nose' from '/usr/local/lib/python2.7/dist-packages/nose/__init__.pyc'>, <module 'nose' from '/usr/local/lib/python2.7/dist-packages/nose/__init__.pyc'>
nose.suite: DEBUG: suite <nose.suite.ContextSuite context=Failure> has ancestor nose
nose.core: DEBUG: runTests called
nose.suite: DEBUG: suite 140491418301584 (<nose.suite.ContextSuite context=Failure>) run called, tests: <generator object _get_wrapped_tests at 0x7fc6b4c84460>
nose.suite: DEBUG: suite 140491418301584 setUp called, tests: <generator object _get_wrapped_tests at 0x7fc6b4c84640>
nose.suite: DEBUG: tests in 140491418301584?
nose.suite: DEBUG: ancestor <module 'nose' from '/usr/local/lib/python2.7/dist-packages/nose/__init__.pyc'> may need setup
nose.suite: DEBUG: ancestor <module 'nose' from '/usr/local/lib/python2.7/dist-packages/nose/__init__.pyc'> does need setup
nose.suite: DEBUG: <nose.suite.ContextSuite context=Failure> setup context <module 'nose' from '/usr/local/lib/python2.7/dist-packages/nose/__init__.pyc'>
nose.suite: DEBUG: ancestor <module 'nose.failure' from '/usr/local/lib/python2.7/dist-packages/nose/failure.pyc'> may need setup
nose.suite: DEBUG: ancestor <module 'nose.failure' from '/usr/local/lib/python2.7/dist-packages/nose/failure.pyc'> does need setup
nose.suite: DEBUG: <nose.suite.ContextSuite context=Failure> setup context <module 'nose.failure' from '/usr/local/lib/python2.7/dist-packages/nose/failure.pyc'>
nose.suite: DEBUG: ancestor <class 'nose.failure.Failure'> may need setup
nose.suite: DEBUG: ancestor <class 'nose.failure.Failure'> does need setup
nose.suite: DEBUG: <nose.suite.ContextSuite context=Failure> setup context <class 'nose.failure.Failure'>
nose: DEBUG: call fixture <class 'nose.failure.Failure'>.setUpClass
nose.suite: DEBUG: completed suite setup
nose.suite: DEBUG: precache is [<nose.suite.ContextSuite context=Failure>]
nose.suite: DEBUG: suite 140491413247568 (<nose.suite.ContextSuite context=Failure>) run called, tests: <generator object _get_wrapped_tests at 0x7fc6b4c84730>
nose.suite: DEBUG: suite 140491413247568 setUp called, tests: <generator object _get_wrapped_tests at 0x7fc6b4c84730>
nose.suite: DEBUG: tests in 140491413247568?
nose.suite: DEBUG: ancestor <module 'nose' from '/usr/local/lib/python2.7/dist-packages/nose/__init__.pyc'> may need setup
nose.suite: DEBUG: ancestor <module 'nose.failure' from '/usr/local/lib/python2.7/dist-packages/nose/failure.pyc'> may need setup
nose.suite: DEBUG: ancestor <class 'nose.failure.Failure'> may need setup
nose.suite: DEBUG: completed suite setup
nose.suite: DEBUG: precache is [Test(<nose.failure.Failure testMethod=runTest>)]
nose.suite: DEBUG: context teardown
nose.suite: DEBUG: ancestor <class 'nose.failure.Failure'> may need teardown
nose.suite: DEBUG: <nose.suite.ContextSuite context=Failure> setup ancestor <class 'nose.failure.Failure'>
nose.suite: DEBUG: ancestor <module 'nose.failure' from '/usr/local/lib/python2.7/dist-packages/nose/failure.pyc'> may need teardown
nose.suite: DEBUG: <nose.suite.ContextSuite context=Failure> setup ancestor <module 'nose.failure' from '/usr/local/lib/python2.7/dist-packages/nose/failure.pyc'>
nose.suite: DEBUG: ancestor <module 'nose' from '/usr/local/lib/python2.7/dist-packages/nose/__init__.pyc'> may need teardown
nose.suite: DEBUG: <nose.suite.ContextSuite context=Failure> setup ancestor <module 'nose' from '/usr/local/lib/python2.7/dist-packages/nose/__init__.pyc'>
nose.suite: DEBUG: ancestor <class 'nose.failure.Failure'> may need teardown
nose.suite: DEBUG: <nose.suite.ContextSuite context=Failure> setup ancestor <class 'nose.failure.Failure'>
nose.suite: DEBUG: context teardown
nose.suite: DEBUG: ancestor <class 'nose.failure.Failure'> may need teardown
nose.suite: DEBUG: <nose.suite.ContextSuite context=Failure> setup ancestor <class 'nose.failure.Failure'>
nose.suite: DEBUG: <nose.suite.ContextSuite context=Failure> teardown context <class 'nose.failure.Failure'>
nose: DEBUG: call fixture <class 'nose.failure.Failure'>.tearDownClass
nose.suite: DEBUG: ancestor <module 'nose.failure' from '/usr/local/lib/python2.7/dist-packages/nose/failure.pyc'> may need teardown
nose.suite: DEBUG: <nose.suite.ContextSuite context=Failure> setup ancestor <module 'nose.failure' from '/usr/local/lib/python2.7/dist-packages/nose/failure.pyc'>
nose.suite: DEBUG: <nose.suite.ContextSuite context=Failure> teardown context <module 'nose.failure' from '/usr/local/lib/python2.7/dist-packages/nose/failure.pyc'>
nose.suite: DEBUG: ancestor <module 'nose' from '/usr/local/lib/python2.7/dist-packages/nose/__init__.pyc'> may need teardown
nose.suite: DEBUG: <nose.suite.ContextSuite context=Failure> setup ancestor <module 'nose' from '/usr/local/lib/python2.7/dist-packages/nose/__init__.pyc'>
nose.suite: DEBUG: <nose.suite.ContextSuite context=Failure> teardown context <module 'nose' from '/usr/local/lib/python2.7/dist-packages/nose/__init__.pyc'>
nose.suite: DEBUG: ancestor <class 'nose.failure.Failure'> may need teardown
nose.suite: DEBUG: ancestor <class 'nose.failure.Failure'> already torn down
nose.config: INFO: Ignoring files matching ['^\\.', '^_', '^setup\\.py$']
nose.plugins.manager: DEBUG: Configuring plugins
nose.plugins.manager: DEBUG: Plugins enabled: [<nose.plugins.capture.Capture object at 0x7fe4b0c1e410>, <nose.plugins.logcapture.LogCapture object at 0x7fe4b0c32810>, <nose.plugins.deprecated.Deprecated object at 0x7fe4b0c32d10>, <nose.plugins.skip.Skip object at 0x7fe4b00e3d50>]
nose.core: DEBUG: configured Config(addPaths=True, args=(), configSection='nosetests', debug='nose,nose.importer', debugLog='nose_debug', env={}, exclude=None, files=[], firstPackageWins=False, getTestCaseNamesCompat=False, ignoreFiles=[<_sre.SRE_Pattern object at 0x7fe4b288eab0>, <_sre.SRE_Pattern object at 0x7fe4b2835e30>, <_sre.SRE_Pattern object at 0x7fe4b292dab0>], ignoreFilesDefaultStrings=['^\\.', '^_', '^setup\\.py$'], include=None, includeExe=False, logStream=<open file '<stderr>', mode 'w' at 0x7fe4b29751e0>, loggingConfig=None, options=<Values at 0x7fe4b01045f0: {'xunit_file': 'nosetests.xml', 'enable_plugin_allmodules': None, 'multiprocess_restartworker': False, 'loggingConfig': None, 'doctestExtension': None, 'doctest_tests': None, 'enable_plugin_xunit': None, 'logcapture_clear': False, 'stopOnError': False, 'enable_plugin_id': None, 'testNames': None, 'doctestOptions': None, 'exclude': [], 'byteCompile': True, 'ignoreFiles': [], 'logcapture': True, 'addPaths': True, 'capture': True, 'xunit_testsuite_name': 'nosetests', 'logcapture_level': 'NOTSET', 'cover_xml': None, 'py3where': None, 'noSkip': False, 'enable_plugin_isolation': None, 'logcapture_filters': None, 'collect_only': None, 'failed': False, 'version': False, 'eval_attr': None, 'include': [], 'enable_plugin_profile': None, 'debugErrors': False, 'files': None, 'cover_tests': None, 'multiprocess_timeout': 10, 'testMatch': '(?:^|[\\b_\\./-])[Tt]est', 'traverseNamespace': False, 'firstPackageWins': False, 'cover_html_dir': 'cover', 'cover_branches': None, 'debugBoth': False, 'noDeprecated': False, 'cover_xml_file': 'coverage.xml', 'showPlugins': False, 'cover_erase': None, 'multiprocess_workers': 0, 'testIdFile': '.noseids', 'enable_plugin_coverage': None, 'attr': None, 'profile_sort': 'cumulative', 'doctestFixtures': None, 'logcapture_datefmt': None, 'cover_packages': None, 'verbosity': 1, 'enable_plugin_doctest': None, 'profile_stats_file': None, 'cover_inclusive': None, 'includeExe': False, 'logcapture_format': '%(name)s: %(levelname)s: %(message)s', 'debugFailures': False, 'detailedErrors': None, 'debugLog': 'nose_debug', 'doctest_result_var': None, 'cover_html': None, 'debug': 'nose,nose.importer', 'cover_min_percentage': None, 'where': None, 'profile_restrict': None}>, parser=<optparse.OptionParser instance at 0x7fe4b0c1bf38>, parserClass=<class optparse.OptionParser at 0x7fe4b12b7f58>, plugins=<nose.plugins.manager.DefaultPluginManager object at 0x7fe4b0c16ed0>, py3where=(), runOnInit=True, srcDirs=('lib', 'src'), stopOnError=False, stream=<open file '<stderr>', mode 'w' at 0x7fe4b29751e0>, testMatch=<_sre.SRE_Pattern object at 0x7fe4b0c21030>, testMatchPat='(?:^|[\\b_\\./-])[Tt]est', testNames=['test_navori.py'], traverseNamespace=False, verbosity=1, where=(), worker=False, workingDir='/home/damian/Malambo/api/test')
nose.importer: DEBUG: Add path /home/damian/Malambo/api/test
nose.importer: DEBUG: insert /home/damian/Malambo/api/test into sys.path
nose.core: DEBUG: test loader is <nose.loader.TestLoader object at 0x7fe4b01080d0>
nose.core: DEBUG: defaultTest .
nose.core: DEBUG: Test names are ['test_navori.py']
nose.core: DEBUG: createTests called with None
nose.loader: DEBUG: load from test_navori.py (None)
nose.selector: DEBUG: Test name test_navori.py resolved to file test_navori.py, module None, call None
nose.selector: DEBUG: Final resolution of test name test_navori.py: file /home/damian/Malambo/api/test/test_navori.py module test_navori call None
nose.importer: DEBUG: Import test_navori from /home/damian/Malambo/api/test
nose.importer: DEBUG: Add path /home/damian/Malambo/api/test
nose.importer: DEBUG: find module part test_navori (test_navori) in ['/home/damian/Malambo/api/test']
nose.loader: DEBUG: Load from module <module 'test_navori' from '/home/damian/Malambo/api/test/test_navori.py'>
nose.selector: DEBUG: wantClass <class 'test_navori.NavoriTest'>? True
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.addCleanup>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.addTypeEqualityFunc>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.assertAlmostEqual>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.assertAlmostEqual>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.assertDictContainsSubset>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.assertDictEqual>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.assertEqual>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.assertEqual>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.assertFalse>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.assertGreater>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.assertGreaterEqual>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.assertIn>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.assertIs>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.assertIsInstance>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.assertIsNone>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.assertIsNot>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.assertIsNotNone>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.assertItemsEqual>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.assertLess>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.assertLessEqual>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.assertListEqual>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.assertMultiLineEqual>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.assertNotAlmostEqual>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.assertNotAlmostEqual>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.assertNotEqual>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.assertNotEqual>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.assertNotIn>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.assertNotIsInstance>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.assertNotRegexpMatches>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.assertRaises>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.assertRaisesRegexp>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.assertRegexpMatches>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.assertSequenceEqual>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.assertSetEqual>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.assertTrue>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.assertTupleEqual>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.assertTrue>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.countTestCases>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.debug>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.defaultTestResult>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.doCleanups>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.fail>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.deprecated_func>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.deprecated_func>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.deprecated_func>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.deprecated_func>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.deprecated_func>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.deprecated_func>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.deprecated_func>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.id>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.run>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.setUp>? None
nose.selector: DEBUG: wantMethod <bound method type.setUpClass of <class 'test_navori.NavoriTest'>>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.shortDescription>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.skipTest>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.tearDown>? None
nose.selector: DEBUG: wantMethod <bound method type.tearDownClass of <class 'test_navori.NavoriTest'>>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.test_NavoriLogin>? True
nose.suite: DEBUG: Create suite for [<test_navori.NavoriTest testMethod=test_NavoriLogin>]
nose.suite: DEBUG: tests [<test_navori.NavoriTest testMethod=test_NavoriLogin>] context None
nose.suite: DEBUG: wrap [<test_navori.NavoriTest testMethod=test_NavoriLogin>]
nose.suite: DEBUG: wrapping test_NavoriLogin (test_navori.NavoriTest)
nose.suite: DEBUG: Context suite for [Test(<test_navori.NavoriTest testMethod=test_NavoriLogin>)] (<class 'test_navori.NavoriTest'>) (140620183144400)
nose.suite: DEBUG: suite <nose.suite.ContextSuite context=NavoriTest> has context NavoriTest
nose.suite: DEBUG: get ancestry <class 'test_navori.NavoriTest'>
nose.suite: DEBUG:  <class 'test_navori.NavoriTest'> ancestors ['test_navori']
nose: DEBUG: __import__ test_navori
nose: DEBUG: resolve: [], test_navori, <module 'test_navori' from '/home/damian/Malambo/api/test/test_navori.py'>, <module 'test_navori' from '/home/damian/Malambo/api/test/test_navori.py'>
nose.suite: DEBUG: suite <nose.suite.ContextSuite context=NavoriTest> has ancestor test_navori
nose.suite: DEBUG: Create suite for <nose.suite.ContextList object at 0x7fe4b0108990>
nose.suite: DEBUG: tests <nose.suite.ContextList object at 0x7fe4b0108990> context <module 'test_navori' from '/home/damian/Malambo/api/test/test_navori.py'>
nose.suite: DEBUG: Context suite for <nose.suite.ContextList object at 0x7fe4b0108990> (<module 'test_navori' from '/home/damian/Malambo/api/test/test_navori.py'>) (140620183143632)
nose.suite: DEBUG: suite <nose.suite.ContextSuite context=test_navori> has context test_navori
nose.suite: DEBUG: get ancestry <module 'test_navori' from '/home/damian/Malambo/api/test/test_navori.py'>
nose.suite: DEBUG: Create suite for [<nose.suite.ContextSuite context=test_navori>]
nose.suite: DEBUG: tests [<nose.suite.ContextSuite context=test_navori>] context None
nose.suite: DEBUG: wrap [<nose.suite.ContextSuite context=test_navori>]
nose.suite: DEBUG: wrapping <nose.suite.ContextSuite context=test_navori>
nose.suite: DEBUG: Context suite for [<nose.suite.ContextSuite context=test_navori>] (<module 'test_navori' from '/home/damian/Malambo/api/test/test_navori.py'>) (140620183143568)
nose.suite: DEBUG: suite <nose.suite.ContextSuite context=test_navori> has context test_navori
nose.suite: DEBUG: get ancestry <module 'test_navori' from '/home/damian/Malambo/api/test/test_navori.py'>
nose.core: DEBUG: runTests called
nose.suite: DEBUG: suite 140620183143568 (<nose.suite.ContextSuite context=test_navori>) run called, tests: <generator object _get_wrapped_tests at 0x7fe4afc2f460>
nose.suite: DEBUG: suite 140620183143568 setUp called, tests: <generator object _get_wrapped_tests at 0x7fe4afc2f640>
nose.suite: DEBUG: tests in 140620183143568?
nose.suite: DEBUG: ancestor <module 'test_navori' from '/home/damian/Malambo/api/test/test_navori.py'> may need setup
nose.suite: DEBUG: ancestor <module 'test_navori' from '/home/damian/Malambo/api/test/test_navori.py'> does need setup
nose.suite: DEBUG: <nose.suite.ContextSuite context=test_navori> setup context <module 'test_navori' from '/home/damian/Malambo/api/test/test_navori.py'>
nose.suite: DEBUG: completed suite setup
nose.suite: DEBUG: precache is [<nose.suite.ContextSuite context=test_navori>]
nose.suite: DEBUG: suite 140620183143632 (<nose.suite.ContextSuite context=test_navori>) run called, tests: <generator object _get_wrapped_tests at 0x7fe4afc2f730>
nose.suite: DEBUG: suite 140620183143632 setUp called, tests: <generator object _get_wrapped_tests at 0x7fe4afc2f730>
nose.suite: DEBUG: tests in 140620183143632?
nose.suite: DEBUG: ancestor <module 'test_navori' from '/home/damian/Malambo/api/test/test_navori.py'> may need setup
nose.suite: DEBUG: completed suite setup
nose.suite: DEBUG: precache is [<nose.suite.ContextSuite context=NavoriTest>]
nose.suite: DEBUG: suite 140620183144400 (<nose.suite.ContextSuite context=NavoriTest>) run called, tests: <generator object _get_wrapped_tests at 0x7fe4afc2f820>
nose.suite: DEBUG: suite 140620183144400 setUp called, tests: <generator object _get_wrapped_tests at 0x7fe4afc2f820>
nose.suite: DEBUG: tests in 140620183144400?
nose.suite: DEBUG: ancestor <module 'test_navori' from '/home/damian/Malambo/api/test/test_navori.py'> may need setup
nose.suite: DEBUG: ancestor <class 'test_navori.NavoriTest'> may need setup
nose.suite: DEBUG: ancestor <class 'test_navori.NavoriTest'> does need setup
nose.suite: DEBUG: <nose.suite.ContextSuite context=NavoriTest> setup context <class 'test_navori.NavoriTest'>
nose: DEBUG: call fixture <class 'test_navori.NavoriTest'>.setUpClass
nose.suite: DEBUG: completed suite setup
nose.suite: DEBUG: precache is [Test(<test_navori.NavoriTest testMethod=test_NavoriLogin>)]
nose.suite: DEBUG: context teardown
nose.suite: DEBUG: ancestor <class 'test_navori.NavoriTest'> may need teardown
nose.suite: DEBUG: <nose.suite.ContextSuite context=NavoriTest> setup ancestor <class 'test_navori.NavoriTest'>
nose.suite: DEBUG: <nose.suite.ContextSuite context=NavoriTest> teardown context <class 'test_navori.NavoriTest'>
nose: DEBUG: call fixture <class 'test_navori.NavoriTest'>.tearDownClass
nose.suite: DEBUG: ancestor <module 'test_navori' from '/home/damian/Malambo/api/test/test_navori.py'> may need teardown
nose.suite: DEBUG: <nose.suite.ContextSuite context=test_navori> setup ancestor <module 'test_navori' from '/home/damian/Malambo/api/test/test_navori.py'>
nose.suite: DEBUG: ancestor <class 'test_navori.NavoriTest'> may need teardown
nose.suite: DEBUG: ancestor <class 'test_navori.NavoriTest'> already torn down
nose.suite: DEBUG: context teardown
nose.suite: DEBUG: ancestor <module 'test_navori' from '/home/damian/Malambo/api/test/test_navori.py'> may need teardown
nose.suite: DEBUG: <nose.suite.ContextSuite context=test_navori> setup ancestor <module 'test_navori' from '/home/damian/Malambo/api/test/test_navori.py'>
nose.suite: DEBUG: ancestor <module 'test_navori' from '/home/damian/Malambo/api/test/test_navori.py'> may need teardown
nose.suite: DEBUG: <nose.suite.ContextSuite context=test_navori> setup ancestor <module 'test_navori' from '/home/damian/Malambo/api/test/test_navori.py'>
nose.suite: DEBUG: context teardown
nose.suite: DEBUG: ancestor <module 'test_navori' from '/home/damian/Malambo/api/test/test_navori.py'> may need teardown
nose.suite: DEBUG: <nose.suite.ContextSuite context=test_navori> setup ancestor <module 'test_navori' from '/home/damian/Malambo/api/test/test_navori.py'>
nose.suite: DEBUG: <nose.suite.ContextSuite context=test_navori> teardown context <module 'test_navori' from '/home/damian/Malambo/api/test/test_navori.py'>
nose.suite: DEBUG: ancestor <module 'test_navori' from '/home/damian/Malambo/api/test/test_navori.py'> may need teardown
nose.suite: DEBUG: ancestor <module 'test_navori' from '/home/damian/Malambo/api/test/test_navori.py'> already torn down
nose.config: INFO: Ignoring files matching ['^\\.', '^_', '^setup\\.py$']
nose.plugins.manager: DEBUG: Configuring plugins
nose.plugins.manager: DEBUG: Plugins enabled: [<nose.plugins.capture.Capture object at 0x7f30c91a1410>, <nose.plugins.logcapture.LogCapture object at 0x7f30c91b5810>, <nose.plugins.deprecated.Deprecated object at 0x7f30c91b5d10>, <nose.plugins.skip.Skip object at 0x7f30c8666d50>]
nose.core: DEBUG: configured Config(addPaths=True, args=(), configSection='nosetests', debug='nose,nose.importer', debugLog='nose_debug', env={}, exclude=None, files=[], firstPackageWins=False, getTestCaseNamesCompat=False, ignoreFiles=[<_sre.SRE_Pattern object at 0x7f30cae11ab0>, <_sre.SRE_Pattern object at 0x7f30cadb8e30>, <_sre.SRE_Pattern object at 0x7f30caeb0ab0>], ignoreFilesDefaultStrings=['^\\.', '^_', '^setup\\.py$'], include=None, includeExe=False, logStream=<open file '<stderr>', mode 'w' at 0x7f30caef81e0>, loggingConfig=None, options=<Values at 0x7f30c86875f0: {'xunit_file': 'nosetests.xml', 'enable_plugin_allmodules': None, 'multiprocess_restartworker': False, 'loggingConfig': None, 'doctestExtension': None, 'doctest_tests': None, 'enable_plugin_xunit': None, 'logcapture_clear': False, 'stopOnError': False, 'enable_plugin_id': None, 'testNames': None, 'doctestOptions': None, 'exclude': [], 'byteCompile': True, 'ignoreFiles': [], 'logcapture': True, 'addPaths': True, 'capture': True, 'xunit_testsuite_name': 'nosetests', 'logcapture_level': 'NOTSET', 'cover_xml': None, 'py3where': None, 'noSkip': False, 'enable_plugin_isolation': None, 'logcapture_filters': None, 'collect_only': None, 'failed': False, 'version': False, 'eval_attr': None, 'include': [], 'enable_plugin_profile': None, 'debugErrors': False, 'files': None, 'cover_tests': None, 'multiprocess_timeout': 10, 'testMatch': '(?:^|[\\b_\\./-])[Tt]est', 'traverseNamespace': False, 'firstPackageWins': False, 'cover_html_dir': 'cover', 'cover_branches': None, 'debugBoth': False, 'noDeprecated': False, 'cover_xml_file': 'coverage.xml', 'showPlugins': False, 'cover_erase': None, 'multiprocess_workers': 0, 'testIdFile': '.noseids', 'enable_plugin_coverage': None, 'attr': None, 'profile_sort': 'cumulative', 'doctestFixtures': None, 'logcapture_datefmt': None, 'cover_packages': None, 'verbosity': 1, 'enable_plugin_doctest': None, 'profile_stats_file': None, 'cover_inclusive': None, 'includeExe': False, 'logcapture_format': '%(name)s: %(levelname)s: %(message)s', 'debugFailures': False, 'detailedErrors': None, 'debugLog': 'nose_debug', 'doctest_result_var': None, 'cover_html': None, 'debug': 'nose,nose.importer', 'cover_min_percentage': None, 'where': None, 'profile_restrict': None}>, parser=<optparse.OptionParser instance at 0x7f30c919ef38>, parserClass=<class optparse.OptionParser at 0x7f30c983af58>, plugins=<nose.plugins.manager.DefaultPluginManager object at 0x7f30c9199ed0>, py3where=(), runOnInit=True, srcDirs=('lib', 'src'), stopOnError=False, stream=<open file '<stderr>', mode 'w' at 0x7f30caef81e0>, testMatch=<_sre.SRE_Pattern object at 0x7f30c91a4030>, testMatchPat='(?:^|[\\b_\\./-])[Tt]est', testNames=['test_navori.py'], traverseNamespace=False, verbosity=1, where=(), worker=False, workingDir='/home/damian/Malambo/api/test')
nose.importer: DEBUG: Add path /home/damian/Malambo/api/test
nose.importer: DEBUG: insert /home/damian/Malambo/api/test into sys.path
nose.core: DEBUG: test loader is <nose.loader.TestLoader object at 0x7f30c868b0d0>
nose.core: DEBUG: defaultTest .
nose.core: DEBUG: Test names are ['test_navori.py']
nose.core: DEBUG: createTests called with None
nose.loader: DEBUG: load from test_navori.py (None)
nose.selector: DEBUG: Test name test_navori.py resolved to file test_navori.py, module None, call None
nose.selector: DEBUG: Final resolution of test name test_navori.py: file /home/damian/Malambo/api/test/test_navori.py module test_navori call None
nose.importer: DEBUG: Import test_navori from /home/damian/Malambo/api/test
nose.importer: DEBUG: Add path /home/damian/Malambo/api/test
nose.importer: DEBUG: find module part test_navori (test_navori) in ['/home/damian/Malambo/api/test']
nose.failure: DEBUG: A failure! <type 'exceptions.ValueError'> Attempted relative import in non-package ['  File "/usr/local/lib/python2.7/dist-packages/nose/loader.py", line 418, in loadTestsFromName\n    addr.filename, addr.module)\n', '  File "/usr/local/lib/python2.7/dist-packages/nose/importer.py", line 47, in importFromPath\n    return self.importFromDir(dir_path, fqname)\n', '  File "/usr/local/lib/python2.7/dist-packages/nose/importer.py", line 94, in importFromDir\n    mod = load_module(part_fqname, fh, filename, desc)\n', '  File "/home/damian/Malambo/api/test/test_navori.py", line 2, in <module>\n    from .. import navori\n']
nose.suite: DEBUG: Create suite for [<nose.failure.Failure testMethod=runTest>]
nose.suite: DEBUG: tests [<nose.failure.Failure testMethod=runTest>] context None
nose.suite: DEBUG: wrap [<nose.failure.Failure testMethod=runTest>]
nose.suite: DEBUG: wrapping Failure: ValueError (Attempted relative import in non-package)
nose.suite: DEBUG: Context suite for [Test(<nose.failure.Failure testMethod=runTest>)] (<class 'nose.failure.Failure'>) (139847492414416)
nose.suite: DEBUG: suite <nose.suite.ContextSuite context=Failure> has context Failure
nose.suite: DEBUG: get ancestry <class 'nose.failure.Failure'>
nose.suite: DEBUG:  <class 'nose.failure.Failure'> ancestors ['nose', 'failure']
nose: DEBUG: __import__ nose.failure
nose: DEBUG: resolve: ['failure'], nose.failure, <module 'nose' from '/usr/local/lib/python2.7/dist-packages/nose/__init__.pyc'>, <module 'nose' from '/usr/local/lib/python2.7/dist-packages/nose/__init__.pyc'>
nose.suite: DEBUG: suite <nose.suite.ContextSuite context=Failure> has ancestor nose.failure
nose.suite: DEBUG:  <class 'nose.failure.Failure'> ancestors ['nose']
nose: DEBUG: __import__ nose
nose: DEBUG: resolve: [], nose, <module 'nose' from '/usr/local/lib/python2.7/dist-packages/nose/__init__.pyc'>, <module 'nose' from '/usr/local/lib/python2.7/dist-packages/nose/__init__.pyc'>
nose.suite: DEBUG: suite <nose.suite.ContextSuite context=Failure> has ancestor nose
nose.suite: DEBUG: Create suite for [<nose.suite.ContextSuite context=Failure>]
nose.suite: DEBUG: tests [<nose.suite.ContextSuite context=Failure>] context None
nose.suite: DEBUG: wrap [<nose.suite.ContextSuite context=Failure>]
nose.suite: DEBUG: wrapping <nose.suite.ContextSuite context=Failure>
nose.suite: DEBUG: Context suite for [<nose.suite.ContextSuite context=Failure>] (<class 'nose.failure.Failure'>) (139847497462928)
nose.suite: DEBUG: suite <nose.suite.ContextSuite context=Failure> has context Failure
nose.suite: DEBUG: get ancestry <class 'nose.failure.Failure'>
nose.suite: DEBUG:  <class 'nose.failure.Failure'> ancestors ['nose', 'failure']
nose: DEBUG: __import__ nose.failure
nose: DEBUG: resolve: ['failure'], nose.failure, <module 'nose' from '/usr/local/lib/python2.7/dist-packages/nose/__init__.pyc'>, <module 'nose' from '/usr/local/lib/python2.7/dist-packages/nose/__init__.pyc'>
nose.suite: DEBUG: suite <nose.suite.ContextSuite context=Failure> has ancestor nose.failure
nose.suite: DEBUG:  <class 'nose.failure.Failure'> ancestors ['nose']
nose: DEBUG: __import__ nose
nose: DEBUG: resolve: [], nose, <module 'nose' from '/usr/local/lib/python2.7/dist-packages/nose/__init__.pyc'>, <module 'nose' from '/usr/local/lib/python2.7/dist-packages/nose/__init__.pyc'>
nose.suite: DEBUG: suite <nose.suite.ContextSuite context=Failure> has ancestor nose
nose.core: DEBUG: runTests called
nose.suite: DEBUG: suite 139847497462928 (<nose.suite.ContextSuite context=Failure>) run called, tests: <generator object _get_wrapped_tests at 0x7f30c81c04b0>
nose.suite: DEBUG: suite 139847497462928 setUp called, tests: <generator object _get_wrapped_tests at 0x7f30c81c0690>
nose.suite: DEBUG: tests in 139847497462928?
nose.suite: DEBUG: ancestor <module 'nose' from '/usr/local/lib/python2.7/dist-packages/nose/__init__.pyc'> may need setup
nose.suite: DEBUG: ancestor <module 'nose' from '/usr/local/lib/python2.7/dist-packages/nose/__init__.pyc'> does need setup
nose.suite: DEBUG: <nose.suite.ContextSuite context=Failure> setup context <module 'nose' from '/usr/local/lib/python2.7/dist-packages/nose/__init__.pyc'>
nose.suite: DEBUG: ancestor <module 'nose.failure' from '/usr/local/lib/python2.7/dist-packages/nose/failure.pyc'> may need setup
nose.suite: DEBUG: ancestor <module 'nose.failure' from '/usr/local/lib/python2.7/dist-packages/nose/failure.pyc'> does need setup
nose.suite: DEBUG: <nose.suite.ContextSuite context=Failure> setup context <module 'nose.failure' from '/usr/local/lib/python2.7/dist-packages/nose/failure.pyc'>
nose.suite: DEBUG: ancestor <class 'nose.failure.Failure'> may need setup
nose.suite: DEBUG: ancestor <class 'nose.failure.Failure'> does need setup
nose.suite: DEBUG: <nose.suite.ContextSuite context=Failure> setup context <class 'nose.failure.Failure'>
nose: DEBUG: call fixture <class 'nose.failure.Failure'>.setUpClass
nose.suite: DEBUG: completed suite setup
nose.suite: DEBUG: precache is [<nose.suite.ContextSuite context=Failure>]
nose.suite: DEBUG: suite 139847492414416 (<nose.suite.ContextSuite context=Failure>) run called, tests: <generator object _get_wrapped_tests at 0x7f30c81c0780>
nose.suite: DEBUG: suite 139847492414416 setUp called, tests: <generator object _get_wrapped_tests at 0x7f30c81c0780>
nose.suite: DEBUG: tests in 139847492414416?
nose.suite: DEBUG: ancestor <module 'nose' from '/usr/local/lib/python2.7/dist-packages/nose/__init__.pyc'> may need setup
nose.suite: DEBUG: ancestor <module 'nose.failure' from '/usr/local/lib/python2.7/dist-packages/nose/failure.pyc'> may need setup
nose.suite: DEBUG: ancestor <class 'nose.failure.Failure'> may need setup
nose.suite: DEBUG: completed suite setup
nose.suite: DEBUG: precache is [Test(<nose.failure.Failure testMethod=runTest>)]
nose.suite: DEBUG: context teardown
nose.suite: DEBUG: ancestor <class 'nose.failure.Failure'> may need teardown
nose.suite: DEBUG: <nose.suite.ContextSuite context=Failure> setup ancestor <class 'nose.failure.Failure'>
nose.suite: DEBUG: ancestor <module 'nose.failure' from '/usr/local/lib/python2.7/dist-packages/nose/failure.pyc'> may need teardown
nose.suite: DEBUG: <nose.suite.ContextSuite context=Failure> setup ancestor <module 'nose.failure' from '/usr/local/lib/python2.7/dist-packages/nose/failure.pyc'>
nose.suite: DEBUG: ancestor <module 'nose' from '/usr/local/lib/python2.7/dist-packages/nose/__init__.pyc'> may need teardown
nose.suite: DEBUG: <nose.suite.ContextSuite context=Failure> setup ancestor <module 'nose' from '/usr/local/lib/python2.7/dist-packages/nose/__init__.pyc'>
nose.suite: DEBUG: ancestor <class 'nose.failure.Failure'> may need teardown
nose.suite: DEBUG: <nose.suite.ContextSuite context=Failure> setup ancestor <class 'nose.failure.Failure'>
nose.suite: DEBUG: context teardown
nose.suite: DEBUG: ancestor <class 'nose.failure.Failure'> may need teardown
nose.suite: DEBUG: <nose.suite.ContextSuite context=Failure> setup ancestor <class 'nose.failure.Failure'>
nose.suite: DEBUG: <nose.suite.ContextSuite context=Failure> teardown context <class 'nose.failure.Failure'>
nose: DEBUG: call fixture <class 'nose.failure.Failure'>.tearDownClass
nose.suite: DEBUG: ancestor <module 'nose.failure' from '/usr/local/lib/python2.7/dist-packages/nose/failure.pyc'> may need teardown
nose.suite: DEBUG: <nose.suite.ContextSuite context=Failure> setup ancestor <module 'nose.failure' from '/usr/local/lib/python2.7/dist-packages/nose/failure.pyc'>
nose.suite: DEBUG: <nose.suite.ContextSuite context=Failure> teardown context <module 'nose.failure' from '/usr/local/lib/python2.7/dist-packages/nose/failure.pyc'>
nose.suite: DEBUG: ancestor <module 'nose' from '/usr/local/lib/python2.7/dist-packages/nose/__init__.pyc'> may need teardown
nose.suite: DEBUG: <nose.suite.ContextSuite context=Failure> setup ancestor <module 'nose' from '/usr/local/lib/python2.7/dist-packages/nose/__init__.pyc'>
nose.suite: DEBUG: <nose.suite.ContextSuite context=Failure> teardown context <module 'nose' from '/usr/local/lib/python2.7/dist-packages/nose/__init__.pyc'>
nose.suite: DEBUG: ancestor <class 'nose.failure.Failure'> may need teardown
nose.suite: DEBUG: ancestor <class 'nose.failure.Failure'> already torn down
nose.config: INFO: Ignoring files matching ['^\\.', '^_', '^setup\\.py$']
nose.plugins.manager: DEBUG: Configuring plugins
nose.plugins.manager: DEBUG: Plugins enabled: [<nose.plugins.capture.Capture object at 0x7f4a1a1d8410>, <nose.plugins.logcapture.LogCapture object at 0x7f4a1a1ec810>, <nose.plugins.deprecated.Deprecated object at 0x7f4a1a1ecd10>, <nose.plugins.skip.Skip object at 0x7f4a1969dd50>]
nose.core: DEBUG: configured Config(addPaths=True, args=(), configSection='nosetests', debug='nose,nose.importer', debugLog='nose_debug', env={}, exclude=None, files=[], firstPackageWins=False, getTestCaseNamesCompat=False, ignoreFiles=[<_sre.SRE_Pattern object at 0x7f4a1be48ab0>, <_sre.SRE_Pattern object at 0x7f4a1bdefe30>, <_sre.SRE_Pattern object at 0x7f4a1bee7ab0>], ignoreFilesDefaultStrings=['^\\.', '^_', '^setup\\.py$'], include=None, includeExe=False, logStream=<open file '<stderr>', mode 'w' at 0x7f4a1bf2f1e0>, loggingConfig=None, options=<Values at 0x7f4a196be5f0: {'xunit_file': 'nosetests.xml', 'enable_plugin_allmodules': None, 'multiprocess_restartworker': False, 'loggingConfig': None, 'doctestExtension': None, 'doctest_tests': None, 'enable_plugin_xunit': None, 'logcapture_clear': False, 'stopOnError': False, 'enable_plugin_id': None, 'testNames': None, 'doctestOptions': None, 'exclude': [], 'byteCompile': True, 'ignoreFiles': [], 'logcapture': True, 'addPaths': True, 'capture': True, 'xunit_testsuite_name': 'nosetests', 'logcapture_level': 'NOTSET', 'cover_xml': None, 'py3where': None, 'noSkip': False, 'enable_plugin_isolation': None, 'logcapture_filters': None, 'collect_only': None, 'failed': False, 'version': False, 'eval_attr': None, 'include': [], 'enable_plugin_profile': None, 'debugErrors': False, 'files': None, 'cover_tests': None, 'multiprocess_timeout': 10, 'testMatch': '(?:^|[\\b_\\./-])[Tt]est', 'traverseNamespace': False, 'firstPackageWins': False, 'cover_html_dir': 'cover', 'cover_branches': None, 'debugBoth': False, 'noDeprecated': False, 'cover_xml_file': 'coverage.xml', 'showPlugins': False, 'cover_erase': None, 'multiprocess_workers': 0, 'testIdFile': '.noseids', 'enable_plugin_coverage': None, 'attr': None, 'profile_sort': 'cumulative', 'doctestFixtures': None, 'logcapture_datefmt': None, 'cover_packages': None, 'verbosity': 1, 'enable_plugin_doctest': None, 'profile_stats_file': None, 'cover_inclusive': None, 'includeExe': False, 'logcapture_format': '%(name)s: %(levelname)s: %(message)s', 'debugFailures': False, 'detailedErrors': None, 'debugLog': 'nose_debug', 'doctest_result_var': None, 'cover_html': None, 'debug': 'nose,nose.importer', 'cover_min_percentage': None, 'where': None, 'profile_restrict': None}>, parser=<optparse.OptionParser instance at 0x7f4a1a1d5f38>, parserClass=<class optparse.OptionParser at 0x7f4a1a871f58>, plugins=<nose.plugins.manager.DefaultPluginManager object at 0x7f4a1a1d0ed0>, py3where=(), runOnInit=True, srcDirs=('lib', 'src'), stopOnError=False, stream=<open file '<stderr>', mode 'w' at 0x7f4a1bf2f1e0>, testMatch=<_sre.SRE_Pattern object at 0x7f4a1a1db030>, testMatchPat='(?:^|[\\b_\\./-])[Tt]est', testNames=['test_navori.py'], traverseNamespace=False, verbosity=1, where=(), worker=False, workingDir='/home/damian/Malambo/api/test')
nose.importer: DEBUG: Add path /home/damian/Malambo/api/test
nose.importer: DEBUG: insert /home/damian/Malambo/api/test into sys.path
nose.core: DEBUG: test loader is <nose.loader.TestLoader object at 0x7f4a196c20d0>
nose.core: DEBUG: defaultTest .
nose.core: DEBUG: Test names are ['test_navori.py']
nose.core: DEBUG: createTests called with None
nose.loader: DEBUG: load from test_navori.py (None)
nose.selector: DEBUG: Test name test_navori.py resolved to file test_navori.py, module None, call None
nose.selector: DEBUG: Final resolution of test name test_navori.py: file /home/damian/Malambo/api/test/test_navori.py module test_navori call None
nose.importer: DEBUG: Import test_navori from /home/damian/Malambo/api/test
nose.importer: DEBUG: Add path /home/damian/Malambo/api/test
nose.importer: DEBUG: find module part test_navori (test_navori) in ['/home/damian/Malambo/api/test']
nose.failure: DEBUG: A failure! <type 'exceptions.ValueError'> Attempted relative import in non-package ['  File "/usr/local/lib/python2.7/dist-packages/nose/loader.py", line 418, in loadTestsFromName\n    addr.filename, addr.module)\n', '  File "/usr/local/lib/python2.7/dist-packages/nose/importer.py", line 47, in importFromPath\n    return self.importFromDir(dir_path, fqname)\n', '  File "/usr/local/lib/python2.7/dist-packages/nose/importer.py", line 94, in importFromDir\n    mod = load_module(part_fqname, fh, filename, desc)\n', '  File "/home/damian/Malambo/api/test/test_navori.py", line 2, in <module>\n    from .. import navori\n']
nose.suite: DEBUG: Create suite for [<nose.failure.Failure testMethod=runTest>]
nose.suite: DEBUG: tests [<nose.failure.Failure testMethod=runTest>] context None
nose.suite: DEBUG: wrap [<nose.failure.Failure testMethod=runTest>]
nose.suite: DEBUG: wrapping Failure: ValueError (Attempted relative import in non-package)
nose.suite: DEBUG: Context suite for [Test(<nose.failure.Failure testMethod=runTest>)] (<class 'nose.failure.Failure'>) (139956225768400)
nose.suite: DEBUG: suite <nose.suite.ContextSuite context=Failure> has context Failure
nose.suite: DEBUG: get ancestry <class 'nose.failure.Failure'>
nose.suite: DEBUG:  <class 'nose.failure.Failure'> ancestors ['nose', 'failure']
nose: DEBUG: __import__ nose.failure
nose: DEBUG: resolve: ['failure'], nose.failure, <module 'nose' from '/usr/local/lib/python2.7/dist-packages/nose/__init__.pyc'>, <module 'nose' from '/usr/local/lib/python2.7/dist-packages/nose/__init__.pyc'>
nose.suite: DEBUG: suite <nose.suite.ContextSuite context=Failure> has ancestor nose.failure
nose.suite: DEBUG:  <class 'nose.failure.Failure'> ancestors ['nose']
nose: DEBUG: __import__ nose
nose: DEBUG: resolve: [], nose, <module 'nose' from '/usr/local/lib/python2.7/dist-packages/nose/__init__.pyc'>, <module 'nose' from '/usr/local/lib/python2.7/dist-packages/nose/__init__.pyc'>
nose.suite: DEBUG: suite <nose.suite.ContextSuite context=Failure> has ancestor nose
nose.suite: DEBUG: Create suite for [<nose.suite.ContextSuite context=Failure>]
nose.suite: DEBUG: tests [<nose.suite.ContextSuite context=Failure>] context None
nose.suite: DEBUG: wrap [<nose.suite.ContextSuite context=Failure>]
nose.suite: DEBUG: wrapping <nose.suite.ContextSuite context=Failure>
nose.suite: DEBUG: Context suite for [<nose.suite.ContextSuite context=Failure>] (<class 'nose.failure.Failure'>) (139956230825104)
nose.suite: DEBUG: suite <nose.suite.ContextSuite context=Failure> has context Failure
nose.suite: DEBUG: get ancestry <class 'nose.failure.Failure'>
nose.suite: DEBUG:  <class 'nose.failure.Failure'> ancestors ['nose', 'failure']
nose: DEBUG: __import__ nose.failure
nose: DEBUG: resolve: ['failure'], nose.failure, <module 'nose' from '/usr/local/lib/python2.7/dist-packages/nose/__init__.pyc'>, <module 'nose' from '/usr/local/lib/python2.7/dist-packages/nose/__init__.pyc'>
nose.suite: DEBUG: suite <nose.suite.ContextSuite context=Failure> has ancestor nose.failure
nose.suite: DEBUG:  <class 'nose.failure.Failure'> ancestors ['nose']
nose: DEBUG: __import__ nose
nose: DEBUG: resolve: [], nose, <module 'nose' from '/usr/local/lib/python2.7/dist-packages/nose/__init__.pyc'>, <module 'nose' from '/usr/local/lib/python2.7/dist-packages/nose/__init__.pyc'>
nose.suite: DEBUG: suite <nose.suite.ContextSuite context=Failure> has ancestor nose
nose.core: DEBUG: runTests called
nose.suite: DEBUG: suite 139956230825104 (<nose.suite.ContextSuite context=Failure>) run called, tests: <generator object _get_wrapped_tests at 0x7f4a191f54b0>
nose.suite: DEBUG: suite 139956230825104 setUp called, tests: <generator object _get_wrapped_tests at 0x7f4a191f5690>
nose.suite: DEBUG: tests in 139956230825104?
nose.suite: DEBUG: ancestor <module 'nose' from '/usr/local/lib/python2.7/dist-packages/nose/__init__.pyc'> may need setup
nose.suite: DEBUG: ancestor <module 'nose' from '/usr/local/lib/python2.7/dist-packages/nose/__init__.pyc'> does need setup
nose.suite: DEBUG: <nose.suite.ContextSuite context=Failure> setup context <module 'nose' from '/usr/local/lib/python2.7/dist-packages/nose/__init__.pyc'>
nose.suite: DEBUG: ancestor <module 'nose.failure' from '/usr/local/lib/python2.7/dist-packages/nose/failure.pyc'> may need setup
nose.suite: DEBUG: ancestor <module 'nose.failure' from '/usr/local/lib/python2.7/dist-packages/nose/failure.pyc'> does need setup
nose.suite: DEBUG: <nose.suite.ContextSuite context=Failure> setup context <module 'nose.failure' from '/usr/local/lib/python2.7/dist-packages/nose/failure.pyc'>
nose.suite: DEBUG: ancestor <class 'nose.failure.Failure'> may need setup
nose.suite: DEBUG: ancestor <class 'nose.failure.Failure'> does need setup
nose.suite: DEBUG: <nose.suite.ContextSuite context=Failure> setup context <class 'nose.failure.Failure'>
nose: DEBUG: call fixture <class 'nose.failure.Failure'>.setUpClass
nose.suite: DEBUG: completed suite setup
nose.suite: DEBUG: precache is [<nose.suite.ContextSuite context=Failure>]
nose.suite: DEBUG: suite 139956225768400 (<nose.suite.ContextSuite context=Failure>) run called, tests: <generator object _get_wrapped_tests at 0x7f4a191f5780>
nose.suite: DEBUG: suite 139956225768400 setUp called, tests: <generator object _get_wrapped_tests at 0x7f4a191f5780>
nose.suite: DEBUG: tests in 139956225768400?
nose.suite: DEBUG: ancestor <module 'nose' from '/usr/local/lib/python2.7/dist-packages/nose/__init__.pyc'> may need setup
nose.suite: DEBUG: ancestor <module 'nose.failure' from '/usr/local/lib/python2.7/dist-packages/nose/failure.pyc'> may need setup
nose.suite: DEBUG: ancestor <class 'nose.failure.Failure'> may need setup
nose.suite: DEBUG: completed suite setup
nose.suite: DEBUG: precache is [Test(<nose.failure.Failure testMethod=runTest>)]
nose.suite: DEBUG: context teardown
nose.suite: DEBUG: ancestor <class 'nose.failure.Failure'> may need teardown
nose.suite: DEBUG: <nose.suite.ContextSuite context=Failure> setup ancestor <class 'nose.failure.Failure'>
nose.suite: DEBUG: ancestor <module 'nose.failure' from '/usr/local/lib/python2.7/dist-packages/nose/failure.pyc'> may need teardown
nose.suite: DEBUG: <nose.suite.ContextSuite context=Failure> setup ancestor <module 'nose.failure' from '/usr/local/lib/python2.7/dist-packages/nose/failure.pyc'>
nose.suite: DEBUG: ancestor <module 'nose' from '/usr/local/lib/python2.7/dist-packages/nose/__init__.pyc'> may need teardown
nose.suite: DEBUG: <nose.suite.ContextSuite context=Failure> setup ancestor <module 'nose' from '/usr/local/lib/python2.7/dist-packages/nose/__init__.pyc'>
nose.suite: DEBUG: ancestor <class 'nose.failure.Failure'> may need teardown
nose.suite: DEBUG: <nose.suite.ContextSuite context=Failure> setup ancestor <class 'nose.failure.Failure'>
nose.suite: DEBUG: context teardown
nose.suite: DEBUG: ancestor <class 'nose.failure.Failure'> may need teardown
nose.suite: DEBUG: <nose.suite.ContextSuite context=Failure> setup ancestor <class 'nose.failure.Failure'>
nose.suite: DEBUG: <nose.suite.ContextSuite context=Failure> teardown context <class 'nose.failure.Failure'>
nose: DEBUG: call fixture <class 'nose.failure.Failure'>.tearDownClass
nose.suite: DEBUG: ancestor <module 'nose.failure' from '/usr/local/lib/python2.7/dist-packages/nose/failure.pyc'> may need teardown
nose.suite: DEBUG: <nose.suite.ContextSuite context=Failure> setup ancestor <module 'nose.failure' from '/usr/local/lib/python2.7/dist-packages/nose/failure.pyc'>
nose.suite: DEBUG: <nose.suite.ContextSuite context=Failure> teardown context <module 'nose.failure' from '/usr/local/lib/python2.7/dist-packages/nose/failure.pyc'>
nose.suite: DEBUG: ancestor <module 'nose' from '/usr/local/lib/python2.7/dist-packages/nose/__init__.pyc'> may need teardown
nose.suite: DEBUG: <nose.suite.ContextSuite context=Failure> setup ancestor <module 'nose' from '/usr/local/lib/python2.7/dist-packages/nose/__init__.pyc'>
nose.suite: DEBUG: <nose.suite.ContextSuite context=Failure> teardown context <module 'nose' from '/usr/local/lib/python2.7/dist-packages/nose/__init__.pyc'>
nose.suite: DEBUG: ancestor <class 'nose.failure.Failure'> may need teardown
nose.suite: DEBUG: ancestor <class 'nose.failure.Failure'> already torn down
nose.config: INFO: Ignoring files matching ['^\\.', '^_', '^setup\\.py$']
nose.plugins.manager: DEBUG: Configuring plugins
nose.plugins.manager: DEBUG: Plugins enabled: [<nose.plugins.capture.Capture object at 0x7ffca0a43410>, <nose.plugins.logcapture.LogCapture object at 0x7ffca0a57810>, <nose.plugins.deprecated.Deprecated object at 0x7ffca0a57d10>, <nose.plugins.skip.Skip object at 0x7ffc9ff08d50>]
nose.core: DEBUG: configured Config(addPaths=True, args=(), configSection='nosetests', debug='nose,nose.importer', debugLog='nose_debug', env={}, exclude=None, files=[], firstPackageWins=False, getTestCaseNamesCompat=False, ignoreFiles=[<_sre.SRE_Pattern object at 0x7ffca26b3ab0>, <_sre.SRE_Pattern object at 0x7ffca265ae30>, <_sre.SRE_Pattern object at 0x7ffca2752ab0>], ignoreFilesDefaultStrings=['^\\.', '^_', '^setup\\.py$'], include=None, includeExe=False, logStream=<open file '<stderr>', mode 'w' at 0x7ffca279a1e0>, loggingConfig=None, options=<Values at 0x7ffc9ff295f0: {'xunit_file': 'nosetests.xml', 'enable_plugin_allmodules': None, 'multiprocess_restartworker': False, 'loggingConfig': None, 'doctestExtension': None, 'doctest_tests': None, 'enable_plugin_xunit': None, 'logcapture_clear': False, 'stopOnError': False, 'enable_plugin_id': None, 'testNames': None, 'doctestOptions': None, 'exclude': [], 'byteCompile': True, 'ignoreFiles': [], 'logcapture': True, 'addPaths': True, 'capture': True, 'xunit_testsuite_name': 'nosetests', 'logcapture_level': 'NOTSET', 'cover_xml': None, 'py3where': None, 'noSkip': False, 'enable_plugin_isolation': None, 'logcapture_filters': None, 'collect_only': None, 'failed': False, 'version': False, 'eval_attr': None, 'include': [], 'enable_plugin_profile': None, 'debugErrors': False, 'files': None, 'cover_tests': None, 'multiprocess_timeout': 10, 'testMatch': '(?:^|[\\b_\\./-])[Tt]est', 'traverseNamespace': False, 'firstPackageWins': False, 'cover_html_dir': 'cover', 'cover_branches': None, 'debugBoth': False, 'noDeprecated': False, 'cover_xml_file': 'coverage.xml', 'showPlugins': False, 'cover_erase': None, 'multiprocess_workers': 0, 'testIdFile': '.noseids', 'enable_plugin_coverage': None, 'attr': None, 'profile_sort': 'cumulative', 'doctestFixtures': None, 'logcapture_datefmt': None, 'cover_packages': None, 'verbosity': 1, 'enable_plugin_doctest': None, 'profile_stats_file': None, 'cover_inclusive': None, 'includeExe': False, 'logcapture_format': '%(name)s: %(levelname)s: %(message)s', 'debugFailures': False, 'detailedErrors': None, 'debugLog': 'nose_debug', 'doctest_result_var': None, 'cover_html': None, 'debug': 'nose,nose.importer', 'cover_min_percentage': None, 'where': None, 'profile_restrict': None}>, parser=<optparse.OptionParser instance at 0x7ffca0a40f38>, parserClass=<class optparse.OptionParser at 0x7ffca10dcf58>, plugins=<nose.plugins.manager.DefaultPluginManager object at 0x7ffca0a3bed0>, py3where=(), runOnInit=True, srcDirs=('lib', 'src'), stopOnError=False, stream=<open file '<stderr>', mode 'w' at 0x7ffca279a1e0>, testMatch=<_sre.SRE_Pattern object at 0x7ffca0a46030>, testMatchPat='(?:^|[\\b_\\./-])[Tt]est', testNames=['test_navori.py'], traverseNamespace=False, verbosity=1, where=(), worker=False, workingDir='/home/damian/Malambo/api/test')
nose.importer: DEBUG: Add path /home/damian/Malambo/api/test
nose.importer: DEBUG: insert /home/damian/Malambo/api/test into sys.path
nose.core: DEBUG: test loader is <nose.loader.TestLoader object at 0x7ffc9ff2d0d0>
nose.core: DEBUG: defaultTest .
nose.core: DEBUG: Test names are ['test_navori.py']
nose.core: DEBUG: createTests called with None
nose.loader: DEBUG: load from test_navori.py (None)
nose.selector: DEBUG: Test name test_navori.py resolved to file test_navori.py, module None, call None
nose.selector: DEBUG: Final resolution of test name test_navori.py: file /home/damian/Malambo/api/test/test_navori.py module test_navori call None
nose.importer: DEBUG: Import test_navori from /home/damian/Malambo/api/test
nose.importer: DEBUG: Add path /home/damian/Malambo/api/test
nose.importer: DEBUG: find module part test_navori (test_navori) in ['/home/damian/Malambo/api/test']
nose.failure: DEBUG: A failure! <type 'exceptions.ImportError'> No module named api ['  File "/usr/local/lib/python2.7/dist-packages/nose/loader.py", line 418, in loadTestsFromName\n    addr.filename, addr.module)\n', '  File "/usr/local/lib/python2.7/dist-packages/nose/importer.py", line 47, in importFromPath\n    return self.importFromDir(dir_path, fqname)\n', '  File "/usr/local/lib/python2.7/dist-packages/nose/importer.py", line 94, in importFromDir\n    mod = load_module(part_fqname, fh, filename, desc)\n', '  File "/home/damian/Malambo/api/test/test_navori.py", line 2, in <module>\n    from api import navori\n']
nose.suite: DEBUG: Create suite for [<nose.failure.Failure testMethod=runTest>]
nose.suite: DEBUG: tests [<nose.failure.Failure testMethod=runTest>] context None
nose.suite: DEBUG: wrap [<nose.failure.Failure testMethod=runTest>]
nose.suite: DEBUG: wrapping Failure: ImportError (No module named api)
nose.suite: DEBUG: Context suite for [Test(<nose.failure.Failure testMethod=runTest>)] (<class 'nose.failure.Failure'>) (140722986925008)
nose.suite: DEBUG: suite <nose.suite.ContextSuite context=Failure> has context Failure
nose.suite: DEBUG: get ancestry <class 'nose.failure.Failure'>
nose.suite: DEBUG:  <class 'nose.failure.Failure'> ancestors ['nose', 'failure']
nose: DEBUG: __import__ nose.failure
nose: DEBUG: resolve: ['failure'], nose.failure, <module 'nose' from '/usr/local/lib/python2.7/dist-packages/nose/__init__.pyc'>, <module 'nose' from '/usr/local/lib/python2.7/dist-packages/nose/__init__.pyc'>
nose.suite: DEBUG: suite <nose.suite.ContextSuite context=Failure> has ancestor nose.failure
nose.suite: DEBUG:  <class 'nose.failure.Failure'> ancestors ['nose']
nose: DEBUG: __import__ nose
nose: DEBUG: resolve: [], nose, <module 'nose' from '/usr/local/lib/python2.7/dist-packages/nose/__init__.pyc'>, <module 'nose' from '/usr/local/lib/python2.7/dist-packages/nose/__init__.pyc'>
nose.suite: DEBUG: suite <nose.suite.ContextSuite context=Failure> has ancestor nose
nose.suite: DEBUG: Create suite for [<nose.suite.ContextSuite context=Failure>]
nose.suite: DEBUG: tests [<nose.suite.ContextSuite context=Failure>] context None
nose.suite: DEBUG: wrap [<nose.suite.ContextSuite context=Failure>]
nose.suite: DEBUG: wrapping <nose.suite.ContextSuite context=Failure>
nose.suite: DEBUG: Context suite for [<nose.suite.ContextSuite context=Failure>] (<class 'nose.failure.Failure'>) (140722991977616)
nose.suite: DEBUG: suite <nose.suite.ContextSuite context=Failure> has context Failure
nose.suite: DEBUG: get ancestry <class 'nose.failure.Failure'>
nose.suite: DEBUG:  <class 'nose.failure.Failure'> ancestors ['nose', 'failure']
nose: DEBUG: __import__ nose.failure
nose: DEBUG: resolve: ['failure'], nose.failure, <module 'nose' from '/usr/local/lib/python2.7/dist-packages/nose/__init__.pyc'>, <module 'nose' from '/usr/local/lib/python2.7/dist-packages/nose/__init__.pyc'>
nose.suite: DEBUG: suite <nose.suite.ContextSuite context=Failure> has ancestor nose.failure
nose.suite: DEBUG:  <class 'nose.failure.Failure'> ancestors ['nose']
nose: DEBUG: __import__ nose
nose: DEBUG: resolve: [], nose, <module 'nose' from '/usr/local/lib/python2.7/dist-packages/nose/__init__.pyc'>, <module 'nose' from '/usr/local/lib/python2.7/dist-packages/nose/__init__.pyc'>
nose.suite: DEBUG: suite <nose.suite.ContextSuite context=Failure> has ancestor nose
nose.core: DEBUG: runTests called
nose.suite: DEBUG: suite 140722991977616 (<nose.suite.ContextSuite context=Failure>) run called, tests: <generator object _get_wrapped_tests at 0x7ffc9fa62460>
nose.suite: DEBUG: suite 140722991977616 setUp called, tests: <generator object _get_wrapped_tests at 0x7ffc9fa62640>
nose.suite: DEBUG: tests in 140722991977616?
nose.suite: DEBUG: ancestor <module 'nose' from '/usr/local/lib/python2.7/dist-packages/nose/__init__.pyc'> may need setup
nose.suite: DEBUG: ancestor <module 'nose' from '/usr/local/lib/python2.7/dist-packages/nose/__init__.pyc'> does need setup
nose.suite: DEBUG: <nose.suite.ContextSuite context=Failure> setup context <module 'nose' from '/usr/local/lib/python2.7/dist-packages/nose/__init__.pyc'>
nose.suite: DEBUG: ancestor <module 'nose.failure' from '/usr/local/lib/python2.7/dist-packages/nose/failure.pyc'> may need setup
nose.suite: DEBUG: ancestor <module 'nose.failure' from '/usr/local/lib/python2.7/dist-packages/nose/failure.pyc'> does need setup
nose.suite: DEBUG: <nose.suite.ContextSuite context=Failure> setup context <module 'nose.failure' from '/usr/local/lib/python2.7/dist-packages/nose/failure.pyc'>
nose.suite: DEBUG: ancestor <class 'nose.failure.Failure'> may need setup
nose.suite: DEBUG: ancestor <class 'nose.failure.Failure'> does need setup
nose.suite: DEBUG: <nose.suite.ContextSuite context=Failure> setup context <class 'nose.failure.Failure'>
nose: DEBUG: call fixture <class 'nose.failure.Failure'>.setUpClass
nose.suite: DEBUG: completed suite setup
nose.suite: DEBUG: precache is [<nose.suite.ContextSuite context=Failure>]
nose.suite: DEBUG: suite 140722986925008 (<nose.suite.ContextSuite context=Failure>) run called, tests: <generator object _get_wrapped_tests at 0x7ffc9fa62730>
nose.suite: DEBUG: suite 140722986925008 setUp called, tests: <generator object _get_wrapped_tests at 0x7ffc9fa62730>
nose.suite: DEBUG: tests in 140722986925008?
nose.suite: DEBUG: ancestor <module 'nose' from '/usr/local/lib/python2.7/dist-packages/nose/__init__.pyc'> may need setup
nose.suite: DEBUG: ancestor <module 'nose.failure' from '/usr/local/lib/python2.7/dist-packages/nose/failure.pyc'> may need setup
nose.suite: DEBUG: ancestor <class 'nose.failure.Failure'> may need setup
nose.suite: DEBUG: completed suite setup
nose.suite: DEBUG: precache is [Test(<nose.failure.Failure testMethod=runTest>)]
nose.suite: DEBUG: context teardown
nose.suite: DEBUG: ancestor <class 'nose.failure.Failure'> may need teardown
nose.suite: DEBUG: <nose.suite.ContextSuite context=Failure> setup ancestor <class 'nose.failure.Failure'>
nose.suite: DEBUG: ancestor <module 'nose.failure' from '/usr/local/lib/python2.7/dist-packages/nose/failure.pyc'> may need teardown
nose.suite: DEBUG: <nose.suite.ContextSuite context=Failure> setup ancestor <module 'nose.failure' from '/usr/local/lib/python2.7/dist-packages/nose/failure.pyc'>
nose.suite: DEBUG: ancestor <module 'nose' from '/usr/local/lib/python2.7/dist-packages/nose/__init__.pyc'> may need teardown
nose.suite: DEBUG: <nose.suite.ContextSuite context=Failure> setup ancestor <module 'nose' from '/usr/local/lib/python2.7/dist-packages/nose/__init__.pyc'>
nose.suite: DEBUG: ancestor <class 'nose.failure.Failure'> may need teardown
nose.suite: DEBUG: <nose.suite.ContextSuite context=Failure> setup ancestor <class 'nose.failure.Failure'>
nose.suite: DEBUG: context teardown
nose.suite: DEBUG: ancestor <class 'nose.failure.Failure'> may need teardown
nose.suite: DEBUG: <nose.suite.ContextSuite context=Failure> setup ancestor <class 'nose.failure.Failure'>
nose.suite: DEBUG: <nose.suite.ContextSuite context=Failure> teardown context <class 'nose.failure.Failure'>
nose: DEBUG: call fixture <class 'nose.failure.Failure'>.tearDownClass
nose.suite: DEBUG: ancestor <module 'nose.failure' from '/usr/local/lib/python2.7/dist-packages/nose/failure.pyc'> may need teardown
nose.suite: DEBUG: <nose.suite.ContextSuite context=Failure> setup ancestor <module 'nose.failure' from '/usr/local/lib/python2.7/dist-packages/nose/failure.pyc'>
nose.suite: DEBUG: <nose.suite.ContextSuite context=Failure> teardown context <module 'nose.failure' from '/usr/local/lib/python2.7/dist-packages/nose/failure.pyc'>
nose.suite: DEBUG: ancestor <module 'nose' from '/usr/local/lib/python2.7/dist-packages/nose/__init__.pyc'> may need teardown
nose.suite: DEBUG: <nose.suite.ContextSuite context=Failure> setup ancestor <module 'nose' from '/usr/local/lib/python2.7/dist-packages/nose/__init__.pyc'>
nose.suite: DEBUG: <nose.suite.ContextSuite context=Failure> teardown context <module 'nose' from '/usr/local/lib/python2.7/dist-packages/nose/__init__.pyc'>
nose.suite: DEBUG: ancestor <class 'nose.failure.Failure'> may need teardown
nose.suite: DEBUG: ancestor <class 'nose.failure.Failure'> already torn down
nose.config: INFO: Ignoring files matching ['^\\.', '^_', '^setup\\.py$']
nose.plugins.manager: DEBUG: Configuring plugins
nose.plugins.manager: DEBUG: Plugins enabled: [<nose.plugins.capture.Capture object at 0x7f254875d410>, <nose.plugins.logcapture.LogCapture object at 0x7f2548771810>, <nose.plugins.deprecated.Deprecated object at 0x7f2548771d10>, <nose.plugins.skip.Skip object at 0x7f2547c22d50>]
nose.core: DEBUG: configured Config(addPaths=True, args=(), configSection='nosetests', debug='nose,nose.importer', debugLog='nose_debug', env={}, exclude=None, files=[], firstPackageWins=False, getTestCaseNamesCompat=False, ignoreFiles=[<_sre.SRE_Pattern object at 0x7f254a3cdab0>, <_sre.SRE_Pattern object at 0x7f254a374e30>, <_sre.SRE_Pattern object at 0x7f254a46cab0>], ignoreFilesDefaultStrings=['^\\.', '^_', '^setup\\.py$'], include=None, includeExe=False, logStream=<open file '<stderr>', mode 'w' at 0x7f254a4b41e0>, loggingConfig=None, options=<Values at 0x7f2547c435f0: {'xunit_file': 'nosetests.xml', 'enable_plugin_allmodules': None, 'multiprocess_restartworker': False, 'loggingConfig': None, 'doctestExtension': None, 'doctest_tests': None, 'enable_plugin_xunit': None, 'logcapture_clear': False, 'stopOnError': False, 'enable_plugin_id': None, 'testNames': None, 'doctestOptions': None, 'exclude': [], 'byteCompile': True, 'ignoreFiles': [], 'logcapture': True, 'addPaths': True, 'capture': True, 'xunit_testsuite_name': 'nosetests', 'logcapture_level': 'NOTSET', 'cover_xml': None, 'py3where': None, 'noSkip': False, 'enable_plugin_isolation': None, 'logcapture_filters': None, 'collect_only': None, 'failed': False, 'version': False, 'eval_attr': None, 'include': [], 'enable_plugin_profile': None, 'debugErrors': False, 'files': None, 'cover_tests': None, 'multiprocess_timeout': 10, 'testMatch': '(?:^|[\\b_\\./-])[Tt]est', 'traverseNamespace': False, 'firstPackageWins': False, 'cover_html_dir': 'cover', 'cover_branches': None, 'debugBoth': False, 'noDeprecated': False, 'cover_xml_file': 'coverage.xml', 'showPlugins': False, 'cover_erase': None, 'multiprocess_workers': 0, 'testIdFile': '.noseids', 'enable_plugin_coverage': None, 'attr': None, 'profile_sort': 'cumulative', 'doctestFixtures': None, 'logcapture_datefmt': None, 'cover_packages': None, 'verbosity': 1, 'enable_plugin_doctest': None, 'profile_stats_file': None, 'cover_inclusive': None, 'includeExe': False, 'logcapture_format': '%(name)s: %(levelname)s: %(message)s', 'debugFailures': False, 'detailedErrors': None, 'debugLog': 'nose_debug', 'doctest_result_var': None, 'cover_html': None, 'debug': 'nose,nose.importer', 'cover_min_percentage': None, 'where': None, 'profile_restrict': None}>, parser=<optparse.OptionParser instance at 0x7f254875af38>, parserClass=<class optparse.OptionParser at 0x7f2548df6f58>, plugins=<nose.plugins.manager.DefaultPluginManager object at 0x7f2548755ed0>, py3where=(), runOnInit=True, srcDirs=('lib', 'src'), stopOnError=False, stream=<open file '<stderr>', mode 'w' at 0x7f254a4b41e0>, testMatch=<_sre.SRE_Pattern object at 0x7f2548760030>, testMatchPat='(?:^|[\\b_\\./-])[Tt]est', testNames=['test_navori.py'], traverseNamespace=False, verbosity=1, where=(), worker=False, workingDir='/home/damian/Malambo/api/test')
nose.importer: DEBUG: Add path /home/damian/Malambo/api/test
nose.importer: DEBUG: Add path /home/damian/Malambo/api
nose.importer: DEBUG: Add path /home/damian/Malambo
nose.importer: DEBUG: insert /home/damian/Malambo into sys.path
nose.core: DEBUG: test loader is <nose.loader.TestLoader object at 0x7f2547c470d0>
nose.core: DEBUG: defaultTest .
nose.core: DEBUG: Test names are ['test_navori.py']
nose.core: DEBUG: createTests called with None
nose.loader: DEBUG: load from test_navori.py (None)
nose.selector: DEBUG: Test name test_navori.py resolved to file test_navori.py, module None, call None
nose.selector: DEBUG: Final resolution of test name test_navori.py: file /home/damian/Malambo/api/test/test_navori.py module api.test.test_navori call None
nose.importer: DEBUG: Import api.test.test_navori from /home/damian/Malambo
nose.importer: DEBUG: Add path /home/damian/Malambo
nose.importer: DEBUG: find module part api (api) in ['/home/damian/Malambo']
nose.importer: DEBUG: find module part test (api.test) in ['/home/damian/Malambo/api']
nose.importer: DEBUG: find module part test_navori (api.test.test_navori) in ['/home/damian/Malambo/api/test']
nose.loader: DEBUG: Load from module <module 'api.test.test_navori' from '/home/damian/Malambo/api/test/test_navori.pyc'>
nose.selector: DEBUG: wantClass <class 'api.test.test_navori.NavoriTest'>? True
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.addCleanup>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.addTypeEqualityFunc>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.assertAlmostEqual>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.assertAlmostEqual>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.assertDictContainsSubset>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.assertDictEqual>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.assertEqual>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.assertEqual>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.assertFalse>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.assertGreater>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.assertGreaterEqual>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.assertIn>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.assertIs>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.assertIsInstance>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.assertIsNone>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.assertIsNot>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.assertIsNotNone>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.assertItemsEqual>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.assertLess>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.assertLessEqual>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.assertListEqual>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.assertMultiLineEqual>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.assertNotAlmostEqual>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.assertNotAlmostEqual>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.assertNotEqual>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.assertNotEqual>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.assertNotIn>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.assertNotIsInstance>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.assertNotRegexpMatches>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.assertRaises>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.assertRaisesRegexp>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.assertRegexpMatches>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.assertSequenceEqual>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.assertSetEqual>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.assertTrue>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.assertTupleEqual>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.assertTrue>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.countTestCases>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.debug>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.defaultTestResult>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.doCleanups>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.fail>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.deprecated_func>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.deprecated_func>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.deprecated_func>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.deprecated_func>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.deprecated_func>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.deprecated_func>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.deprecated_func>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.id>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.run>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.setUp>? None
nose.selector: DEBUG: wantMethod <bound method type.setUpClass of <class 'api.test.test_navori.NavoriTest'>>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.shortDescription>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.skipTest>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.tearDown>? None
nose.selector: DEBUG: wantMethod <bound method type.tearDownClass of <class 'api.test.test_navori.NavoriTest'>>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.test_NavoriLogin>? True
nose.suite: DEBUG: Create suite for [<api.test.test_navori.NavoriTest testMethod=test_NavoriLogin>]
nose.suite: DEBUG: tests [<api.test.test_navori.NavoriTest testMethod=test_NavoriLogin>] context None
nose.suite: DEBUG: wrap [<api.test.test_navori.NavoriTest testMethod=test_NavoriLogin>]
nose.suite: DEBUG: wrapping test_NavoriLogin (api.test.test_navori.NavoriTest)
nose.suite: DEBUG: Context suite for [Test(<api.test.test_navori.NavoriTest testMethod=test_NavoriLogin>)] (<class 'api.test.test_navori.NavoriTest'>) (139798094575952)
nose.suite: DEBUG: suite <nose.suite.ContextSuite context=NavoriTest> has context NavoriTest
nose.suite: DEBUG: get ancestry <class 'api.test.test_navori.NavoriTest'>
nose.suite: DEBUG:  <class 'api.test.test_navori.NavoriTest'> ancestors ['api', 'test', 'test_navori']
nose: DEBUG: __import__ api.test.test_navori
nose: DEBUG: resolve: ['test', 'test_navori'], api.test.test_navori, <module 'api' from '/home/damian/Malambo/api/__init__.py'>, <module 'api' from '/home/damian/Malambo/api/__init__.py'>
nose.suite: DEBUG: suite <nose.suite.ContextSuite context=NavoriTest> has ancestor api.test.test_navori
nose.suite: DEBUG:  <class 'api.test.test_navori.NavoriTest'> ancestors ['api', 'test']
nose: DEBUG: __import__ api.test
nose: DEBUG: resolve: ['test'], api.test, <module 'api' from '/home/damian/Malambo/api/__init__.py'>, <module 'api' from '/home/damian/Malambo/api/__init__.py'>
nose.suite: DEBUG: suite <nose.suite.ContextSuite context=NavoriTest> has ancestor api.test
nose.suite: DEBUG:  <class 'api.test.test_navori.NavoriTest'> ancestors ['api']
nose: DEBUG: __import__ api
nose: DEBUG: resolve: [], api, <module 'api' from '/home/damian/Malambo/api/__init__.py'>, <module 'api' from '/home/damian/Malambo/api/__init__.py'>
nose.suite: DEBUG: suite <nose.suite.ContextSuite context=NavoriTest> has ancestor api
nose.suite: DEBUG: Create suite for <nose.suite.ContextList object at 0x7f2547c47a90>
nose.suite: DEBUG: tests <nose.suite.ContextList object at 0x7f2547c47a90> context <module 'api.test.test_navori' from '/home/damian/Malambo/api/test/test_navori.pyc'>
nose.suite: DEBUG: Context suite for <nose.suite.ContextList object at 0x7f2547c47a90> (<module 'api.test.test_navori' from '/home/damian/Malambo/api/test/test_navori.pyc'>) (139798094574992)
nose.suite: DEBUG: suite <nose.suite.ContextSuite context=api.test.test_navori> has context api.test.test_navori
nose.suite: DEBUG: get ancestry <module 'api.test.test_navori' from '/home/damian/Malambo/api/test/test_navori.pyc'>
nose.suite: DEBUG:  <module 'api.test.test_navori' from '/home/damian/Malambo/api/test/test_navori.pyc'> ancestors ['api', 'test']
nose: DEBUG: __import__ api.test
nose: DEBUG: resolve: ['test'], api.test, <module 'api' from '/home/damian/Malambo/api/__init__.py'>, <module 'api' from '/home/damian/Malambo/api/__init__.py'>
nose.suite: DEBUG: suite <nose.suite.ContextSuite context=api.test.test_navori> has ancestor api.test
nose.suite: DEBUG:  <module 'api.test.test_navori' from '/home/damian/Malambo/api/test/test_navori.pyc'> ancestors ['api']
nose: DEBUG: __import__ api
nose: DEBUG: resolve: [], api, <module 'api' from '/home/damian/Malambo/api/__init__.py'>, <module 'api' from '/home/damian/Malambo/api/__init__.py'>
nose.suite: DEBUG: suite <nose.suite.ContextSuite context=api.test.test_navori> has ancestor api
nose.suite: DEBUG: Create suite for [<nose.suite.ContextSuite context=api.test.test_navori>]
nose.suite: DEBUG: tests [<nose.suite.ContextSuite context=api.test.test_navori>] context None
nose.suite: DEBUG: wrap [<nose.suite.ContextSuite context=api.test.test_navori>]
nose.suite: DEBUG: wrapping <nose.suite.ContextSuite context=api.test.test_navori>
nose.suite: DEBUG: Context suite for [<nose.suite.ContextSuite context=api.test.test_navori>] (<module 'api.test.test_navori' from '/home/damian/Malambo/api/test/test_navori.pyc'>) (139798094574736)
nose.suite: DEBUG: suite <nose.suite.ContextSuite context=api.test.test_navori> has context api.test.test_navori
nose.suite: DEBUG: get ancestry <module 'api.test.test_navori' from '/home/damian/Malambo/api/test/test_navori.pyc'>
nose.suite: DEBUG:  <module 'api.test.test_navori' from '/home/damian/Malambo/api/test/test_navori.pyc'> ancestors ['api', 'test']
nose: DEBUG: __import__ api.test
nose: DEBUG: resolve: ['test'], api.test, <module 'api' from '/home/damian/Malambo/api/__init__.py'>, <module 'api' from '/home/damian/Malambo/api/__init__.py'>
nose.suite: DEBUG: suite <nose.suite.ContextSuite context=api.test.test_navori> has ancestor api.test
nose.suite: DEBUG:  <module 'api.test.test_navori' from '/home/damian/Malambo/api/test/test_navori.pyc'> ancestors ['api']
nose: DEBUG: __import__ api
nose: DEBUG: resolve: [], api, <module 'api' from '/home/damian/Malambo/api/__init__.py'>, <module 'api' from '/home/damian/Malambo/api/__init__.py'>
nose.suite: DEBUG: suite <nose.suite.ContextSuite context=api.test.test_navori> has ancestor api
nose.core: DEBUG: runTests called
nose.suite: DEBUG: suite 139798094574736 (<nose.suite.ContextSuite context=api.test.test_navori>) run called, tests: <generator object _get_wrapped_tests at 0x7f254776d550>
nose.suite: DEBUG: suite 139798094574736 setUp called, tests: <generator object _get_wrapped_tests at 0x7f254776d730>
nose.suite: DEBUG: tests in 139798094574736?
nose.suite: DEBUG: ancestor <module 'api' from '/home/damian/Malambo/api/__init__.py'> may need setup
nose.suite: DEBUG: ancestor <module 'api' from '/home/damian/Malambo/api/__init__.py'> does need setup
nose.suite: DEBUG: <nose.suite.ContextSuite context=api.test.test_navori> setup context <module 'api' from '/home/damian/Malambo/api/__init__.py'>
nose.suite: DEBUG: ancestor <module 'api.test' from '/home/damian/Malambo/api/test/__init__.py'> may need setup
nose.suite: DEBUG: ancestor <module 'api.test' from '/home/damian/Malambo/api/test/__init__.py'> does need setup
nose.suite: DEBUG: <nose.suite.ContextSuite context=api.test.test_navori> setup context <module 'api.test' from '/home/damian/Malambo/api/test/__init__.py'>
nose.suite: DEBUG: ancestor <module 'api.test.test_navori' from '/home/damian/Malambo/api/test/test_navori.pyc'> may need setup
nose.suite: DEBUG: ancestor <module 'api.test.test_navori' from '/home/damian/Malambo/api/test/test_navori.pyc'> does need setup
nose.suite: DEBUG: <nose.suite.ContextSuite context=api.test.test_navori> setup context <module 'api.test.test_navori' from '/home/damian/Malambo/api/test/test_navori.pyc'>
nose.suite: DEBUG: completed suite setup
nose.suite: DEBUG: precache is [<nose.suite.ContextSuite context=api.test.test_navori>]
nose.suite: DEBUG: suite 139798094574992 (<nose.suite.ContextSuite context=api.test.test_navori>) run called, tests: <generator object _get_wrapped_tests at 0x7f254776d820>
nose.suite: DEBUG: suite 139798094574992 setUp called, tests: <generator object _get_wrapped_tests at 0x7f254776d820>
nose.suite: DEBUG: tests in 139798094574992?
nose.suite: DEBUG: ancestor <module 'api' from '/home/damian/Malambo/api/__init__.py'> may need setup
nose.suite: DEBUG: ancestor <module 'api.test' from '/home/damian/Malambo/api/test/__init__.py'> may need setup
nose.suite: DEBUG: ancestor <module 'api.test.test_navori' from '/home/damian/Malambo/api/test/test_navori.pyc'> may need setup
nose.suite: DEBUG: completed suite setup
nose.suite: DEBUG: precache is [<nose.suite.ContextSuite context=NavoriTest>]
nose.suite: DEBUG: suite 139798094575952 (<nose.suite.ContextSuite context=NavoriTest>) run called, tests: <generator object _get_wrapped_tests at 0x7f254776d910>
nose.suite: DEBUG: suite 139798094575952 setUp called, tests: <generator object _get_wrapped_tests at 0x7f254776d910>
nose.suite: DEBUG: tests in 139798094575952?
nose.suite: DEBUG: ancestor <module 'api' from '/home/damian/Malambo/api/__init__.py'> may need setup
nose.suite: DEBUG: ancestor <module 'api.test' from '/home/damian/Malambo/api/test/__init__.py'> may need setup
nose.suite: DEBUG: ancestor <module 'api.test.test_navori' from '/home/damian/Malambo/api/test/test_navori.pyc'> may need setup
nose.suite: DEBUG: ancestor <class 'api.test.test_navori.NavoriTest'> may need setup
nose.suite: DEBUG: ancestor <class 'api.test.test_navori.NavoriTest'> does need setup
nose.suite: DEBUG: <nose.suite.ContextSuite context=NavoriTest> setup context <class 'api.test.test_navori.NavoriTest'>
nose: DEBUG: call fixture <class 'api.test.test_navori.NavoriTest'>.setUpClass
nose.suite: DEBUG: completed suite setup
nose.suite: DEBUG: precache is [Test(<api.test.test_navori.NavoriTest testMethod=test_NavoriLogin>)]
nose.suite: DEBUG: context teardown
nose.suite: DEBUG: ancestor <class 'api.test.test_navori.NavoriTest'> may need teardown
nose.suite: DEBUG: <nose.suite.ContextSuite context=NavoriTest> setup ancestor <class 'api.test.test_navori.NavoriTest'>
nose.suite: DEBUG: <nose.suite.ContextSuite context=NavoriTest> teardown context <class 'api.test.test_navori.NavoriTest'>
nose: DEBUG: call fixture <class 'api.test.test_navori.NavoriTest'>.tearDownClass
nose.suite: DEBUG: ancestor <module 'api.test.test_navori' from '/home/damian/Malambo/api/test/test_navori.pyc'> may need teardown
nose.suite: DEBUG: <nose.suite.ContextSuite context=api.test.test_navori> setup ancestor <module 'api.test.test_navori' from '/home/damian/Malambo/api/test/test_navori.pyc'>
nose.suite: DEBUG: ancestor <module 'api.test' from '/home/damian/Malambo/api/test/__init__.py'> may need teardown
nose.suite: DEBUG: <nose.suite.ContextSuite context=api.test.test_navori> setup ancestor <module 'api.test' from '/home/damian/Malambo/api/test/__init__.py'>
nose.suite: DEBUG: ancestor <module 'api' from '/home/damian/Malambo/api/__init__.py'> may need teardown
nose.suite: DEBUG: <nose.suite.ContextSuite context=api.test.test_navori> setup ancestor <module 'api' from '/home/damian/Malambo/api/__init__.py'>
nose.suite: DEBUG: ancestor <class 'api.test.test_navori.NavoriTest'> may need teardown
nose.suite: DEBUG: ancestor <class 'api.test.test_navori.NavoriTest'> already torn down
nose.suite: DEBUG: context teardown
nose.suite: DEBUG: ancestor <module 'api.test.test_navori' from '/home/damian/Malambo/api/test/test_navori.pyc'> may need teardown
nose.suite: DEBUG: <nose.suite.ContextSuite context=api.test.test_navori> setup ancestor <module 'api.test.test_navori' from '/home/damian/Malambo/api/test/test_navori.pyc'>
nose.suite: DEBUG: ancestor <module 'api.test' from '/home/damian/Malambo/api/test/__init__.py'> may need teardown
nose.suite: DEBUG: <nose.suite.ContextSuite context=api.test.test_navori> setup ancestor <module 'api.test' from '/home/damian/Malambo/api/test/__init__.py'>
nose.suite: DEBUG: ancestor <module 'api' from '/home/damian/Malambo/api/__init__.py'> may need teardown
nose.suite: DEBUG: <nose.suite.ContextSuite context=api.test.test_navori> setup ancestor <module 'api' from '/home/damian/Malambo/api/__init__.py'>
nose.suite: DEBUG: ancestor <module 'api.test.test_navori' from '/home/damian/Malambo/api/test/test_navori.pyc'> may need teardown
nose.suite: DEBUG: <nose.suite.ContextSuite context=api.test.test_navori> setup ancestor <module 'api.test.test_navori' from '/home/damian/Malambo/api/test/test_navori.pyc'>
nose.suite: DEBUG: context teardown
nose.suite: DEBUG: ancestor <module 'api.test.test_navori' from '/home/damian/Malambo/api/test/test_navori.pyc'> may need teardown
nose.suite: DEBUG: <nose.suite.ContextSuite context=api.test.test_navori> setup ancestor <module 'api.test.test_navori' from '/home/damian/Malambo/api/test/test_navori.pyc'>
nose.suite: DEBUG: <nose.suite.ContextSuite context=api.test.test_navori> teardown context <module 'api.test.test_navori' from '/home/damian/Malambo/api/test/test_navori.pyc'>
nose.suite: DEBUG: ancestor <module 'api.test' from '/home/damian/Malambo/api/test/__init__.py'> may need teardown
nose.suite: DEBUG: <nose.suite.ContextSuite context=api.test.test_navori> setup ancestor <module 'api.test' from '/home/damian/Malambo/api/test/__init__.py'>
nose.suite: DEBUG: <nose.suite.ContextSuite context=api.test.test_navori> teardown context <module 'api.test' from '/home/damian/Malambo/api/test/__init__.py'>
nose.suite: DEBUG: ancestor <module 'api' from '/home/damian/Malambo/api/__init__.py'> may need teardown
nose.suite: DEBUG: <nose.suite.ContextSuite context=api.test.test_navori> setup ancestor <module 'api' from '/home/damian/Malambo/api/__init__.py'>
nose.suite: DEBUG: <nose.suite.ContextSuite context=api.test.test_navori> teardown context <module 'api' from '/home/damian/Malambo/api/__init__.py'>
nose.suite: DEBUG: ancestor <module 'api.test.test_navori' from '/home/damian/Malambo/api/test/test_navori.pyc'> may need teardown
nose.suite: DEBUG: ancestor <module 'api.test.test_navori' from '/home/damian/Malambo/api/test/test_navori.pyc'> already torn down
nose.config: INFO: Ignoring files matching ['^\\.', '^_', '^setup\\.py$']
nose.plugins.manager: DEBUG: Configuring plugins
nose.plugins.manager: DEBUG: Plugins enabled: [<nose.plugins.capture.Capture object at 0x7fe21fa67410>, <nose.plugins.logcapture.LogCapture object at 0x7fe21fa7b810>, <nose.plugins.deprecated.Deprecated object at 0x7fe21fa7bd10>, <nose.plugins.skip.Skip object at 0x7fe21ef2cd50>]
nose.core: DEBUG: configured Config(addPaths=True, args=(), configSection='nosetests', debug='nose,nose.importer', debugLog='nose_debug', env={}, exclude=None, files=[], firstPackageWins=False, getTestCaseNamesCompat=False, ignoreFiles=[<_sre.SRE_Pattern object at 0x7fe2216d7ab0>, <_sre.SRE_Pattern object at 0x7fe22167ee30>, <_sre.SRE_Pattern object at 0x7fe221776ab0>], ignoreFilesDefaultStrings=['^\\.', '^_', '^setup\\.py$'], include=None, includeExe=False, logStream=<open file '<stderr>', mode 'w' at 0x7fe2217be1e0>, loggingConfig=None, options=<Values at 0x7fe21ef4d5f0: {'xunit_file': 'nosetests.xml', 'enable_plugin_allmodules': None, 'multiprocess_restartworker': False, 'loggingConfig': None, 'doctestExtension': None, 'doctest_tests': None, 'enable_plugin_xunit': None, 'logcapture_clear': False, 'stopOnError': False, 'enable_plugin_id': None, 'testNames': None, 'doctestOptions': None, 'exclude': [], 'byteCompile': True, 'ignoreFiles': [], 'logcapture': True, 'addPaths': True, 'capture': True, 'xunit_testsuite_name': 'nosetests', 'logcapture_level': 'NOTSET', 'cover_xml': None, 'py3where': None, 'noSkip': False, 'enable_plugin_isolation': None, 'logcapture_filters': None, 'collect_only': None, 'failed': False, 'version': False, 'eval_attr': None, 'include': [], 'enable_plugin_profile': None, 'debugErrors': False, 'files': None, 'cover_tests': None, 'multiprocess_timeout': 10, 'testMatch': '(?:^|[\\b_\\./-])[Tt]est', 'traverseNamespace': False, 'firstPackageWins': False, 'cover_html_dir': 'cover', 'cover_branches': None, 'debugBoth': False, 'noDeprecated': False, 'cover_xml_file': 'coverage.xml', 'showPlugins': False, 'cover_erase': None, 'multiprocess_workers': 0, 'testIdFile': '.noseids', 'enable_plugin_coverage': None, 'attr': None, 'profile_sort': 'cumulative', 'doctestFixtures': None, 'logcapture_datefmt': None, 'cover_packages': None, 'verbosity': 1, 'enable_plugin_doctest': None, 'profile_stats_file': None, 'cover_inclusive': None, 'includeExe': False, 'logcapture_format': '%(name)s: %(levelname)s: %(message)s', 'debugFailures': False, 'detailedErrors': None, 'debugLog': 'nose_debug', 'doctest_result_var': None, 'cover_html': None, 'debug': 'nose,nose.importer', 'cover_min_percentage': None, 'where': None, 'profile_restrict': None}>, parser=<optparse.OptionParser instance at 0x7fe21fa64f38>, parserClass=<class optparse.OptionParser at 0x7fe220100f58>, plugins=<nose.plugins.manager.DefaultPluginManager object at 0x7fe21fa5fed0>, py3where=(), runOnInit=True, srcDirs=('lib', 'src'), stopOnError=False, stream=<open file '<stderr>', mode 'w' at 0x7fe2217be1e0>, testMatch=<_sre.SRE_Pattern object at 0x7fe21fa6a030>, testMatchPat='(?:^|[\\b_\\./-])[Tt]est', testNames=['test_navori.py'], traverseNamespace=False, verbosity=1, where=(), worker=False, workingDir='/home/damian/Malambo/api/test')
nose.importer: DEBUG: Add path /home/damian/Malambo/api/test
nose.importer: DEBUG: Add path /home/damian/Malambo/api
nose.importer: DEBUG: Add path /home/damian/Malambo
nose.importer: DEBUG: insert /home/damian/Malambo into sys.path
nose.core: DEBUG: test loader is <nose.loader.TestLoader object at 0x7fe21ef510d0>
nose.core: DEBUG: defaultTest .
nose.core: DEBUG: Test names are ['test_navori.py']
nose.core: DEBUG: createTests called with None
nose.loader: DEBUG: load from test_navori.py (None)
nose.selector: DEBUG: Test name test_navori.py resolved to file test_navori.py, module None, call None
nose.selector: DEBUG: Final resolution of test name test_navori.py: file /home/damian/Malambo/api/test/test_navori.py module api.test.test_navori call None
nose.importer: DEBUG: Import api.test.test_navori from /home/damian/Malambo
nose.importer: DEBUG: Add path /home/damian/Malambo
nose.importer: DEBUG: find module part api (api) in ['/home/damian/Malambo']
nose.importer: DEBUG: find module part test (api.test) in ['/home/damian/Malambo/api']
nose.importer: DEBUG: find module part test_navori (api.test.test_navori) in ['/home/damian/Malambo/api/test']
nose.loader: DEBUG: Load from module <module 'api.test.test_navori' from '/home/damian/Malambo/api/test/test_navori.py'>
nose.selector: DEBUG: wantClass <class 'api.test.test_navori.NavoriTest'>? True
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.addCleanup>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.addTypeEqualityFunc>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.assertAlmostEqual>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.assertAlmostEqual>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.assertDictContainsSubset>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.assertDictEqual>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.assertEqual>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.assertEqual>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.assertFalse>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.assertGreater>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.assertGreaterEqual>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.assertIn>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.assertIs>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.assertIsInstance>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.assertIsNone>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.assertIsNot>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.assertIsNotNone>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.assertItemsEqual>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.assertLess>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.assertLessEqual>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.assertListEqual>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.assertMultiLineEqual>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.assertNotAlmostEqual>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.assertNotAlmostEqual>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.assertNotEqual>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.assertNotEqual>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.assertNotIn>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.assertNotIsInstance>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.assertNotRegexpMatches>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.assertRaises>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.assertRaisesRegexp>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.assertRegexpMatches>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.assertSequenceEqual>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.assertSetEqual>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.assertTrue>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.assertTupleEqual>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.assertTrue>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.countTestCases>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.debug>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.defaultTestResult>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.doCleanups>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.fail>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.deprecated_func>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.deprecated_func>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.deprecated_func>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.deprecated_func>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.deprecated_func>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.deprecated_func>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.deprecated_func>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.id>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.run>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.setUp>? None
nose.selector: DEBUG: wantMethod <bound method type.setUpClass of <class 'api.test.test_navori.NavoriTest'>>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.shortDescription>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.skipTest>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.tearDown>? None
nose.selector: DEBUG: wantMethod <bound method type.tearDownClass of <class 'api.test.test_navori.NavoriTest'>>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.test_NavoriLogin>? True
nose.suite: DEBUG: Create suite for [<api.test.test_navori.NavoriTest testMethod=test_NavoriLogin>]
nose.suite: DEBUG: tests [<api.test.test_navori.NavoriTest testMethod=test_NavoriLogin>] context None
nose.suite: DEBUG: wrap [<api.test.test_navori.NavoriTest testMethod=test_NavoriLogin>]
nose.suite: DEBUG: wrapping test_NavoriLogin (api.test.test_navori.NavoriTest)
nose.suite: DEBUG: Context suite for [Test(<api.test.test_navori.NavoriTest testMethod=test_NavoriLogin>)] (<class 'api.test.test_navori.NavoriTest'>) (140609158716176)
nose.suite: DEBUG: suite <nose.suite.ContextSuite context=NavoriTest> has context NavoriTest
nose.suite: DEBUG: get ancestry <class 'api.test.test_navori.NavoriTest'>
nose.suite: DEBUG:  <class 'api.test.test_navori.NavoriTest'> ancestors ['api', 'test', 'test_navori']
nose: DEBUG: __import__ api.test.test_navori
nose: DEBUG: resolve: ['test', 'test_navori'], api.test.test_navori, <module 'api' from '/home/damian/Malambo/api/__init__.pyc'>, <module 'api' from '/home/damian/Malambo/api/__init__.pyc'>
nose.suite: DEBUG: suite <nose.suite.ContextSuite context=NavoriTest> has ancestor api.test.test_navori
nose.suite: DEBUG:  <class 'api.test.test_navori.NavoriTest'> ancestors ['api', 'test']
nose: DEBUG: __import__ api.test
nose: DEBUG: resolve: ['test'], api.test, <module 'api' from '/home/damian/Malambo/api/__init__.pyc'>, <module 'api' from '/home/damian/Malambo/api/__init__.pyc'>
nose.suite: DEBUG: suite <nose.suite.ContextSuite context=NavoriTest> has ancestor api.test
nose.suite: DEBUG:  <class 'api.test.test_navori.NavoriTest'> ancestors ['api']
nose: DEBUG: __import__ api
nose: DEBUG: resolve: [], api, <module 'api' from '/home/damian/Malambo/api/__init__.pyc'>, <module 'api' from '/home/damian/Malambo/api/__init__.pyc'>
nose.suite: DEBUG: suite <nose.suite.ContextSuite context=NavoriTest> has ancestor api
nose.suite: DEBUG: Create suite for <nose.suite.ContextList object at 0x7fe21e775710>
nose.suite: DEBUG: tests <nose.suite.ContextList object at 0x7fe21e775710> context <module 'api.test.test_navori' from '/home/damian/Malambo/api/test/test_navori.py'>
nose.suite: DEBUG: Context suite for <nose.suite.ContextList object at 0x7fe21e775710> (<module 'api.test.test_navori' from '/home/damian/Malambo/api/test/test_navori.py'>) (140609158714768)
nose.suite: DEBUG: suite <nose.suite.ContextSuite context=api.test.test_navori> has context api.test.test_navori
nose.suite: DEBUG: get ancestry <module 'api.test.test_navori' from '/home/damian/Malambo/api/test/test_navori.py'>
nose.suite: DEBUG:  <module 'api.test.test_navori' from '/home/damian/Malambo/api/test/test_navori.py'> ancestors ['api', 'test']
nose: DEBUG: __import__ api.test
nose: DEBUG: resolve: ['test'], api.test, <module 'api' from '/home/damian/Malambo/api/__init__.pyc'>, <module 'api' from '/home/damian/Malambo/api/__init__.pyc'>
nose.suite: DEBUG: suite <nose.suite.ContextSuite context=api.test.test_navori> has ancestor api.test
nose.suite: DEBUG:  <module 'api.test.test_navori' from '/home/damian/Malambo/api/test/test_navori.py'> ancestors ['api']
nose: DEBUG: __import__ api
nose: DEBUG: resolve: [], api, <module 'api' from '/home/damian/Malambo/api/__init__.pyc'>, <module 'api' from '/home/damian/Malambo/api/__init__.pyc'>
nose.suite: DEBUG: suite <nose.suite.ContextSuite context=api.test.test_navori> has ancestor api
nose.suite: DEBUG: Create suite for [<nose.suite.ContextSuite context=api.test.test_navori>]
nose.suite: DEBUG: tests [<nose.suite.ContextSuite context=api.test.test_navori>] context None
nose.suite: DEBUG: wrap [<nose.suite.ContextSuite context=api.test.test_navori>]
nose.suite: DEBUG: wrapping <nose.suite.ContextSuite context=api.test.test_navori>
nose.suite: DEBUG: Context suite for [<nose.suite.ContextSuite context=api.test.test_navori>] (<module 'api.test.test_navori' from '/home/damian/Malambo/api/test/test_navori.py'>) (140609158714512)
nose.suite: DEBUG: suite <nose.suite.ContextSuite context=api.test.test_navori> has context api.test.test_navori
nose.suite: DEBUG: get ancestry <module 'api.test.test_navori' from '/home/damian/Malambo/api/test/test_navori.py'>
nose.suite: DEBUG:  <module 'api.test.test_navori' from '/home/damian/Malambo/api/test/test_navori.py'> ancestors ['api', 'test']
nose: DEBUG: __import__ api.test
nose: DEBUG: resolve: ['test'], api.test, <module 'api' from '/home/damian/Malambo/api/__init__.pyc'>, <module 'api' from '/home/damian/Malambo/api/__init__.pyc'>
nose.suite: DEBUG: suite <nose.suite.ContextSuite context=api.test.test_navori> has ancestor api.test
nose.suite: DEBUG:  <module 'api.test.test_navori' from '/home/damian/Malambo/api/test/test_navori.py'> ancestors ['api']
nose: DEBUG: __import__ api
nose: DEBUG: resolve: [], api, <module 'api' from '/home/damian/Malambo/api/__init__.pyc'>, <module 'api' from '/home/damian/Malambo/api/__init__.pyc'>
nose.suite: DEBUG: suite <nose.suite.ContextSuite context=api.test.test_navori> has ancestor api
nose.core: DEBUG: runTests called
nose.suite: DEBUG: suite 140609158714512 (<nose.suite.ContextSuite context=api.test.test_navori>) run called, tests: <generator object _get_wrapped_tests at 0x7fe21ea760f0>
nose.suite: DEBUG: suite 140609158714512 setUp called, tests: <generator object _get_wrapped_tests at 0x7fe21ea760f0>
nose.suite: DEBUG: tests in 140609158714512?
nose.suite: DEBUG: ancestor <module 'api' from '/home/damian/Malambo/api/__init__.pyc'> may need setup
nose.suite: DEBUG: ancestor <module 'api' from '/home/damian/Malambo/api/__init__.pyc'> does need setup
nose.suite: DEBUG: <nose.suite.ContextSuite context=api.test.test_navori> setup context <module 'api' from '/home/damian/Malambo/api/__init__.pyc'>
nose.suite: DEBUG: ancestor <module 'api.test' from '/home/damian/Malambo/api/test/__init__.pyc'> may need setup
nose.suite: DEBUG: ancestor <module 'api.test' from '/home/damian/Malambo/api/test/__init__.pyc'> does need setup
nose.suite: DEBUG: <nose.suite.ContextSuite context=api.test.test_navori> setup context <module 'api.test' from '/home/damian/Malambo/api/test/__init__.pyc'>
nose.suite: DEBUG: ancestor <module 'api.test.test_navori' from '/home/damian/Malambo/api/test/test_navori.py'> may need setup
nose.suite: DEBUG: ancestor <module 'api.test.test_navori' from '/home/damian/Malambo/api/test/test_navori.py'> does need setup
nose.suite: DEBUG: <nose.suite.ContextSuite context=api.test.test_navori> setup context <module 'api.test.test_navori' from '/home/damian/Malambo/api/test/test_navori.py'>
nose.suite: DEBUG: completed suite setup
nose.suite: DEBUG: precache is [<nose.suite.ContextSuite context=api.test.test_navori>]
nose.suite: DEBUG: suite 140609158714768 (<nose.suite.ContextSuite context=api.test.test_navori>) run called, tests: <generator object _get_wrapped_tests at 0x7fe21ea761e0>
nose.suite: DEBUG: suite 140609158714768 setUp called, tests: <generator object _get_wrapped_tests at 0x7fe21ea761e0>
nose.suite: DEBUG: tests in 140609158714768?
nose.suite: DEBUG: ancestor <module 'api' from '/home/damian/Malambo/api/__init__.pyc'> may need setup
nose.suite: DEBUG: ancestor <module 'api.test' from '/home/damian/Malambo/api/test/__init__.pyc'> may need setup
nose.suite: DEBUG: ancestor <module 'api.test.test_navori' from '/home/damian/Malambo/api/test/test_navori.py'> may need setup
nose.suite: DEBUG: completed suite setup
nose.suite: DEBUG: precache is [<nose.suite.ContextSuite context=NavoriTest>]
nose.suite: DEBUG: suite 140609158716176 (<nose.suite.ContextSuite context=NavoriTest>) run called, tests: <generator object _get_wrapped_tests at 0x7fe21ea76a00>
nose.suite: DEBUG: suite 140609158716176 setUp called, tests: <generator object _get_wrapped_tests at 0x7fe21ea76a00>
nose.suite: DEBUG: tests in 140609158716176?
nose.suite: DEBUG: ancestor <module 'api' from '/home/damian/Malambo/api/__init__.pyc'> may need setup
nose.suite: DEBUG: ancestor <module 'api.test' from '/home/damian/Malambo/api/test/__init__.pyc'> may need setup
nose.suite: DEBUG: ancestor <module 'api.test.test_navori' from '/home/damian/Malambo/api/test/test_navori.py'> may need setup
nose.suite: DEBUG: ancestor <class 'api.test.test_navori.NavoriTest'> may need setup
nose.suite: DEBUG: ancestor <class 'api.test.test_navori.NavoriTest'> does need setup
nose.suite: DEBUG: <nose.suite.ContextSuite context=NavoriTest> setup context <class 'api.test.test_navori.NavoriTest'>
nose: DEBUG: call fixture <class 'api.test.test_navori.NavoriTest'>.setUpClass
nose.suite: DEBUG: completed suite setup
nose.suite: DEBUG: precache is [Test(<api.test.test_navori.NavoriTest testMethod=test_NavoriLogin>)]
nose.suite: DEBUG: context teardown
nose.suite: DEBUG: ancestor <class 'api.test.test_navori.NavoriTest'> may need teardown
nose.suite: DEBUG: <nose.suite.ContextSuite context=NavoriTest> setup ancestor <class 'api.test.test_navori.NavoriTest'>
nose.suite: DEBUG: <nose.suite.ContextSuite context=NavoriTest> teardown context <class 'api.test.test_navori.NavoriTest'>
nose: DEBUG: call fixture <class 'api.test.test_navori.NavoriTest'>.tearDownClass
nose.suite: DEBUG: ancestor <module 'api.test.test_navori' from '/home/damian/Malambo/api/test/test_navori.py'> may need teardown
nose.suite: DEBUG: <nose.suite.ContextSuite context=api.test.test_navori> setup ancestor <module 'api.test.test_navori' from '/home/damian/Malambo/api/test/test_navori.py'>
nose.suite: DEBUG: ancestor <module 'api.test' from '/home/damian/Malambo/api/test/__init__.pyc'> may need teardown
nose.suite: DEBUG: <nose.suite.ContextSuite context=api.test.test_navori> setup ancestor <module 'api.test' from '/home/damian/Malambo/api/test/__init__.pyc'>
nose.suite: DEBUG: ancestor <module 'api' from '/home/damian/Malambo/api/__init__.pyc'> may need teardown
nose.suite: DEBUG: <nose.suite.ContextSuite context=api.test.test_navori> setup ancestor <module 'api' from '/home/damian/Malambo/api/__init__.pyc'>
nose.suite: DEBUG: ancestor <class 'api.test.test_navori.NavoriTest'> may need teardown
nose.suite: DEBUG: ancestor <class 'api.test.test_navori.NavoriTest'> already torn down
nose.suite: DEBUG: context teardown
nose.suite: DEBUG: ancestor <module 'api.test.test_navori' from '/home/damian/Malambo/api/test/test_navori.py'> may need teardown
nose.suite: DEBUG: <nose.suite.ContextSuite context=api.test.test_navori> setup ancestor <module 'api.test.test_navori' from '/home/damian/Malambo/api/test/test_navori.py'>
nose.suite: DEBUG: ancestor <module 'api.test' from '/home/damian/Malambo/api/test/__init__.pyc'> may need teardown
nose.suite: DEBUG: <nose.suite.ContextSuite context=api.test.test_navori> setup ancestor <module 'api.test' from '/home/damian/Malambo/api/test/__init__.pyc'>
nose.suite: DEBUG: ancestor <module 'api' from '/home/damian/Malambo/api/__init__.pyc'> may need teardown
nose.suite: DEBUG: <nose.suite.ContextSuite context=api.test.test_navori> setup ancestor <module 'api' from '/home/damian/Malambo/api/__init__.pyc'>
nose.suite: DEBUG: ancestor <module 'api.test.test_navori' from '/home/damian/Malambo/api/test/test_navori.py'> may need teardown
nose.suite: DEBUG: <nose.suite.ContextSuite context=api.test.test_navori> setup ancestor <module 'api.test.test_navori' from '/home/damian/Malambo/api/test/test_navori.py'>
nose.suite: DEBUG: context teardown
nose.suite: DEBUG: ancestor <module 'api.test.test_navori' from '/home/damian/Malambo/api/test/test_navori.py'> may need teardown
nose.suite: DEBUG: <nose.suite.ContextSuite context=api.test.test_navori> setup ancestor <module 'api.test.test_navori' from '/home/damian/Malambo/api/test/test_navori.py'>
nose.suite: DEBUG: <nose.suite.ContextSuite context=api.test.test_navori> teardown context <module 'api.test.test_navori' from '/home/damian/Malambo/api/test/test_navori.py'>
nose.suite: DEBUG: ancestor <module 'api.test' from '/home/damian/Malambo/api/test/__init__.pyc'> may need teardown
nose.suite: DEBUG: <nose.suite.ContextSuite context=api.test.test_navori> setup ancestor <module 'api.test' from '/home/damian/Malambo/api/test/__init__.pyc'>
nose.suite: DEBUG: <nose.suite.ContextSuite context=api.test.test_navori> teardown context <module 'api.test' from '/home/damian/Malambo/api/test/__init__.pyc'>
nose.suite: DEBUG: ancestor <module 'api' from '/home/damian/Malambo/api/__init__.pyc'> may need teardown
nose.suite: DEBUG: <nose.suite.ContextSuite context=api.test.test_navori> setup ancestor <module 'api' from '/home/damian/Malambo/api/__init__.pyc'>
nose.suite: DEBUG: <nose.suite.ContextSuite context=api.test.test_navori> teardown context <module 'api' from '/home/damian/Malambo/api/__init__.pyc'>
nose.suite: DEBUG: ancestor <module 'api.test.test_navori' from '/home/damian/Malambo/api/test/test_navori.py'> may need teardown
nose.suite: DEBUG: ancestor <module 'api.test.test_navori' from '/home/damian/Malambo/api/test/test_navori.py'> already torn down
nose.config: INFO: Ignoring files matching ['^\\.', '^_', '^setup\\.py$']
nose.plugins.manager: DEBUG: Configuring plugins
nose.plugins.manager: DEBUG: Plugins enabled: [<nose.plugins.capture.Capture object at 0x7f445a4ef410>, <nose.plugins.logcapture.LogCapture object at 0x7f445a503810>, <nose.plugins.deprecated.Deprecated object at 0x7f445a503d10>, <nose.plugins.skip.Skip object at 0x7f44599b4d50>]
nose.core: DEBUG: configured Config(addPaths=True, args=(), configSection='nosetests', debug='nose,nose.importer', debugLog='nose_debug', env={}, exclude=None, files=[], firstPackageWins=False, getTestCaseNamesCompat=False, ignoreFiles=[<_sre.SRE_Pattern object at 0x7f445c15fab0>, <_sre.SRE_Pattern object at 0x7f445c106e30>, <_sre.SRE_Pattern object at 0x7f445c1feab0>], ignoreFilesDefaultStrings=['^\\.', '^_', '^setup\\.py$'], include=None, includeExe=False, logStream=<open file '<stderr>', mode 'w' at 0x7f445c2461e0>, loggingConfig=None, options=<Values at 0x7f44599d55f0: {'xunit_file': 'nosetests.xml', 'enable_plugin_allmodules': None, 'multiprocess_restartworker': False, 'loggingConfig': None, 'doctestExtension': None, 'doctest_tests': None, 'enable_plugin_xunit': None, 'logcapture_clear': False, 'stopOnError': False, 'enable_plugin_id': None, 'testNames': None, 'doctestOptions': None, 'exclude': [], 'byteCompile': True, 'ignoreFiles': [], 'logcapture': True, 'addPaths': True, 'capture': True, 'xunit_testsuite_name': 'nosetests', 'logcapture_level': 'NOTSET', 'cover_xml': None, 'py3where': None, 'noSkip': False, 'enable_plugin_isolation': None, 'logcapture_filters': None, 'collect_only': None, 'failed': False, 'version': False, 'eval_attr': None, 'include': [], 'enable_plugin_profile': None, 'debugErrors': False, 'files': None, 'cover_tests': None, 'multiprocess_timeout': 10, 'testMatch': '(?:^|[\\b_\\./-])[Tt]est', 'traverseNamespace': False, 'firstPackageWins': False, 'cover_html_dir': 'cover', 'cover_branches': None, 'debugBoth': False, 'noDeprecated': False, 'cover_xml_file': 'coverage.xml', 'showPlugins': False, 'cover_erase': None, 'multiprocess_workers': 0, 'testIdFile': '.noseids', 'enable_plugin_coverage': None, 'attr': None, 'profile_sort': 'cumulative', 'doctestFixtures': None, 'logcapture_datefmt': None, 'cover_packages': None, 'verbosity': 1, 'enable_plugin_doctest': None, 'profile_stats_file': None, 'cover_inclusive': None, 'includeExe': False, 'logcapture_format': '%(name)s: %(levelname)s: %(message)s', 'debugFailures': False, 'detailedErrors': None, 'debugLog': 'nose_debug', 'doctest_result_var': None, 'cover_html': None, 'debug': 'nose,nose.importer', 'cover_min_percentage': None, 'where': None, 'profile_restrict': None}>, parser=<optparse.OptionParser instance at 0x7f445a4ecf38>, parserClass=<class optparse.OptionParser at 0x7f445ab88f58>, plugins=<nose.plugins.manager.DefaultPluginManager object at 0x7f445a4e7ed0>, py3where=(), runOnInit=True, srcDirs=('lib', 'src'), stopOnError=False, stream=<open file '<stderr>', mode 'w' at 0x7f445c2461e0>, testMatch=<_sre.SRE_Pattern object at 0x7f445a4f2030>, testMatchPat='(?:^|[\\b_\\./-])[Tt]est', testNames=['test_navori.py'], traverseNamespace=False, verbosity=1, where=(), worker=False, workingDir='/home/damian/Malambo/api/test')
nose.importer: DEBUG: Add path /home/damian/Malambo/api/test
nose.importer: DEBUG: Add path /home/damian/Malambo/api
nose.importer: DEBUG: Add path /home/damian/Malambo
nose.importer: DEBUG: insert /home/damian/Malambo into sys.path
nose.core: DEBUG: test loader is <nose.loader.TestLoader object at 0x7f44599d90d0>
nose.core: DEBUG: defaultTest .
nose.core: DEBUG: Test names are ['test_navori.py']
nose.core: DEBUG: createTests called with None
nose.loader: DEBUG: load from test_navori.py (None)
nose.selector: DEBUG: Test name test_navori.py resolved to file test_navori.py, module None, call None
nose.selector: DEBUG: Final resolution of test name test_navori.py: file /home/damian/Malambo/api/test/test_navori.py module api.test.test_navori call None
nose.importer: DEBUG: Import api.test.test_navori from /home/damian/Malambo
nose.importer: DEBUG: Add path /home/damian/Malambo
nose.importer: DEBUG: find module part api (api) in ['/home/damian/Malambo']
nose.importer: DEBUG: find module part test (api.test) in ['/home/damian/Malambo/api']
nose.importer: DEBUG: find module part test_navori (api.test.test_navori) in ['/home/damian/Malambo/api/test']
nose.failure: DEBUG: A failure! <type 'exceptions.ImportError'> cannot import name Navori ['  File "/usr/local/lib/python2.7/dist-packages/nose/loader.py", line 418, in loadTestsFromName\n    addr.filename, addr.module)\n', '  File "/usr/local/lib/python2.7/dist-packages/nose/importer.py", line 47, in importFromPath\n    return self.importFromDir(dir_path, fqname)\n', '  File "/usr/local/lib/python2.7/dist-packages/nose/importer.py", line 94, in importFromDir\n    mod = load_module(part_fqname, fh, filename, desc)\n', '  File "/home/damian/Malambo/api/test/test_navori.py", line 2, in <module>\n    from api.navori import Navori\n']
nose.suite: DEBUG: Create suite for [<nose.failure.Failure testMethod=runTest>]
nose.suite: DEBUG: tests [<nose.failure.Failure testMethod=runTest>] context None
nose.suite: DEBUG: wrap [<nose.failure.Failure testMethod=runTest>]
nose.suite: DEBUG: wrapping Failure: ImportError (cannot import name Navori)
nose.suite: DEBUG: Context suite for [Test(<nose.failure.Failure testMethod=runTest>)] (<class 'nose.failure.Failure'>) (139931532950864)
nose.suite: DEBUG: suite <nose.suite.ContextSuite context=Failure> has context Failure
nose.suite: DEBUG: get ancestry <class 'nose.failure.Failure'>
nose.suite: DEBUG:  <class 'nose.failure.Failure'> ancestors ['nose', 'failure']
nose: DEBUG: __import__ nose.failure
nose: DEBUG: resolve: ['failure'], nose.failure, <module 'nose' from '/usr/local/lib/python2.7/dist-packages/nose/__init__.pyc'>, <module 'nose' from '/usr/local/lib/python2.7/dist-packages/nose/__init__.pyc'>
nose.suite: DEBUG: suite <nose.suite.ContextSuite context=Failure> has ancestor nose.failure
nose.suite: DEBUG:  <class 'nose.failure.Failure'> ancestors ['nose']
nose: DEBUG: __import__ nose
nose: DEBUG: resolve: [], nose, <module 'nose' from '/usr/local/lib/python2.7/dist-packages/nose/__init__.pyc'>, <module 'nose' from '/usr/local/lib/python2.7/dist-packages/nose/__init__.pyc'>
nose.suite: DEBUG: suite <nose.suite.ContextSuite context=Failure> has ancestor nose
nose.suite: DEBUG: Create suite for [<nose.suite.ContextSuite context=Failure>]
nose.suite: DEBUG: tests [<nose.suite.ContextSuite context=Failure>] context None
nose.suite: DEBUG: wrap [<nose.suite.ContextSuite context=Failure>]
nose.suite: DEBUG: wrapping <nose.suite.ContextSuite context=Failure>
nose.suite: DEBUG: Context suite for [<nose.suite.ContextSuite context=Failure>] (<class 'nose.failure.Failure'>) (139931538003088)
nose.suite: DEBUG: suite <nose.suite.ContextSuite context=Failure> has context Failure
nose.suite: DEBUG: get ancestry <class 'nose.failure.Failure'>
nose.suite: DEBUG:  <class 'nose.failure.Failure'> ancestors ['nose', 'failure']
nose: DEBUG: __import__ nose.failure
nose: DEBUG: resolve: ['failure'], nose.failure, <module 'nose' from '/usr/local/lib/python2.7/dist-packages/nose/__init__.pyc'>, <module 'nose' from '/usr/local/lib/python2.7/dist-packages/nose/__init__.pyc'>
nose.suite: DEBUG: suite <nose.suite.ContextSuite context=Failure> has ancestor nose.failure
nose.suite: DEBUG:  <class 'nose.failure.Failure'> ancestors ['nose']
nose: DEBUG: __import__ nose
nose: DEBUG: resolve: [], nose, <module 'nose' from '/usr/local/lib/python2.7/dist-packages/nose/__init__.pyc'>, <module 'nose' from '/usr/local/lib/python2.7/dist-packages/nose/__init__.pyc'>
nose.suite: DEBUG: suite <nose.suite.ContextSuite context=Failure> has ancestor nose
nose.core: DEBUG: runTests called
nose.suite: DEBUG: suite 139931538003088 (<nose.suite.ContextSuite context=Failure>) run called, tests: <generator object _get_wrapped_tests at 0x7f445950f500>
nose.suite: DEBUG: suite 139931538003088 setUp called, tests: <generator object _get_wrapped_tests at 0x7f445950f6e0>
nose.suite: DEBUG: tests in 139931538003088?
nose.suite: DEBUG: ancestor <module 'nose' from '/usr/local/lib/python2.7/dist-packages/nose/__init__.pyc'> may need setup
nose.suite: DEBUG: ancestor <module 'nose' from '/usr/local/lib/python2.7/dist-packages/nose/__init__.pyc'> does need setup
nose.suite: DEBUG: <nose.suite.ContextSuite context=Failure> setup context <module 'nose' from '/usr/local/lib/python2.7/dist-packages/nose/__init__.pyc'>
nose.suite: DEBUG: ancestor <module 'nose.failure' from '/usr/local/lib/python2.7/dist-packages/nose/failure.pyc'> may need setup
nose.suite: DEBUG: ancestor <module 'nose.failure' from '/usr/local/lib/python2.7/dist-packages/nose/failure.pyc'> does need setup
nose.suite: DEBUG: <nose.suite.ContextSuite context=Failure> setup context <module 'nose.failure' from '/usr/local/lib/python2.7/dist-packages/nose/failure.pyc'>
nose.suite: DEBUG: ancestor <class 'nose.failure.Failure'> may need setup
nose.suite: DEBUG: ancestor <class 'nose.failure.Failure'> does need setup
nose.suite: DEBUG: <nose.suite.ContextSuite context=Failure> setup context <class 'nose.failure.Failure'>
nose: DEBUG: call fixture <class 'nose.failure.Failure'>.setUpClass
nose.suite: DEBUG: completed suite setup
nose.suite: DEBUG: precache is [<nose.suite.ContextSuite context=Failure>]
nose.suite: DEBUG: suite 139931532950864 (<nose.suite.ContextSuite context=Failure>) run called, tests: <generator object _get_wrapped_tests at 0x7f445950f7d0>
nose.suite: DEBUG: suite 139931532950864 setUp called, tests: <generator object _get_wrapped_tests at 0x7f445950f7d0>
nose.suite: DEBUG: tests in 139931532950864?
nose.suite: DEBUG: ancestor <module 'nose' from '/usr/local/lib/python2.7/dist-packages/nose/__init__.pyc'> may need setup
nose.suite: DEBUG: ancestor <module 'nose.failure' from '/usr/local/lib/python2.7/dist-packages/nose/failure.pyc'> may need setup
nose.suite: DEBUG: ancestor <class 'nose.failure.Failure'> may need setup
nose.suite: DEBUG: completed suite setup
nose.suite: DEBUG: precache is [Test(<nose.failure.Failure testMethod=runTest>)]
nose.suite: DEBUG: context teardown
nose.suite: DEBUG: ancestor <class 'nose.failure.Failure'> may need teardown
nose.suite: DEBUG: <nose.suite.ContextSuite context=Failure> setup ancestor <class 'nose.failure.Failure'>
nose.suite: DEBUG: ancestor <module 'nose.failure' from '/usr/local/lib/python2.7/dist-packages/nose/failure.pyc'> may need teardown
nose.suite: DEBUG: <nose.suite.ContextSuite context=Failure> setup ancestor <module 'nose.failure' from '/usr/local/lib/python2.7/dist-packages/nose/failure.pyc'>
nose.suite: DEBUG: ancestor <module 'nose' from '/usr/local/lib/python2.7/dist-packages/nose/__init__.pyc'> may need teardown
nose.suite: DEBUG: <nose.suite.ContextSuite context=Failure> setup ancestor <module 'nose' from '/usr/local/lib/python2.7/dist-packages/nose/__init__.pyc'>
nose.suite: DEBUG: ancestor <class 'nose.failure.Failure'> may need teardown
nose.suite: DEBUG: <nose.suite.ContextSuite context=Failure> setup ancestor <class 'nose.failure.Failure'>
nose.suite: DEBUG: context teardown
nose.suite: DEBUG: ancestor <class 'nose.failure.Failure'> may need teardown
nose.suite: DEBUG: <nose.suite.ContextSuite context=Failure> setup ancestor <class 'nose.failure.Failure'>
nose.suite: DEBUG: <nose.suite.ContextSuite context=Failure> teardown context <class 'nose.failure.Failure'>
nose: DEBUG: call fixture <class 'nose.failure.Failure'>.tearDownClass
nose.suite: DEBUG: ancestor <module 'nose.failure' from '/usr/local/lib/python2.7/dist-packages/nose/failure.pyc'> may need teardown
nose.suite: DEBUG: <nose.suite.ContextSuite context=Failure> setup ancestor <module 'nose.failure' from '/usr/local/lib/python2.7/dist-packages/nose/failure.pyc'>
nose.suite: DEBUG: <nose.suite.ContextSuite context=Failure> teardown context <module 'nose.failure' from '/usr/local/lib/python2.7/dist-packages/nose/failure.pyc'>
nose.suite: DEBUG: ancestor <module 'nose' from '/usr/local/lib/python2.7/dist-packages/nose/__init__.pyc'> may need teardown
nose.suite: DEBUG: <nose.suite.ContextSuite context=Failure> setup ancestor <module 'nose' from '/usr/local/lib/python2.7/dist-packages/nose/__init__.pyc'>
nose.suite: DEBUG: <nose.suite.ContextSuite context=Failure> teardown context <module 'nose' from '/usr/local/lib/python2.7/dist-packages/nose/__init__.pyc'>
nose.suite: DEBUG: ancestor <class 'nose.failure.Failure'> may need teardown
nose.suite: DEBUG: ancestor <class 'nose.failure.Failure'> already torn down
nose.config: INFO: Ignoring files matching ['^\\.', '^_', '^setup\\.py$']
nose.plugins.manager: DEBUG: Configuring plugins
nose.plugins.manager: DEBUG: Plugins enabled: [<nose.plugins.capture.Capture object at 0x7f7d5c10c410>, <nose.plugins.logcapture.LogCapture object at 0x7f7d5c120810>, <nose.plugins.deprecated.Deprecated object at 0x7f7d5c120d10>, <nose.plugins.skip.Skip object at 0x7f7d5b5d1d50>]
nose.core: DEBUG: configured Config(addPaths=True, args=(), configSection='nosetests', debug='nose,nose.importer', debugLog='nose_debug', env={}, exclude=None, files=[], firstPackageWins=False, getTestCaseNamesCompat=False, ignoreFiles=[<_sre.SRE_Pattern object at 0x7f7d5dd7cab0>, <_sre.SRE_Pattern object at 0x7f7d5dd23e30>, <_sre.SRE_Pattern object at 0x7f7d5de1bab0>], ignoreFilesDefaultStrings=['^\\.', '^_', '^setup\\.py$'], include=None, includeExe=False, logStream=<open file '<stderr>', mode 'w' at 0x7f7d5de631e0>, loggingConfig=None, options=<Values at 0x7f7d5b5f25f0: {'xunit_file': 'nosetests.xml', 'enable_plugin_allmodules': None, 'multiprocess_restartworker': False, 'loggingConfig': None, 'doctestExtension': None, 'doctest_tests': None, 'enable_plugin_xunit': None, 'logcapture_clear': False, 'stopOnError': False, 'enable_plugin_id': None, 'testNames': None, 'doctestOptions': None, 'exclude': [], 'byteCompile': True, 'ignoreFiles': [], 'logcapture': True, 'addPaths': True, 'capture': True, 'xunit_testsuite_name': 'nosetests', 'logcapture_level': 'NOTSET', 'cover_xml': None, 'py3where': None, 'noSkip': False, 'enable_plugin_isolation': None, 'logcapture_filters': None, 'collect_only': None, 'failed': False, 'version': False, 'eval_attr': None, 'include': [], 'enable_plugin_profile': None, 'debugErrors': False, 'files': None, 'cover_tests': None, 'multiprocess_timeout': 10, 'testMatch': '(?:^|[\\b_\\./-])[Tt]est', 'traverseNamespace': False, 'firstPackageWins': False, 'cover_html_dir': 'cover', 'cover_branches': None, 'debugBoth': False, 'noDeprecated': False, 'cover_xml_file': 'coverage.xml', 'showPlugins': False, 'cover_erase': None, 'multiprocess_workers': 0, 'testIdFile': '.noseids', 'enable_plugin_coverage': None, 'attr': None, 'profile_sort': 'cumulative', 'doctestFixtures': None, 'logcapture_datefmt': None, 'cover_packages': None, 'verbosity': 1, 'enable_plugin_doctest': None, 'profile_stats_file': None, 'cover_inclusive': None, 'includeExe': False, 'logcapture_format': '%(name)s: %(levelname)s: %(message)s', 'debugFailures': False, 'detailedErrors': None, 'debugLog': 'nose_debug', 'doctest_result_var': None, 'cover_html': None, 'debug': 'nose,nose.importer', 'cover_min_percentage': None, 'where': None, 'profile_restrict': None}>, parser=<optparse.OptionParser instance at 0x7f7d5c109f38>, parserClass=<class optparse.OptionParser at 0x7f7d5c7a5f58>, plugins=<nose.plugins.manager.DefaultPluginManager object at 0x7f7d5c104ed0>, py3where=(), runOnInit=True, srcDirs=('lib', 'src'), stopOnError=False, stream=<open file '<stderr>', mode 'w' at 0x7f7d5de631e0>, testMatch=<_sre.SRE_Pattern object at 0x7f7d5c10f030>, testMatchPat='(?:^|[\\b_\\./-])[Tt]est', testNames=['test_navori.py'], traverseNamespace=False, verbosity=1, where=(), worker=False, workingDir='/home/damian/Malambo/api/test')
nose.importer: DEBUG: Add path /home/damian/Malambo/api/test
nose.importer: DEBUG: Add path /home/damian/Malambo/api
nose.importer: DEBUG: Add path /home/damian/Malambo
nose.importer: DEBUG: insert /home/damian/Malambo into sys.path
nose.core: DEBUG: test loader is <nose.loader.TestLoader object at 0x7f7d5b5f60d0>
nose.core: DEBUG: defaultTest .
nose.core: DEBUG: Test names are ['test_navori.py']
nose.core: DEBUG: createTests called with None
nose.loader: DEBUG: load from test_navori.py (None)
nose.selector: DEBUG: Test name test_navori.py resolved to file test_navori.py, module None, call None
nose.selector: DEBUG: Final resolution of test name test_navori.py: file /home/damian/Malambo/api/test/test_navori.py module api.test.test_navori call None
nose.importer: DEBUG: Import api.test.test_navori from /home/damian/Malambo
nose.importer: DEBUG: Add path /home/damian/Malambo
nose.importer: DEBUG: find module part api (api) in ['/home/damian/Malambo']
nose.importer: DEBUG: find module part test (api.test) in ['/home/damian/Malambo/api']
nose.importer: DEBUG: find module part test_navori (api.test.test_navori) in ['/home/damian/Malambo/api/test']
nose.loader: DEBUG: Load from module <module 'api.test.test_navori' from '/home/damian/Malambo/api/test/test_navori.py'>
nose.selector: DEBUG: wantClass api.navori.navori.Navori? None
nose.selector: DEBUG: wantClass <class 'api.test.test_navori.NavoriTest'>? True
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.addCleanup>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.addTypeEqualityFunc>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.assertAlmostEqual>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.assertAlmostEqual>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.assertDictContainsSubset>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.assertDictEqual>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.assertEqual>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.assertEqual>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.assertFalse>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.assertGreater>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.assertGreaterEqual>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.assertIn>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.assertIs>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.assertIsInstance>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.assertIsNone>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.assertIsNot>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.assertIsNotNone>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.assertItemsEqual>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.assertLess>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.assertLessEqual>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.assertListEqual>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.assertMultiLineEqual>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.assertNotAlmostEqual>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.assertNotAlmostEqual>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.assertNotEqual>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.assertNotEqual>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.assertNotIn>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.assertNotIsInstance>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.assertNotRegexpMatches>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.assertRaises>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.assertRaisesRegexp>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.assertRegexpMatches>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.assertSequenceEqual>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.assertSetEqual>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.assertTrue>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.assertTupleEqual>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.assertTrue>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.countTestCases>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.debug>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.defaultTestResult>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.doCleanups>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.fail>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.deprecated_func>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.deprecated_func>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.deprecated_func>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.deprecated_func>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.deprecated_func>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.deprecated_func>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.deprecated_func>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.id>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.run>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.setUp>? None
nose.selector: DEBUG: wantMethod <bound method type.setUpClass of <class 'api.test.test_navori.NavoriTest'>>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.shortDescription>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.skipTest>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.tearDown>? None
nose.selector: DEBUG: wantMethod <bound method type.tearDownClass of <class 'api.test.test_navori.NavoriTest'>>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.test_NavoriLogin>? True
nose.suite: DEBUG: Create suite for [<api.test.test_navori.NavoriTest testMethod=test_NavoriLogin>]
nose.suite: DEBUG: tests [<api.test.test_navori.NavoriTest testMethod=test_NavoriLogin>] context None
nose.suite: DEBUG: wrap [<api.test.test_navori.NavoriTest testMethod=test_NavoriLogin>]
nose.suite: DEBUG: wrapping test_NavoriLogin (api.test.test_navori.NavoriTest)
nose.suite: DEBUG: Context suite for [Test(<api.test.test_navori.NavoriTest testMethod=test_NavoriLogin>)] (<class 'api.test.test_navori.NavoriTest'>) (140176380619536)
nose.suite: DEBUG: suite <nose.suite.ContextSuite context=NavoriTest> has context NavoriTest
nose.suite: DEBUG: get ancestry <class 'api.test.test_navori.NavoriTest'>
nose.suite: DEBUG:  <class 'api.test.test_navori.NavoriTest'> ancestors ['api', 'test', 'test_navori']
nose: DEBUG: __import__ api.test.test_navori
nose: DEBUG: resolve: ['test', 'test_navori'], api.test.test_navori, <module 'api' from '/home/damian/Malambo/api/__init__.pyc'>, <module 'api' from '/home/damian/Malambo/api/__init__.pyc'>
nose.suite: DEBUG: suite <nose.suite.ContextSuite context=NavoriTest> has ancestor api.test.test_navori
nose.suite: DEBUG:  <class 'api.test.test_navori.NavoriTest'> ancestors ['api', 'test']
nose: DEBUG: __import__ api.test
nose: DEBUG: resolve: ['test'], api.test, <module 'api' from '/home/damian/Malambo/api/__init__.pyc'>, <module 'api' from '/home/damian/Malambo/api/__init__.pyc'>
nose.suite: DEBUG: suite <nose.suite.ContextSuite context=NavoriTest> has ancestor api.test
nose.suite: DEBUG:  <class 'api.test.test_navori.NavoriTest'> ancestors ['api']
nose: DEBUG: __import__ api
nose: DEBUG: resolve: [], api, <module 'api' from '/home/damian/Malambo/api/__init__.pyc'>, <module 'api' from '/home/damian/Malambo/api/__init__.pyc'>
nose.suite: DEBUG: suite <nose.suite.ContextSuite context=NavoriTest> has ancestor api
nose.suite: DEBUG: Create suite for <nose.suite.ContextList object at 0x7f7d5ae1a710>
nose.suite: DEBUG: tests <nose.suite.ContextList object at 0x7f7d5ae1a710> context <module 'api.test.test_navori' from '/home/damian/Malambo/api/test/test_navori.py'>
nose.suite: DEBUG: Context suite for <nose.suite.ContextList object at 0x7f7d5ae1a710> (<module 'api.test.test_navori' from '/home/damian/Malambo/api/test/test_navori.py'>) (140176380618128)
nose.suite: DEBUG: suite <nose.suite.ContextSuite context=api.test.test_navori> has context api.test.test_navori
nose.suite: DEBUG: get ancestry <module 'api.test.test_navori' from '/home/damian/Malambo/api/test/test_navori.py'>
nose.suite: DEBUG:  <module 'api.test.test_navori' from '/home/damian/Malambo/api/test/test_navori.py'> ancestors ['api', 'test']
nose: DEBUG: __import__ api.test
nose: DEBUG: resolve: ['test'], api.test, <module 'api' from '/home/damian/Malambo/api/__init__.pyc'>, <module 'api' from '/home/damian/Malambo/api/__init__.pyc'>
nose.suite: DEBUG: suite <nose.suite.ContextSuite context=api.test.test_navori> has ancestor api.test
nose.suite: DEBUG:  <module 'api.test.test_navori' from '/home/damian/Malambo/api/test/test_navori.py'> ancestors ['api']
nose: DEBUG: __import__ api
nose: DEBUG: resolve: [], api, <module 'api' from '/home/damian/Malambo/api/__init__.pyc'>, <module 'api' from '/home/damian/Malambo/api/__init__.pyc'>
nose.suite: DEBUG: suite <nose.suite.ContextSuite context=api.test.test_navori> has ancestor api
nose.suite: DEBUG: Create suite for [<nose.suite.ContextSuite context=api.test.test_navori>]
nose.suite: DEBUG: tests [<nose.suite.ContextSuite context=api.test.test_navori>] context None
nose.suite: DEBUG: wrap [<nose.suite.ContextSuite context=api.test.test_navori>]
nose.suite: DEBUG: wrapping <nose.suite.ContextSuite context=api.test.test_navori>
nose.suite: DEBUG: Context suite for [<nose.suite.ContextSuite context=api.test.test_navori>] (<module 'api.test.test_navori' from '/home/damian/Malambo/api/test/test_navori.py'>) (140176380617872)
nose.suite: DEBUG: suite <nose.suite.ContextSuite context=api.test.test_navori> has context api.test.test_navori
nose.suite: DEBUG: get ancestry <module 'api.test.test_navori' from '/home/damian/Malambo/api/test/test_navori.py'>
nose.suite: DEBUG:  <module 'api.test.test_navori' from '/home/damian/Malambo/api/test/test_navori.py'> ancestors ['api', 'test']
nose: DEBUG: __import__ api.test
nose: DEBUG: resolve: ['test'], api.test, <module 'api' from '/home/damian/Malambo/api/__init__.pyc'>, <module 'api' from '/home/damian/Malambo/api/__init__.pyc'>
nose.suite: DEBUG: suite <nose.suite.ContextSuite context=api.test.test_navori> has ancestor api.test
nose.suite: DEBUG:  <module 'api.test.test_navori' from '/home/damian/Malambo/api/test/test_navori.py'> ancestors ['api']
nose: DEBUG: __import__ api
nose: DEBUG: resolve: [], api, <module 'api' from '/home/damian/Malambo/api/__init__.pyc'>, <module 'api' from '/home/damian/Malambo/api/__init__.pyc'>
nose.suite: DEBUG: suite <nose.suite.ContextSuite context=api.test.test_navori> has ancestor api
nose.core: DEBUG: runTests called
nose.suite: DEBUG: suite 140176380617872 (<nose.suite.ContextSuite context=api.test.test_navori>) run called, tests: <generator object _get_wrapped_tests at 0x7f7d5b5e9fa0>
nose.suite: DEBUG: suite 140176380617872 setUp called, tests: <generator object _get_wrapped_tests at 0x7f7d5b5e9fa0>
nose.suite: DEBUG: tests in 140176380617872?
nose.suite: DEBUG: ancestor <module 'api' from '/home/damian/Malambo/api/__init__.pyc'> may need setup
nose.suite: DEBUG: ancestor <module 'api' from '/home/damian/Malambo/api/__init__.pyc'> does need setup
nose.suite: DEBUG: <nose.suite.ContextSuite context=api.test.test_navori> setup context <module 'api' from '/home/damian/Malambo/api/__init__.pyc'>
nose.suite: DEBUG: ancestor <module 'api.test' from '/home/damian/Malambo/api/test/__init__.pyc'> may need setup
nose.suite: DEBUG: ancestor <module 'api.test' from '/home/damian/Malambo/api/test/__init__.pyc'> does need setup
nose.suite: DEBUG: <nose.suite.ContextSuite context=api.test.test_navori> setup context <module 'api.test' from '/home/damian/Malambo/api/test/__init__.pyc'>
nose.suite: DEBUG: ancestor <module 'api.test.test_navori' from '/home/damian/Malambo/api/test/test_navori.py'> may need setup
nose.suite: DEBUG: ancestor <module 'api.test.test_navori' from '/home/damian/Malambo/api/test/test_navori.py'> does need setup
nose.suite: DEBUG: <nose.suite.ContextSuite context=api.test.test_navori> setup context <module 'api.test.test_navori' from '/home/damian/Malambo/api/test/test_navori.py'>
nose.suite: DEBUG: completed suite setup
nose.suite: DEBUG: precache is [<nose.suite.ContextSuite context=api.test.test_navori>]
nose.suite: DEBUG: suite 140176380618128 (<nose.suite.ContextSuite context=api.test.test_navori>) run called, tests: <generator object _get_wrapped_tests at 0x7f7d5b11b140>
nose.suite: DEBUG: suite 140176380618128 setUp called, tests: <generator object _get_wrapped_tests at 0x7f7d5b11b140>
nose.suite: DEBUG: tests in 140176380618128?
nose.suite: DEBUG: ancestor <module 'api' from '/home/damian/Malambo/api/__init__.pyc'> may need setup
nose.suite: DEBUG: ancestor <module 'api.test' from '/home/damian/Malambo/api/test/__init__.pyc'> may need setup
nose.suite: DEBUG: ancestor <module 'api.test.test_navori' from '/home/damian/Malambo/api/test/test_navori.py'> may need setup
nose.suite: DEBUG: completed suite setup
nose.suite: DEBUG: precache is [<nose.suite.ContextSuite context=NavoriTest>]
nose.suite: DEBUG: suite 140176380619536 (<nose.suite.ContextSuite context=NavoriTest>) run called, tests: <generator object _get_wrapped_tests at 0x7f7d5b11ba00>
nose.suite: DEBUG: suite 140176380619536 setUp called, tests: <generator object _get_wrapped_tests at 0x7f7d5b11ba00>
nose.suite: DEBUG: tests in 140176380619536?
nose.suite: DEBUG: ancestor <module 'api' from '/home/damian/Malambo/api/__init__.pyc'> may need setup
nose.suite: DEBUG: ancestor <module 'api.test' from '/home/damian/Malambo/api/test/__init__.pyc'> may need setup
nose.suite: DEBUG: ancestor <module 'api.test.test_navori' from '/home/damian/Malambo/api/test/test_navori.py'> may need setup
nose.suite: DEBUG: ancestor <class 'api.test.test_navori.NavoriTest'> may need setup
nose.suite: DEBUG: ancestor <class 'api.test.test_navori.NavoriTest'> does need setup
nose.suite: DEBUG: <nose.suite.ContextSuite context=NavoriTest> setup context <class 'api.test.test_navori.NavoriTest'>
nose: DEBUG: call fixture <class 'api.test.test_navori.NavoriTest'>.setUpClass
nose.suite: DEBUG: completed suite setup
nose.suite: DEBUG: precache is [Test(<api.test.test_navori.NavoriTest testMethod=test_NavoriLogin>)]
nose.suite: DEBUG: context teardown
nose.suite: DEBUG: ancestor <class 'api.test.test_navori.NavoriTest'> may need teardown
nose.suite: DEBUG: <nose.suite.ContextSuite context=NavoriTest> setup ancestor <class 'api.test.test_navori.NavoriTest'>
nose.suite: DEBUG: <nose.suite.ContextSuite context=NavoriTest> teardown context <class 'api.test.test_navori.NavoriTest'>
nose: DEBUG: call fixture <class 'api.test.test_navori.NavoriTest'>.tearDownClass
nose.suite: DEBUG: ancestor <module 'api.test.test_navori' from '/home/damian/Malambo/api/test/test_navori.py'> may need teardown
nose.suite: DEBUG: <nose.suite.ContextSuite context=api.test.test_navori> setup ancestor <module 'api.test.test_navori' from '/home/damian/Malambo/api/test/test_navori.py'>
nose.suite: DEBUG: ancestor <module 'api.test' from '/home/damian/Malambo/api/test/__init__.pyc'> may need teardown
nose.suite: DEBUG: <nose.suite.ContextSuite context=api.test.test_navori> setup ancestor <module 'api.test' from '/home/damian/Malambo/api/test/__init__.pyc'>
nose.suite: DEBUG: ancestor <module 'api' from '/home/damian/Malambo/api/__init__.pyc'> may need teardown
nose.suite: DEBUG: <nose.suite.ContextSuite context=api.test.test_navori> setup ancestor <module 'api' from '/home/damian/Malambo/api/__init__.pyc'>
nose.suite: DEBUG: ancestor <class 'api.test.test_navori.NavoriTest'> may need teardown
nose.suite: DEBUG: ancestor <class 'api.test.test_navori.NavoriTest'> already torn down
nose.suite: DEBUG: context teardown
nose.suite: DEBUG: ancestor <module 'api.test.test_navori' from '/home/damian/Malambo/api/test/test_navori.py'> may need teardown
nose.suite: DEBUG: <nose.suite.ContextSuite context=api.test.test_navori> setup ancestor <module 'api.test.test_navori' from '/home/damian/Malambo/api/test/test_navori.py'>
nose.suite: DEBUG: ancestor <module 'api.test' from '/home/damian/Malambo/api/test/__init__.pyc'> may need teardown
nose.suite: DEBUG: <nose.suite.ContextSuite context=api.test.test_navori> setup ancestor <module 'api.test' from '/home/damian/Malambo/api/test/__init__.pyc'>
nose.suite: DEBUG: ancestor <module 'api' from '/home/damian/Malambo/api/__init__.pyc'> may need teardown
nose.suite: DEBUG: <nose.suite.ContextSuite context=api.test.test_navori> setup ancestor <module 'api' from '/home/damian/Malambo/api/__init__.pyc'>
nose.suite: DEBUG: ancestor <module 'api.test.test_navori' from '/home/damian/Malambo/api/test/test_navori.py'> may need teardown
nose.suite: DEBUG: <nose.suite.ContextSuite context=api.test.test_navori> setup ancestor <module 'api.test.test_navori' from '/home/damian/Malambo/api/test/test_navori.py'>
nose.suite: DEBUG: context teardown
nose.suite: DEBUG: ancestor <module 'api.test.test_navori' from '/home/damian/Malambo/api/test/test_navori.py'> may need teardown
nose.suite: DEBUG: <nose.suite.ContextSuite context=api.test.test_navori> setup ancestor <module 'api.test.test_navori' from '/home/damian/Malambo/api/test/test_navori.py'>
nose.suite: DEBUG: <nose.suite.ContextSuite context=api.test.test_navori> teardown context <module 'api.test.test_navori' from '/home/damian/Malambo/api/test/test_navori.py'>
nose.suite: DEBUG: ancestor <module 'api.test' from '/home/damian/Malambo/api/test/__init__.pyc'> may need teardown
nose.suite: DEBUG: <nose.suite.ContextSuite context=api.test.test_navori> setup ancestor <module 'api.test' from '/home/damian/Malambo/api/test/__init__.pyc'>
nose.suite: DEBUG: <nose.suite.ContextSuite context=api.test.test_navori> teardown context <module 'api.test' from '/home/damian/Malambo/api/test/__init__.pyc'>
nose.suite: DEBUG: ancestor <module 'api' from '/home/damian/Malambo/api/__init__.pyc'> may need teardown
nose.suite: DEBUG: <nose.suite.ContextSuite context=api.test.test_navori> setup ancestor <module 'api' from '/home/damian/Malambo/api/__init__.pyc'>
nose.suite: DEBUG: <nose.suite.ContextSuite context=api.test.test_navori> teardown context <module 'api' from '/home/damian/Malambo/api/__init__.pyc'>
nose.suite: DEBUG: ancestor <module 'api.test.test_navori' from '/home/damian/Malambo/api/test/test_navori.py'> may need teardown
nose.suite: DEBUG: ancestor <module 'api.test.test_navori' from '/home/damian/Malambo/api/test/test_navori.py'> already torn down
nose.config: INFO: Ignoring files matching ['^\\.', '^_', '^setup\\.py$']
nose.plugins.manager: DEBUG: Configuring plugins
nose.plugins.manager: DEBUG: Plugins enabled: [<nose.plugins.capture.Capture object at 0x7f4e65055410>, <nose.plugins.logcapture.LogCapture object at 0x7f4e65069810>, <nose.plugins.deprecated.Deprecated object at 0x7f4e65069d10>, <nose.plugins.skip.Skip object at 0x7f4e6451ad50>]
nose.core: DEBUG: configured Config(addPaths=True, args=(), configSection='nosetests', debug='nose,nose.importer', debugLog='nose_debug', env={}, exclude=None, files=[], firstPackageWins=False, getTestCaseNamesCompat=False, ignoreFiles=[<_sre.SRE_Pattern object at 0x7f4e66cc5ab0>, <_sre.SRE_Pattern object at 0x7f4e66c6ce30>, <_sre.SRE_Pattern object at 0x7f4e66d64ab0>], ignoreFilesDefaultStrings=['^\\.', '^_', '^setup\\.py$'], include=None, includeExe=False, logStream=<open file '<stderr>', mode 'w' at 0x7f4e66dac1e0>, loggingConfig=None, options=<Values at 0x7f4e6453b5f0: {'xunit_file': 'nosetests.xml', 'enable_plugin_allmodules': None, 'multiprocess_restartworker': False, 'loggingConfig': None, 'doctestExtension': None, 'doctest_tests': None, 'enable_plugin_xunit': None, 'logcapture_clear': False, 'stopOnError': False, 'enable_plugin_id': None, 'testNames': None, 'doctestOptions': None, 'exclude': [], 'byteCompile': True, 'ignoreFiles': [], 'logcapture': True, 'addPaths': True, 'capture': True, 'xunit_testsuite_name': 'nosetests', 'logcapture_level': 'NOTSET', 'cover_xml': None, 'py3where': None, 'noSkip': False, 'enable_plugin_isolation': None, 'logcapture_filters': None, 'collect_only': None, 'failed': False, 'version': False, 'eval_attr': None, 'include': [], 'enable_plugin_profile': None, 'debugErrors': False, 'files': None, 'cover_tests': None, 'multiprocess_timeout': 10, 'testMatch': '(?:^|[\\b_\\./-])[Tt]est', 'traverseNamespace': False, 'firstPackageWins': False, 'cover_html_dir': 'cover', 'cover_branches': None, 'debugBoth': False, 'noDeprecated': False, 'cover_xml_file': 'coverage.xml', 'showPlugins': False, 'cover_erase': None, 'multiprocess_workers': 0, 'testIdFile': '.noseids', 'enable_plugin_coverage': None, 'attr': None, 'profile_sort': 'cumulative', 'doctestFixtures': None, 'logcapture_datefmt': None, 'cover_packages': None, 'verbosity': 1, 'enable_plugin_doctest': None, 'profile_stats_file': None, 'cover_inclusive': None, 'includeExe': False, 'logcapture_format': '%(name)s: %(levelname)s: %(message)s', 'debugFailures': False, 'detailedErrors': None, 'debugLog': 'nose_debug', 'doctest_result_var': None, 'cover_html': None, 'debug': 'nose,nose.importer', 'cover_min_percentage': None, 'where': None, 'profile_restrict': None}>, parser=<optparse.OptionParser instance at 0x7f4e65052f38>, parserClass=<class optparse.OptionParser at 0x7f4e656eef58>, plugins=<nose.plugins.manager.DefaultPluginManager object at 0x7f4e6504ded0>, py3where=(), runOnInit=True, srcDirs=('lib', 'src'), stopOnError=False, stream=<open file '<stderr>', mode 'w' at 0x7f4e66dac1e0>, testMatch=<_sre.SRE_Pattern object at 0x7f4e65058030>, testMatchPat='(?:^|[\\b_\\./-])[Tt]est', testNames=['test_navori.py'], traverseNamespace=False, verbosity=1, where=(), worker=False, workingDir='/home/damian/Malambo/api/test')
nose.importer: DEBUG: Add path /home/damian/Malambo/api/test
nose.importer: DEBUG: Add path /home/damian/Malambo/api
nose.importer: DEBUG: Add path /home/damian/Malambo
nose.importer: DEBUG: insert /home/damian/Malambo into sys.path
nose.core: DEBUG: test loader is <nose.loader.TestLoader object at 0x7f4e6453f0d0>
nose.core: DEBUG: defaultTest .
nose.core: DEBUG: Test names are ['test_navori.py']
nose.core: DEBUG: createTests called with None
nose.loader: DEBUG: load from test_navori.py (None)
nose.selector: DEBUG: Test name test_navori.py resolved to file test_navori.py, module None, call None
nose.selector: DEBUG: Final resolution of test name test_navori.py: file /home/damian/Malambo/api/test/test_navori.py module api.test.test_navori call None
nose.importer: DEBUG: Import api.test.test_navori from /home/damian/Malambo
nose.importer: DEBUG: Add path /home/damian/Malambo
nose.importer: DEBUG: find module part api (api) in ['/home/damian/Malambo']
nose.importer: DEBUG: find module part test (api.test) in ['/home/damian/Malambo/api']
nose.importer: DEBUG: find module part test_navori (api.test.test_navori) in ['/home/damian/Malambo/api/test']
nose.loader: DEBUG: Load from module <module 'api.test.test_navori' from '/home/damian/Malambo/api/test/test_navori.py'>
nose.selector: DEBUG: wantClass api.navori.navori.Navori? None
nose.selector: DEBUG: wantClass <class 'api.test.test_navori.NavoriTest'>? True
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.addCleanup>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.addTypeEqualityFunc>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.assertAlmostEqual>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.assertAlmostEqual>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.assertDictContainsSubset>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.assertDictEqual>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.assertEqual>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.assertEqual>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.assertFalse>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.assertGreater>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.assertGreaterEqual>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.assertIn>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.assertIs>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.assertIsInstance>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.assertIsNone>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.assertIsNot>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.assertIsNotNone>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.assertItemsEqual>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.assertLess>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.assertLessEqual>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.assertListEqual>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.assertMultiLineEqual>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.assertNotAlmostEqual>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.assertNotAlmostEqual>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.assertNotEqual>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.assertNotEqual>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.assertNotIn>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.assertNotIsInstance>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.assertNotRegexpMatches>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.assertRaises>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.assertRaisesRegexp>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.assertRegexpMatches>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.assertSequenceEqual>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.assertSetEqual>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.assertTrue>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.assertTupleEqual>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.assertTrue>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.countTestCases>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.debug>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.defaultTestResult>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.doCleanups>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.fail>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.deprecated_func>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.deprecated_func>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.deprecated_func>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.deprecated_func>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.deprecated_func>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.deprecated_func>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.deprecated_func>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.id>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.run>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.setUp>? None
nose.selector: DEBUG: wantMethod <bound method type.setUpClass of <class 'api.test.test_navori.NavoriTest'>>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.shortDescription>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.skipTest>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.tearDown>? None
nose.selector: DEBUG: wantMethod <bound method type.tearDownClass of <class 'api.test.test_navori.NavoriTest'>>? None
nose.selector: DEBUG: wantMethod <unbound method NavoriTest.test_NavoriLogin>? True
nose.suite: DEBUG: Create suite for [<api.test.test_navori.NavoriTest testMethod=test_NavoriLogin>]
nose.suite: DEBUG: tests [<api.test.test_navori.NavoriTest testMethod=test_NavoriLogin>] context None
nose.suite: DEBUG: wrap [<api.test.test_navori.NavoriTest testMethod=test_NavoriLogin>]
nose.suite: DEBUG: wrapping test_NavoriLogin (api.test.test_navori.NavoriTest)
nose.suite: DEBUG: Context suite for [Test(<api.test.test_navori.NavoriTest testMethod=test_NavoriLogin>)] (<class 'api.test.test_navori.NavoriTest'>) (139974667402000)
nose.suite: DEBUG: suite <nose.suite.ContextSuite context=NavoriTest> has context NavoriTest
nose.suite: DEBUG: get ancestry <class 'api.test.test_navori.NavoriTest'>
nose.suite: DEBUG:  <class 'api.test.test_navori.NavoriTest'> ancestors ['api', 'test', 'test_navori']
nose: DEBUG: __import__ api.test.test_navori
nose: DEBUG: resolve: ['test', 'test_navori'], api.test.test_navori, <module 'api' from '/home/damian/Malambo/api/__init__.pyc'>, <module 'api' from '/home/damian/Malambo/api/__init__.pyc'>
nose.suite: DEBUG: suite <nose.suite.ContextSuite context=NavoriTest> has ancestor api.test.test_navori
nose.suite: DEBUG:  <class 'api.test.test_navori.NavoriTest'> ancestors ['api', 'test']
nose: DEBUG: __import__ api.test
nose: DEBUG: resolve: ['test'], api.test, <module 'api' from '/home/damian/Malambo/api/__init__.pyc'>, <module 'api' from '/home/damian/Malambo/api/__init__.pyc'>
nose.suite: DEBUG: suite <nose.suite.ContextSuite context=NavoriTest> has ancestor api.test
nose.suite: DEBUG:  <class 'api.test.test_navori.NavoriTest'> ancestors ['api']
nose: DEBUG: __import__ api
nose: DEBUG: resolve: [], api, <module 'api' from '/home/damian/Malambo/api/__init__.pyc'>, <module 'api' from '/home/damian/Malambo/api/__init__.pyc'>
nose.suite: DEBUG: suite <nose.suite.ContextSuite context=NavoriTest> has ancestor api
nose.suite: DEBUG: Create suite for <nose.suite.ContextList object at 0x7f4e63d63710>
nose.suite: DEBUG: tests <nose.suite.ContextList object at 0x7f4e63d63710> context <module 'api.test.test_navori' from '/home/damian/Malambo/api/test/test_navori.py'>
nose.suite: DEBUG: Context suite for <nose.suite.ContextList object at 0x7f4e63d63710> (<module 'api.test.test_navori' from '/home/damian/Malambo/api/test/test_navori.py'>) (139974667400592)
nose.suite: DEBUG: suite <nose.suite.ContextSuite context=api.test.test_navori> has context api.test.test_navori
nose.suite: DEBUG: get ancestry <module 'api.test.test_navori' from '/home/damian/Malambo/api/test/test_navori.py'>
nose.suite: DEBUG:  <module 'api.test.test_navori' from '/home/damian/Malambo/api/test/test_navori.py'> ancestors ['api', 'test']
nose: DEBUG: __import__ api.test
nose: DEBUG: resolve: ['test'], api.test, <module 'api' from '/home/damian/Malambo/api/__init__.pyc'>, <module 'api' from '/home/damian/Malambo/api/__init__.pyc'>
nose.suite: DEBUG: suite <nose.suite.ContextSuite context=api.test.test_navori> has ancestor api.test
nose.suite: DEBUG:  <module 'api.test.test_navori' from '/home/damian/Malambo/api/test/test_navori.py'> ancestors ['api']
nose: DEBUG: __import__ api
nose: DEBUG: resolve: [], api, <module 'api' from '/home/damian/Malambo/api/__init__.pyc'>, <module 'api' from '/home/damian/Malambo/api/__init__.pyc'>
nose.suite: DEBUG: suite <nose.suite.ContextSuite context=api.test.test_navori> has ancestor api
nose.suite: DEBUG: Create suite for [<nose.suite.ContextSuite context=api.test.test_navori>]
nose.suite: DEBUG: tests [<nose.suite.ContextSuite context=api.test.test_navori>] context None
nose.suite: DEBUG: wrap [<nose.suite.ContextSuite context=api.test.test_navori>]
nose.suite: DEBUG: wrapping <nose.suite.ContextSuite context=api.test.test_navori>
nose.suite: DEBUG: Context suite for [<nose.suite.ContextSuite context=api.test.test_navori>] (<module 'api.test.test_navori' from '/home/damian/Malambo/api/test/test_navori.py'>) (139974667400336)
nose.suite: DEBUG: suite <nose.suite.ContextSuite context=api.test.test_navori> has context api.test.test_navori
nose.suite: DEBUG: get ancestry <module 'api.test.test_navori' from '/home/damian/Malambo/api/test/test_navori.py'>
nose.suite: DEBUG:  <module 'api.test.test_navori' from '/home/damian/Malambo/api/test/test_navori.py'> ancestors ['api', 'test']
nose: DEBUG: __import__ api.test
nose: DEBUG: resolve: ['test'], api.test, <module 'api' from '/home/damian/Malambo/api/__init__.pyc'>, <module 'api' from '/home/damian/Malambo/api/__init__.pyc'>
nose.suite: DEBUG: suite <nose.suite.ContextSuite context=api.test.test_navori> has ancestor api.test
nose.suite: DEBUG:  <module 'api.test.test_navori' from '/home/damian/Malambo/api/test/test_navori.py'> ancestors ['api']
nose: DEBUG: __import__ api
nose: DEBUG: resolve: [], api, <module 'api' from '/home/damian/Malambo/api/__init__.pyc'>, <module 'api' from '/home/damian/Malambo/api/__init__.pyc'>
nose.suite: DEBUG: suite <nose.suite.ContextSuite context=api.test.test_navori> has ancestor api
nose.core: DEBUG: runTests called
nose.suite: DEBUG: suite 139974667400336 (<nose.suite.ContextSuite context=api.test.test_navori>) run called, tests: <generator object _get_wrapped_tests at 0x7f4e640640f0>
nose.suite: DEBUG: suite 139974667400336 setUp called, tests: <generator object _get_wrapped_tests at 0x7f4e640640f0>
nose.suite: DEBUG: tests in 139974667400336?
nose.suite: DEBUG: ancestor <module 'api' from '/home/damian/Malambo/api/__init__.pyc'> may need setup
nose.suite: DEBUG: ancestor <module 'api' from '/home/damian/Malambo/api/__init__.pyc'> does need setup
nose.suite: DEBUG: <nose.suite.ContextSuite context=api.test.test_navori> setup context <module 'api' from '/home/damian/Malambo/api/__init__.pyc'>
nose.suite: DEBUG: ancestor <module 'api.test' from '/home/damian/Malambo/api/test/__init__.pyc'> may need setup
nose.suite: DEBUG: ancestor <module 'api.test' from '/home/damian/Malambo/api/test/__init__.pyc'> does need setup
nose.suite: DEBUG: <nose.suite.ContextSuite context=api.test.test_navori> setup context <module 'api.test' from '/home/damian/Malambo/api/test/__init__.pyc'>
nose.suite: DEBUG: ancestor <module 'api.test.test_navori' from '/home/damian/Malambo/api/test/test_navori.py'> may need setup
nose.suite: DEBUG: ancestor <module 'api.test.test_navori' from '/home/damian/Malambo/api/test/test_navori.py'> does need setup
nose.suite: DEBUG: <nose.suite.ContextSuite context=api.test.test_navori> setup context <module 'api.test.test_navori' from '/home/damian/Malambo/api/test/test_navori.py'>
nose.suite: DEBUG: completed suite setup
nose.suite: DEBUG: precache is [<nose.suite.ContextSuite context=api.test.test_navori>]
nose.suite: DEBUG: suite 139974667400592 (<nose.suite.ContextSuite context=api.test.test_navori>) run called, tests: <generator object _get_wrapped_tests at 0x7f4e64064230>
nose.suite: DEBUG: suite 139974667400592 setUp called, tests: <generator object _get_wrapped_tests at 0x7f4e64064230>
nose.suite: DEBUG: tests in 139974667400592?
nose.suite: DEBUG: ancestor <module 'api' from '/home/damian/Malambo/api/__init__.pyc'> may need setup
nose.suite: DEBUG: ancestor <module 'api.test' from '/home/damian/Malambo/api/test/__init__.pyc'> may need setup
nose.suite: DEBUG: ancestor <module 'api.test.test_navori' from '/home/damian/Malambo/api/test/test_navori.py'> may need setup
nose.suite: DEBUG: completed suite setup
nose.suite: DEBUG: precache is [<nose.suite.ContextSuite context=NavoriTest>]
nose.suite: DEBUG: suite 139974667402000 (<nose.suite.ContextSuite context=NavoriTest>) run called, tests: <generator object _get_wrapped_tests at 0x7f4e64064a50>
nose.suite: DEBUG: suite 139974667402000 setUp called, tests: <generator object _get_wrapped_tests at 0x7f4e64064a50>
nose.suite: DEBUG: tests in 139974667402000?
nose.suite: DEBUG: ancestor <module 'api' from '/home/damian/Malambo/api/__init__.pyc'> may need setup
nose.suite: DEBUG: ancestor <module 'api.test' from '/home/damian/Malambo/api/test/__init__.pyc'> may need setup
nose.suite: DEBUG: ancestor <module 'api.test.test_navori' from '/home/damian/Malambo/api/test/test_navori.py'> may need setup
nose.suite: DEBUG: ancestor <class 'api.test.test_navori.NavoriTest'> may need setup
nose.suite: DEBUG: ancestor <class 'api.test.test_navori.NavoriTest'> does need setup
nose.suite: DEBUG: <nose.suite.ContextSuite context=NavoriTest> setup context <class 'api.test.test_navori.NavoriTest'>
nose: DEBUG: call fixture <class 'api.test.test_navori.NavoriTest'>.setUpClass
nose.suite: DEBUG: completed suite setup
nose.suite: DEBUG: precache is [Test(<api.test.test_navori.NavoriTest testMethod=test_NavoriLogin>)]
nose.suite: DEBUG: context teardown
nose.suite: DEBUG: ancestor <class 'api.test.test_navori.NavoriTest'> may need teardown
nose.suite: DEBUG: <nose.suite.ContextSuite context=NavoriTest> setup ancestor <class 'api.test.test_navori.NavoriTest'>
nose.suite: DEBUG: <nose.suite.ContextSuite context=NavoriTest> teardown context <class 'api.test.test_navori.NavoriTest'>
nose: DEBUG: call fixture <class 'api.test.test_navori.NavoriTest'>.tearDownClass
nose.suite: DEBUG: ancestor <module 'api.test.test_navori' from '/home/damian/Malambo/api/test/test_navori.py'> may need teardown
nose.suite: DEBUG: <nose.suite.ContextSuite context=api.test.test_navori> setup ancestor <module 'api.test.test_navori' from '/home/damian/Malambo/api/test/test_navori.py'>
nose.suite: DEBUG: ancestor <module 'api.test' from '/home/damian/Malambo/api/test/__init__.pyc'> may need teardown
nose.suite: DEBUG: <nose.suite.ContextSuite context=api.test.test_navori> setup ancestor <module 'api.test' from '/home/damian/Malambo/api/test/__init__.pyc'>
nose.suite: DEBUG: ancestor <module 'api' from '/home/damian/Malambo/api/__init__.pyc'> may need teardown
nose.suite: DEBUG: <nose.suite.ContextSuite context=api.test.test_navori> setup ancestor <module 'api' from '/home/damian/Malambo/api/__init__.pyc'>
nose.suite: DEBUG: ancestor <class 'api.test.test_navori.NavoriTest'> may need teardown
nose.suite: DEBUG: ancestor <class 'api.test.test_navori.NavoriTest'> already torn down
nose.suite: DEBUG: context teardown
nose.suite: DEBUG: ancestor <module 'api.test.test_navori' from '/home/damian/Malambo/api/test/test_navori.py'> may need teardown
nose.suite: DEBUG: <nose.suite.ContextSuite context=api.test.test_navori> setup ancestor <module 'api.test.test_navori' from '/home/damian/Malambo/api/test/test_navori.py'>
nose.suite: DEBUG: ancestor <module 'api.test' from '/home/damian/Malambo/api/test/__init__.pyc'> may need teardown
nose.suite: DEBUG: <nose.suite.ContextSuite context=api.test.test_navori> setup ancestor <module 'api.test' from '/home/damian/Malambo/api/test/__init__.pyc'>
nose.suite: DEBUG: ancestor <module 'api' from '/home/damian/Malambo/api/__init__.pyc'> may need teardown
nose.suite: DEBUG: <nose.suite.ContextSuite context=api.test.test_navori> setup ancestor <module 'api' from '/home/damian/Malambo/api/__init__.pyc'>
nose.suite: DEBUG: ancestor <module 'api.test.test_navori' from '/home/damian/Malambo/api/test/test_navori.py'> may need teardown
nose.suite: DEBUG: <nose.suite.ContextSuite context=api.test.test_navori> setup ancestor <module 'api.test.test_navori' from '/home/damian/Malambo/api/test/test_navori.py'>
nose.suite: DEBUG: context teardown
nose.suite: DEBUG: ancestor <module 'api.test.test_navori' from '/home/damian/Malambo/api/test/test_navori.py'> may need teardown
nose.suite: DEBUG: <nose.suite.ContextSuite context=api.test.test_navori> setup ancestor <module 'api.test.test_navori' from '/home/damian/Malambo/api/test/test_navori.py'>
nose.suite: DEBUG: <nose.suite.ContextSuite context=api.test.test_navori> teardown context <module 'api.test.test_navori' from '/home/damian/Malambo/api/test/test_navori.py'>
nose.suite: DEBUG: ancestor <module 'api.test' from '/home/damian/Malambo/api/test/__init__.pyc'> may need teardown
nose.suite: DEBUG: <nose.suite.ContextSuite context=api.test.test_navori> setup ancestor <module 'api.test' from '/home/damian/Malambo/api/test/__init__.pyc'>
nose.suite: DEBUG: <nose.suite.ContextSuite context=api.test.test_navori> teardown context <module 'api.test' from '/home/damian/Malambo/api/test/__init__.pyc'>
nose.suite: DEBUG: ancestor <module 'api' from '/home/damian/Malambo/api/__init__.pyc'> may need teardown
nose.suite: DEBUG: <nose.suite.ContextSuite context=api.test.test_navori> setup ancestor <module 'api' from '/home/damian/Malambo/api/__init__.pyc'>
nose.suite: DEBUG: <nose.suite.ContextSuite context=api.test.test_navori> teardown context <module 'api' from '/home/damian/Malambo/api/__init__.pyc'>
nose.suite: DEBUG: ancestor <module 'api.test.test_navori' from '/home/damian/Malambo/api/test/test_navori.py'> may need teardown
nose.suite: DEBUG: ancestor <module 'api.test.test_navori' from '/home/damian/Malambo/api/test/test_navori.py'> already torn down
